{"version":3,"file":"vexflow-leland.js","mappings":"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","sources":["webpack://Vex/webpack/universalModuleDefinition","webpack://Vex/webpack/bootstrap","webpack://Vex/webpack/runtime/define property getters","webpack://Vex/webpack/runtime/global","webpack://Vex/webpack/runtime/hasOwnProperty shorthand","webpack://Vex/webpack/runtime/make namespace object","webpack://Vex/./src/typeguard.ts","webpack://Vex/./src/util.ts","webpack://Vex/./src/fraction.ts","webpack://Vex/./src/boundingbox.ts","webpack://Vex/./src/boundingboxcomputation.ts","webpack://Vex/./src/font.ts","webpack://Vex/./src/registry.ts","webpack://Vex/./src/element.ts","webpack://Vex/./src/tables.ts","webpack://Vex/./src/glyph.ts","webpack://Vex/./src/modifier.ts","webpack://Vex/./src/music.ts","webpack://Vex/./src/accidental.ts","webpack://Vex/./src/stem.ts","webpack://Vex/./src/textformatter.ts","webpack://Vex/./src/annotation.ts","webpack://Vex/./src/articulation.ts","webpack://Vex/./src/rendercontext.ts","webpack://Vex/./src/tickable.ts","webpack://Vex/./src/note.ts","webpack://Vex/./src/stavemodifier.ts","webpack://Vex/./src/stavebarline.ts","webpack://Vex/./src/chordsymbol.ts","webpack://Vex/./src/barnote.ts","webpack://Vex/./src/bend.ts","webpack://Vex/./src/dot.ts","webpack://Vex/./src/frethandfinger.ts","webpack://Vex/./src/notehead.ts","webpack://Vex/./src/stemmablenote.ts","webpack://Vex/./src/stavenote.ts","webpack://Vex/./src/stavetie.ts","webpack://Vex/./src/tabtie.ts","webpack://Vex/./src/voice.ts","webpack://Vex/./src/gracenotegroup.ts","webpack://Vex/./src/notesubgroup.ts","webpack://Vex/./src/ornament.ts","webpack://Vex/./src/parenthesis.ts","webpack://Vex/./src/web.ts","webpack://Vex/./src/canvascontext.ts","webpack://Vex/./src/svgcontext.ts","webpack://Vex/./src/renderer.ts","webpack://Vex/./src/textnote.ts","webpack://Vex/./src/stavevolta.ts","webpack://Vex/./src/stringnumber.ts","webpack://Vex/./src/strokes.ts","webpack://Vex/./src/vibrato.ts","webpack://Vex/./src/modifiercontext.ts","webpack://Vex/./src/clef.ts","webpack://Vex/./src/keysignature.ts","webpack://Vex/./src/staverepetition.ts","webpack://Vex/./src/stavesection.ts","webpack://Vex/./src/stavetempo.ts","webpack://Vex/./src/stavetext.ts","webpack://Vex/./src/timesigglyph.ts","webpack://Vex/./src/timesignature.ts","webpack://Vex/./src/stave.ts","webpack://Vex/./src/staveconnector.ts","webpack://Vex/./src/tickcontext.ts","webpack://Vex/./src/formatter.ts","webpack://Vex/./src/tuplet.ts","webpack://Vex/./src/beam.ts","webpack://Vex/./src/clefnote.ts","webpack://Vex/./src/crescendo.ts","webpack://Vex/./src/curve.ts","webpack://Vex/./src/parser.ts","webpack://Vex/./src/easyscore.ts","webpack://Vex/./src/ghostnote.ts","webpack://Vex/./src/glyphnote.ts","webpack://Vex/./src/gracenote.ts","webpack://Vex/./src/keysignote.ts","webpack://Vex/./src/multimeasurerest.ts","webpack://Vex/./src/pedalmarking.ts","webpack://Vex/./src/repeatnote.ts","webpack://Vex/./src/staveline.ts","webpack://Vex/./src/system.ts","webpack://Vex/./src/tabnote.ts","webpack://Vex/./src/tabstave.ts","webpack://Vex/./src/textbracket.ts","webpack://Vex/./src/textdynamics.ts","webpack://Vex/./src/timesignote.ts","webpack://Vex/./src/vibratobracket.ts","webpack://Vex/./src/factory.ts","webpack://Vex/./src/gracetabnote.ts","webpack://Vex/./src/keymanager.ts","webpack://Vex/./src/stavehairpin.ts","webpack://Vex/./src/tabslide.ts","webpack://Vex/./src/tremolo.ts","webpack://Vex/./src/tuning.ts","webpack://Vex/./src/flow.ts","webpack://Vex/./src/version.ts","webpack://Vex/./src/fonts/common_metrics.ts","webpack://Vex/./src/fonts/custom_glyphs.ts","webpack://Vex/./src/fonts/leland_glyphs.ts","webpack://Vex/./src/fonts/petalumascript_glyphs.ts","webpack://Vex/./src/fonts/robotoslab_glyphs.ts","webpack://Vex/./src/fonts/sans_bold_text_metrics.ts","webpack://Vex/./src/fonts/sans_text_metrics.ts","webpack://Vex/./src/fonts/serif_text_metrics.ts","webpack://Vex/./src/vex.ts","webpack://Vex/./src/fonts/load_leland.ts","webpack://Vex/./src/fonts/load_custom.ts","webpack://Vex/./entry/vexflow-leland.ts","webpack://Vex/./src/fonts/textfonts.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vex\"] = factory();\n\telse\n\t\troot[\"Vex\"] = factory();\n})((typeof window !== 'undefined' ? window : typeof globalThis !== 'undefined' ? globalThis : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * Use instead of `instanceof` as a more flexible type guard.\n * @param obj check if this object's CATEGORY matches the provided category.\n * @param category a string representing a category of VexFlow objects.\n * @param checkAncestors defaults to `true`, so we walk up the prototype chain to look for a matching `CATEGORY`.\n *        If `false`, we do not check the superclass or other ancestors.\n * @returns true if `obj` has a static `CATEGORY` property that matches `category`.\n */\nexport function isCategory(obj, category, checkAncestors = true) {\n    // obj is undefined, a number, a primitive string, or null.\n    if (typeof obj !== 'object' || obj === null) {\n        return false;\n    }\n    // `obj.constructor` is a reference to the constructor function that created the `obj` instance.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\n    let constructorFcn = obj.constructor;\n    // Check if the object's static .CATEGORY matches the provided category.\n    if (checkAncestors) {\n        // Walk up the prototype chain to look for a matching obj.constructor.CATEGORY.\n        while (obj !== null) {\n            constructorFcn = obj.constructor;\n            if ('CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category) {\n                return true;\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return false;\n    }\n    else {\n        // Do not walk up the prototype chain. Just check this particular object's static .CATEGORY string.\n        return 'CATEGORY' in constructorFcn && constructorFcn.CATEGORY === category;\n    }\n}\nexport const isAccidental = (obj) => isCategory(obj, Category.Accidental);\nexport const isAnnotation = (obj) => isCategory(obj, Category.Annotation);\nexport const isBarline = (obj) => isCategory(obj, Category.Barline);\nexport const isDot = (obj) => isCategory(obj, Category.Dot);\nexport const isGraceNote = (obj) => isCategory(obj, Category.GraceNote);\nexport const isGraceNoteGroup = (obj) => isCategory(obj, Category.GraceNoteGroup);\nexport const isNote = (obj) => isCategory(obj, Category.Note);\nexport const isRenderContext = (obj) => isCategory(obj, Category.RenderContext);\nexport const isStaveNote = (obj) => isCategory(obj, Category.StaveNote);\nexport const isStemmableNote = (obj) => isCategory(obj, Category.StemmableNote);\nexport const isTabNote = (obj) => isCategory(obj, Category.TabNote);\n// 'const' enums are erased by the TypeScript compiler. The string values are inlined at all the use sites.\n// See: https://www.typescriptlang.org/docs/handbook/enums.html#const-enums\nexport var Category;\n(function (Category) {\n    Category[\"Accidental\"] = \"Accidental\";\n    Category[\"Annotation\"] = \"Annotation\";\n    Category[\"Articulation\"] = \"Articulation\";\n    Category[\"Barline\"] = \"Barline\";\n    Category[\"BarNote\"] = \"BarNote\";\n    Category[\"Beam\"] = \"Beam\";\n    Category[\"Bend\"] = \"Bend\";\n    Category[\"ChordSymbol\"] = \"ChordSymbol\";\n    Category[\"Clef\"] = \"Clef\";\n    Category[\"ClefNote\"] = \"ClefNote\";\n    Category[\"Crescendo\"] = \"Crescendo\";\n    Category[\"Curve\"] = \"Curve\";\n    Category[\"Dot\"] = \"Dot\";\n    Category[\"Element\"] = \"Element\";\n    Category[\"Fraction\"] = \"Fraction\";\n    Category[\"FretHandFinger\"] = \"FretHandFinger\";\n    Category[\"GhostNote\"] = \"GhostNote\";\n    Category[\"Glyph\"] = \"Glyph\";\n    Category[\"GlyphNote\"] = \"GlyphNote\";\n    Category[\"GraceNote\"] = \"GraceNote\";\n    Category[\"GraceNoteGroup\"] = \"GraceNoteGroup\";\n    Category[\"GraceTabNote\"] = \"GraceTabNote\";\n    Category[\"KeySignature\"] = \"KeySignature\";\n    Category[\"KeySigNote\"] = \"KeySigNote\";\n    Category[\"Modifier\"] = \"Modifier\";\n    Category[\"MultiMeasureRest\"] = \"MultiMeasureRest\";\n    Category[\"Note\"] = \"Note\";\n    Category[\"NoteHead\"] = \"NoteHead\";\n    Category[\"NoteSubGroup\"] = \"NoteSubGroup\";\n    Category[\"Ornament\"] = \"Ornament\";\n    Category[\"Parenthesis\"] = \"Parenthesis\";\n    Category[\"PedalMarking\"] = \"PedalMarking\";\n    Category[\"RenderContext\"] = \"RenderContext\";\n    Category[\"RepeatNote\"] = \"RepeatNote\";\n    Category[\"Repetition\"] = \"Repetition\";\n    Category[\"Stave\"] = \"Stave\";\n    Category[\"StaveConnector\"] = \"StaveConnector\";\n    Category[\"StaveHairpin\"] = \"StaveHairpin\";\n    Category[\"StaveLine\"] = \"StaveLine\";\n    Category[\"StaveModifier\"] = \"StaveModifier\";\n    Category[\"StaveNote\"] = \"StaveNote\";\n    Category[\"StaveSection\"] = \"StaveSection\";\n    Category[\"StaveTempo\"] = \"StaveTempo\";\n    Category[\"StaveText\"] = \"StaveText\";\n    Category[\"StaveTie\"] = \"StaveTie\";\n    Category[\"Stem\"] = \"Stem\";\n    Category[\"StemmableNote\"] = \"StemmableNote\";\n    Category[\"StringNumber\"] = \"StringNumber\";\n    Category[\"Stroke\"] = \"Stroke\";\n    Category[\"System\"] = \"System\";\n    Category[\"TabNote\"] = \"TabNote\";\n    Category[\"TabSlide\"] = \"TabSlide\";\n    Category[\"TabStave\"] = \"TabStave\";\n    Category[\"TabTie\"] = \"TabTie\";\n    Category[\"TextBracket\"] = \"TextBracket\";\n    Category[\"TextDynamics\"] = \"TextDynamics\";\n    Category[\"TextNote\"] = \"TextNote\";\n    Category[\"Tickable\"] = \"Tickable\";\n    Category[\"TimeSignature\"] = \"TimeSignature\";\n    Category[\"TimeSigNote\"] = \"TimeSigNote\";\n    Category[\"Tremolo\"] = \"Tremolo\";\n    Category[\"Tuplet\"] = \"Tuplet\";\n    Category[\"Vibrato\"] = \"Vibrato\";\n    Category[\"VibratoBracket\"] = \"VibratoBracket\";\n    Category[\"Voice\"] = \"Voice\";\n    Category[\"Volta\"] = \"Volta\";\n})(Category || (Category = {}));\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// Note: Keep this module free of imports to reduce the chance of circular dependencies.\n/** `RuntimeError` will be thrown by VexFlow classes in case of error. */\nexport class RuntimeError extends Error {\n    constructor(code, message = '') {\n        super('[RuntimeError] ' + code + ': ' + message);\n        this.code = code;\n    }\n}\n/** VexFlow can be used outside of the browser (e.g., Node) where `window` may not be defined. */\n// eslint-disable-next-line\nexport function globalObject() {\n    if (typeof globalThis !== 'undefined') {\n        return globalThis;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    return Function('return this')();\n}\n/**\n * Check that `x` is of type `T` and not `undefined`.\n * If `x` is `undefined`, throw a RuntimeError with the optionally provided error code and message.\n */\nexport function defined(x, code = 'undefined', message = '') {\n    if (x === undefined) {\n        throw new RuntimeError(code, message);\n    }\n    return x;\n}\n/** Default log function sends all arguments to console. */\n// eslint-disable-next-line\nexport function log(block, ...args) {\n    if (!args)\n        return;\n    const line = Array.prototype.slice.call(args).join(' ');\n    globalObject().console.log(block + ': ' + line);\n}\n/** Dump warning to console. */\n// eslint-disable-next-line\nexport function warn(...args) {\n    const line = args.join(' ');\n    const err = new Error();\n    globalObject().console.log('Warning: ', line, err.stack);\n}\n/** Round number to nearest fractional value (`.5`, `.25`, etc.) */\nfunction roundN(x, n) {\n    return x % n >= n / 2 ? parseInt(`${x / n}`, 10) * n + n : parseInt(`${x / n}`, 10) * n;\n}\n/** Locate the mid point between stave lines. Returns a fractional line if a space. */\nexport function midLine(a, b) {\n    let mid_line = b + (a - b) / 2;\n    if (mid_line % 2 > 0) {\n        mid_line = roundN(mid_line * 10, 5) / 10;\n    }\n    return mid_line;\n}\n/**\n * Used by various classes (e.g., SVGContext) to provide a\n * unique prefix to element names (or other keys in shared namespaces).\n */\nexport function prefix(text) {\n    return `vf-${text}`;\n}\n/**\n * Convert an arbitrary angle in radians to the equivalent one in the range [0, pi).\n */\nexport function normalizeAngle(a) {\n    a = a % (2 * Math.PI);\n    if (a < 0) {\n        a += 2 * Math.PI;\n    }\n    return a;\n}\n/**\n * Return the sum of an array of numbers.\n */\nexport function sumArray(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// Author: Joshua Koo / @zz85\n// Author: @incompleteopus\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/** Fraction represents a rational number. */\nexport class Fraction {\n    static get CATEGORY() {\n        return Category.Fraction;\n    }\n    /**\n     * GCD: Greatest common divisor using the Euclidean algorithm.\n     * Note: GCD(0, 0) => 0 and GCD(0, n) => n.\n     */\n    static GCD(a, b) {\n        if (typeof a !== 'number' || Number.isNaN(a) || typeof b !== 'number' || Number.isNaN(b)) {\n            throw new RuntimeError('BadArgument', `Invalid numbers: ${a}, ${b}`);\n        }\n        let t;\n        while (b !== 0) {\n            t = b;\n            b = a % b;\n            a = t;\n        }\n        return a;\n    }\n    /** LCM: Lowest common multiple. */\n    static LCM(a, b) {\n        return (a * b) / Fraction.GCD(a, b);\n    }\n    /** Lowest common multiple for more than two numbers. */\n    static LCMM(args) {\n        if (args.length === 0) {\n            return 0;\n        }\n        else if (args.length === 1) {\n            return args[0];\n        }\n        else if (args.length === 2) {\n            return Fraction.LCM(args[0], args[1]);\n        }\n        else {\n            // args.shift() removes the first number.\n            // LCM the first number with the rest of the numbers.\n            return Fraction.LCM(args.shift(), Fraction.LCMM(args));\n        }\n    }\n    /** Set the numerator and denominator. */\n    constructor(numerator, denominator) {\n        this.numerator = 1;\n        this.denominator = 1;\n        this.set(numerator, denominator);\n    }\n    /** Set the numerator and denominator. */\n    set(numerator = 1, denominator = 1) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n        return this;\n    }\n    /** Return the value of the fraction. */\n    value() {\n        return this.numerator / this.denominator;\n    }\n    /** Simplify numerator and denominator using GCD. */\n    simplify() {\n        let u = this.numerator;\n        let d = this.denominator;\n        const gcd = Fraction.GCD(u, d);\n        u /= gcd;\n        d /= gcd;\n        if (d < 0) {\n            d = -d;\n            u = -u;\n        }\n        return this.set(u, d);\n    }\n    /** Add value of another fraction. */\n    add(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a + otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Substract value of another fraction. */\n    subtract(param1 = 0, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        const lcm = Fraction.LCM(this.denominator, otherDenominator);\n        const a = lcm / this.denominator;\n        const b = lcm / otherDenominator;\n        const u = this.numerator * a - otherNumerator * b;\n        return this.set(u, lcm);\n    }\n    /** Multiply by value of another fraction. */\n    multiply(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    }\n    /** Divide by value of another Fraction. */\n    divide(param1 = 1, param2 = 1) {\n        const [otherNumerator, otherDenominator] = getNumeratorAndDenominator(param1, param2);\n        return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    }\n    /** Simplify both sides and check if they are equal. */\n    equals(compare) {\n        const a = Fraction.__staticFractionA.copy(compare).simplify();\n        const b = Fraction.__staticFractionB.copy(this).simplify();\n        return a.numerator === b.numerator && a.denominator === b.denominator;\n    }\n    /** Greater than operator. */\n    greaterThan(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator > 0;\n    }\n    /** Greater than or equals operator. */\n    greaterThanEquals(compare) {\n        const a = Fraction.__staticFractionB.copy(this);\n        a.subtract(compare);\n        return a.numerator >= 0;\n    }\n    /** Less than operator. */\n    lessThan(compare) {\n        return !this.greaterThanEquals(compare);\n    }\n    /** Less than or equals operator. */\n    lessThanEquals(compare) {\n        return !this.greaterThan(compare);\n    }\n    /** Return a new copy with current values. */\n    clone() {\n        return new Fraction(this.numerator, this.denominator);\n    }\n    /** Copy value of another fraction. */\n    copy(other) {\n        if (typeof other === 'number') {\n            return this.set(other, 1);\n        }\n        else {\n            return this.set(other.numerator, other.denominator);\n        }\n    }\n    /** Return the integer component (eg. 5/2 => 2). */\n    quotient() {\n        return Math.floor(this.numerator / this.denominator);\n    }\n    /** Return the remainder component (eg. 5/2 => 1). */\n    remainder() {\n        return this.numerator % this.denominator;\n    }\n    /** Calculate absolute value. */\n    makeAbs() {\n        this.denominator = Math.abs(this.denominator);\n        this.numerator = Math.abs(this.numerator);\n        return this;\n    }\n    /** Return a raw string representation (eg. \"5/2\"). */\n    toString() {\n        return `${this.numerator}/${this.denominator}`;\n    }\n    /** Return a simplified string respresentation. */\n    toSimplifiedString() {\n        return Fraction.__staticFractionTmp.copy(this).simplify().toString();\n    }\n    /** Return string representation in mixed form. */\n    toMixedString() {\n        let s = '';\n        const q = this.quotient();\n        const f = Fraction.__staticFractionTmp.copy(this);\n        if (q < 0) {\n            f.makeAbs();\n        }\n        if (q !== 0) {\n            s += q;\n            if (f.numerator !== 0) {\n                s += ` ${f.toSimplifiedString()}`;\n            }\n        }\n        else if (f.numerator === 0) {\n            s = '0';\n        }\n        else {\n            s = f.toSimplifiedString();\n        }\n        return s;\n    }\n    /** Parse a fraction string. */\n    parse(str) {\n        const i = str.split('/');\n        const n = parseInt(i[0], 10);\n        const d = i[1] ? parseInt(i[1], 10) : 1;\n        return this.set(n, d);\n    }\n}\n// Cached objects for comparisons.\nFraction.__staticFractionA = new Fraction();\nFraction.__staticFractionB = new Fraction();\nFraction.__staticFractionTmp = new Fraction();\n/** Helper function to extract the numerator and denominator from another fraction. */\nfunction getNumeratorAndDenominator(n, d = 1) {\n    if (typeof n === 'number') {\n        // Both params are numbers, so we return them as [numerator, denominator].\n        return [n, d];\n    }\n    else {\n        // First param is a Fraction object. We ignore the second param.\n        return [n.numerator, n.denominator];\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nexport class BoundingBox {\n    /**\n     * Create a new copy.\n     */\n    static copy(that) {\n        return new BoundingBox(that.x, that.y, that.w, that.h);\n    }\n    constructor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    /** Get x position. */\n    getX() {\n        return this.x;\n    }\n    /** Get y position. */\n    getY() {\n        return this.y;\n    }\n    /** Get width. */\n    getW() {\n        return this.w;\n    }\n    /** Get height. */\n    getH() {\n        return this.h;\n    }\n    /** Set x position. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Set y position. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Set width. */\n    setW(w) {\n        this.w = w;\n        return this;\n    }\n    /** Set height. */\n    setH(h) {\n        this.h = h;\n        return this;\n    }\n    /** Move to position. */\n    move(x, y) {\n        this.x += x;\n        this.y += y;\n        return this;\n    }\n    /** Clone. */\n    clone() {\n        return BoundingBox.copy(this);\n    }\n    /**\n     * Merge my box with given box. Creates a bigger bounding box unless\n     * the given box is contained in this one.\n     */\n    mergeWith(boundingBox) {\n        const that = boundingBox;\n        const new_x = this.x < that.x ? this.x : that.x;\n        const new_y = this.y < that.y ? this.y : that.y;\n        const new_w = Math.max(this.x + this.w, that.x + that.w) - new_x;\n        const new_h = Math.max(this.y + this.h, that.y + that.h) - new_y;\n        this.x = new_x;\n        this.y = new_y;\n        this.w = new_w;\n        this.h = new_h;\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n/**\n * BoundingBoxComputation computes metrics for a bounding box by continuously\n * taking canvas path commands.\n *\n * Warning: This class is merely a crutch to get bounding box information without\n * explicit metadata. This is likely to get deprecated following SMuFL support.\n *\n * based on: https://github.com/canvg/canvg/blob/master/src/BoundingBox.ts (MIT License)\n */\nexport class BoundingBoxComputation {\n    constructor() {\n        this.x1 = Number.NaN;\n        this.y1 = Number.NaN;\n        this.x2 = Number.NaN;\n        this.y2 = Number.NaN;\n    }\n    /** Get calculated X1. */\n    getX1() {\n        return this.x1;\n    }\n    /** Get calculated Y1. */\n    getY1() {\n        return this.y1;\n    }\n    /** Get calculated width. */\n    width() {\n        return this.x2 - this.x1;\n    }\n    /** Get calculated height. */\n    height() {\n        return this.y2 - this.y1;\n    }\n    /** Add point to BoundingBox. */\n    addPoint(x, y) {\n        if (isNaN(this.x1) || x < this.x1)\n            this.x1 = x;\n        if (isNaN(this.x2) || x > this.x2)\n            this.x2 = x;\n        if (isNaN(this.y1) || y < this.y1)\n            this.y1 = y;\n        if (isNaN(this.y2) || y > this.y2)\n            this.y2 = y;\n    }\n    /** Add X to BoundingBox. */\n    addX(x) {\n        this.addPoint(x, this.y1);\n    }\n    /** Add Y to BoundingBox. */\n    addY(y) {\n        this.addPoint(this.x1, y);\n    }\n    /** Add quadratic curve to BoundingBox. */\n    addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {\n        this.addPoint(p0x, p0y);\n        this.addPoint(p2x, p2y);\n        const p01x = p1x - p0x;\n        const p12x = p2x - p1x;\n        let denom = p01x - p12x;\n        if (denom != 0) {\n            const t = p01x / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addX(it * it * p0x + 2 * it * t * p1x + t * t * p2x);\n            }\n        }\n        const p01y = p1y - p0y;\n        const p12y = p2y - p1y;\n        denom = p01y - p12y;\n        if (denom != 0) {\n            const t = p01y / denom;\n            if (t > 0 && t < 1) {\n                const it = 1 - t;\n                this.addY(it * it * p0y + 2 * it * t * p1y + t * t * p2y);\n            }\n        }\n    }\n    /** Add bezier curve to BoundingBox. */\n    addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {\n        // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n        const p0 = [p0x, p0y];\n        const p1 = [p1x, p1y];\n        const p2 = [p2x, p2y];\n        const p3 = [p3x, p3y];\n        let i;\n        this.addPoint(p0[0], p0[1]);\n        this.addPoint(p3[0], p3[1]);\n        const f = (t, i) => Math.pow(1 - t, 3) * p0[i] +\n            3 * Math.pow(1 - t, 2) * t * p1[i] +\n            3 * (1 - t) * Math.pow(t, 2) * p2[i] +\n            Math.pow(t, 3) * p3[i];\n        for (i = 0; i <= 1; i++) {\n            const b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n            const a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n            const c = 3 * p1[i] - 3 * p0[i];\n            if (a === 0) {\n                if (b === 0)\n                    continue;\n                const t = -c / b;\n                if (0 < t && t < 1) {\n                    if (i === 0)\n                        this.addX(f(t, i));\n                    if (i === 1)\n                        this.addY(f(t, i));\n                }\n                continue;\n            }\n            const b2ac = Math.pow(b, 2) - 4 * c * a;\n            if (b2ac < 0)\n                continue;\n            const t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                if (i === 0)\n                    this.addX(f(t1, i));\n                if (i === 1)\n                    this.addY(f(t1, i));\n            }\n            const t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                if (i === 0)\n                    this.addX(f(t2, i));\n                if (i === 1)\n                    this.addY(f(t2, i));\n            }\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { defined } from './util';\nexport var FontWeight;\n(function (FontWeight) {\n    FontWeight[\"NORMAL\"] = \"normal\";\n    FontWeight[\"BOLD\"] = \"bold\";\n})(FontWeight || (FontWeight = {}));\nexport var FontStyle;\n(function (FontStyle) {\n    FontStyle[\"NORMAL\"] = \"normal\";\n    FontStyle[\"ITALIC\"] = \"italic\";\n})(FontStyle || (FontStyle = {}));\n// Internal <span></span> element for parsing CSS font shorthand strings.\nlet fontParser;\nconst Fonts = {};\nexport class Font {\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of pixels that is equivalent to `fontSize`\n     */\n    static convertSizeToPixelValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize * Font.scaleToPxFrom.pt;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = (_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param fontSize a font size to convert. Can be specified as a CSS length string (e.g., '16pt', '1em')\n     * or as a number (the unit is assumed to be 'pt'). See `Font.scaleToPxFrom` for the supported\n     * units (e.g., pt, em, %).\n     * @returns the number of points that is equivalent to `fontSize`\n     */\n    static convertSizeToPointValue(fontSize = Font.SIZE) {\n        var _a;\n        if (typeof fontSize === 'number') {\n            // Assume the numeric fontSize is specified in pt.\n            return fontSize;\n        }\n        else {\n            const value = parseFloat(fontSize);\n            if (isNaN(value)) {\n                return 0;\n            }\n            const unit = fontSize.replace(/[\\d.\\s]/g, '').toLowerCase(); // Extract the unit by removing all numbers, dots, spaces.\n            const conversionFactor = ((_a = Font.scaleToPxFrom[unit]) !== null && _a !== void 0 ? _a : 1) / Font.scaleToPxFrom.pt;\n            return value * conversionFactor;\n        }\n    }\n    /**\n     * @param f\n     * @param size\n     * @param weight\n     * @param style\n     * @returns the `size` field will include the units (e.g., '12pt', '16px').\n     */\n    static validate(f, size, weight, style) {\n        // If f is a string but all other arguments are undefined, we assume that\n        // f is CSS font shorthand (e.g., 'italic bold 10pt Arial').\n        if (typeof f === 'string' && size === undefined && weight === undefined && style === undefined) {\n            return Font.fromCSSString(f);\n        }\n        let family;\n        if (typeof f === 'object') {\n            // f is a FontInfo object, so we extract its fields.\n            family = f.family;\n            size = f.size;\n            weight = f.weight;\n            style = f.style;\n        }\n        else {\n            // f is a string representing the font family name or undefined.\n            family = f;\n        }\n        family = family !== null && family !== void 0 ? family : Font.SANS_SERIF;\n        size = size !== null && size !== void 0 ? size : Font.SIZE + 'pt';\n        weight = weight !== null && weight !== void 0 ? weight : FontWeight.NORMAL;\n        style = style !== null && style !== void 0 ? style : FontStyle.NORMAL;\n        if (weight === '') {\n            weight = FontWeight.NORMAL;\n        }\n        if (style === '') {\n            style = FontStyle.NORMAL;\n        }\n        // If size is a number, we assume the unit is `pt`.\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        // If weight is a number (e.g., 900), turn it into a string representation of that number.\n        if (typeof weight === 'number') {\n            weight = weight.toString();\n        }\n        // At this point, `family`, `size`, `weight`, and `style` are all strings.\n        return { family, size, weight, style };\n    }\n    /**\n     * @param cssFontShorthand a string formatted as CSS font shorthand (e.g., 'italic bold 15pt Arial').\n     */\n    static fromCSSString(cssFontShorthand) {\n        // Let the browser parse this string for us.\n        // First, create a span element.\n        // Then, set its style.font and extract it back out.\n        if (!fontParser) {\n            fontParser = document.createElement('span');\n        }\n        fontParser.style.font = cssFontShorthand;\n        const { fontFamily, fontSize, fontWeight, fontStyle } = fontParser.style;\n        return { family: fontFamily, size: fontSize, weight: fontWeight, style: fontStyle };\n    }\n    /**\n     * @returns a CSS font shorthand string of the form `italic bold 16pt Arial`.\n     */\n    static toCSSString(fontInfo) {\n        var _a;\n        if (!fontInfo) {\n            return '';\n        }\n        let style;\n        const st = fontInfo.style;\n        if (st === FontStyle.NORMAL || st === '' || st === undefined) {\n            style = ''; // no space! Omit the style section.\n        }\n        else {\n            style = st.trim() + ' ';\n        }\n        let weight;\n        const wt = fontInfo.weight;\n        if (wt === FontWeight.NORMAL || wt === '' || wt === undefined) {\n            weight = ''; // no space! Omit the weight section.\n        }\n        else if (typeof wt === 'number') {\n            weight = wt + ' ';\n        }\n        else {\n            weight = wt.trim() + ' ';\n        }\n        let size;\n        const sz = fontInfo.size;\n        if (sz === undefined) {\n            size = Font.SIZE + 'pt ';\n        }\n        else if (typeof sz === 'number') {\n            size = sz + 'pt ';\n        }\n        else {\n            // size is already a string.\n            size = sz.trim() + ' ';\n        }\n        const family = (_a = fontInfo.family) !== null && _a !== void 0 ? _a : Font.SANS_SERIF;\n        return `${style}${weight}${size}${family}`;\n    }\n    /**\n     * @param fontSize a number representing a font size, or a string font size with units.\n     * @param scaleFactor multiply the size by this factor.\n     * @returns size * scaleFactor (e.g., 16pt * 3 = 48pt, 8px * 0.5 = 4px, 24 * 2 = 48).\n     * If the fontSize argument was a number, the return value will be a number.\n     * If the fontSize argument was a string, the return value will be a string.\n     */\n    static scaleSize(fontSize, scaleFactor) {\n        if (typeof fontSize === 'number') {\n            return (fontSize * scaleFactor);\n        }\n        else {\n            const value = parseFloat(fontSize);\n            const unit = fontSize.replace(/[\\d.\\s]/g, ''); // Remove all numbers, dots, spaces.\n            return `${value * scaleFactor}${unit}`;\n        }\n    }\n    /**\n     * @param weight a string (e.g., 'bold') or a number (e.g., 600 / semi-bold in the OpenType spec).\n     * @returns true if the font weight indicates bold.\n     */\n    static isBold(weight) {\n        if (!weight) {\n            return false;\n        }\n        else if (typeof weight === 'number') {\n            return weight >= 600;\n        }\n        else {\n            // a string can be 'bold' or '700'\n            const parsedWeight = parseInt(weight, 10);\n            if (isNaN(parsedWeight)) {\n                return weight.toLowerCase() === 'bold';\n            }\n            else {\n                return parsedWeight >= 600;\n            }\n        }\n    }\n    /**\n     * @param style\n     * @returns true if the font style indicates 'italic'.\n     */\n    static isItalic(style) {\n        if (!style) {\n            return false;\n        }\n        else {\n            return style.toLowerCase() === FontStyle.ITALIC;\n        }\n    }\n    /**\n     * @param fontName\n     * @param woffURL The absolute or relative URL to the woff file.\n     * @param includeWoff2 If true, we assume that a woff2 file is in\n     * the same folder as the woff file, and will append a `2` to the url.\n     */\n    // Support distributions of the typescript compiler that do not yet include the FontFace API declarations.\n    // eslint-disable-next-line\n    // @ts-ignore\n    static loadWebFont(fontName, woffURL, includeWoff2 = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const woff2URL = includeWoff2 ? `url(${woffURL}2) format('woff2'), ` : '';\n            const woff1URL = `url(${woffURL}) format('woff')`;\n            const woffURLs = woff2URL + woff1URL;\n            // eslint-disable-next-line\n            // @ts-ignore\n            const fontFace = new FontFace(fontName, woffURLs);\n            yield fontFace.load();\n            // eslint-disable-next-line\n            // @ts-ignore\n            document.fonts.add(fontFace);\n            return fontFace;\n        });\n    }\n    /**\n     * Load the web fonts that are used by ChordSymbol. For example, `flow.html` calls:\n     *   `await Vex.Flow.Font.loadWebFonts();`\n     * Alternatively, you may load web fonts with a stylesheet link (e.g., from Google Fonts),\n     * and a @font-face { font-family: ... } rule in your CSS.\n     * If you do not load either of these fonts, ChordSymbol will fall back to Times or Arial,\n     * depending on the current music engraving font.\n     *\n     * You can customize `Font.WEB_FONT_HOST` and `Font.WEB_FONT_FILES` to load different fonts\n     * for your app.\n     */\n    static loadWebFonts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const host = Font.WEB_FONT_HOST;\n            const files = Font.WEB_FONT_FILES;\n            for (const fontName in files) {\n                const fontPath = files[fontName];\n                Font.loadWebFont(fontName, host + fontPath);\n            }\n        });\n    }\n    /**\n     * @param fontName\n     * @param data optionally set the Font object's `.data` property.\n     *   This is usually done when setting up a font for the first time.\n     * @param metrics optionally set the Font object's `.metrics` property.\n     *   This is usually done when setting up a font for the first time.\n     * @returns a Font object with the given `fontName`.\n     *   Reuse an existing Font object if a matching one is found.\n     */\n    static load(fontName, data, metrics) {\n        let font = Fonts[fontName];\n        if (!font) {\n            font = new Font(fontName);\n            Fonts[fontName] = font;\n        }\n        if (data) {\n            font.setData(data);\n        }\n        if (metrics) {\n            font.setMetrics(metrics);\n        }\n        return font;\n    }\n    /**\n     * Use `Font.load(fontName)` to get a Font object.\n     * Do not call this constructor directly.\n     */\n    constructor(fontName) {\n        this.name = fontName;\n    }\n    getName() {\n        return this.name;\n    }\n    getData() {\n        return defined(this.data, 'FontError', 'Missing font data');\n    }\n    getMetrics() {\n        return defined(this.metrics, 'FontError', 'Missing metrics');\n    }\n    setData(data) {\n        this.data = data;\n    }\n    setMetrics(metrics) {\n        this.metrics = metrics;\n    }\n    hasData() {\n        return this.data !== undefined;\n    }\n    getResolution() {\n        return this.getData().resolution;\n    }\n    getGlyphs() {\n        return this.getData().glyphs;\n    }\n    /**\n     * Use the provided key to look up a value in this font's metrics file (e.g., bravura_metrics.ts, petaluma_metrics.ts).\n     * @param key is a string separated by periods (e.g., stave.endPaddingMax, clef.lineCount.'5'.shiftY).\n     * @param defaultValue is returned if the lookup fails.\n     * @returns the retrieved value (or `defaultValue` if the lookup fails).\n     */\n    // eslint-disable-next-line\n    lookupMetric(key, defaultValue) {\n        const keyParts = key.split('.');\n        // Start with the top level font metrics object, and keep looking deeper into the object (via each part of the period-delimited key).\n        let currObj = this.getMetrics();\n        for (let i = 0; i < keyParts.length; i++) {\n            const keyPart = keyParts[i];\n            const value = currObj[keyPart];\n            if (value === undefined) {\n                // If the key lookup fails, we fall back to the defaultValue.\n                return defaultValue;\n            }\n            // The most recent lookup succeeded, so we drill deeper into the object.\n            currObj = value;\n        }\n        // After checking every part of the key (i.e., the loop completed), return the most recently retrieved value.\n        return currObj;\n    }\n    /** For debugging. */\n    toString() {\n        return '[' + this.name + ' Font]';\n    }\n}\n//////////////////////////////////////////////////////////////////////////////////////////////////\n// STATIC MEMBERS\n/** Default sans-serif font family. */\nFont.SANS_SERIF = 'Arial, sans-serif';\n/** Default serif font family. */\nFont.SERIF = 'Times New Roman, serif';\n/** Default font size in `pt`. */\nFont.SIZE = 10;\n// CSS Font Sizes: 36pt == 48px == 3em == 300% == 0.5in\n/** Given a length (for units: pt, px, em, %, in, mm, cm) what is the scale factor to convert it to px? */\nFont.scaleToPxFrom = {\n    pt: 4 / 3,\n    px: 1,\n    em: 16,\n    '%': 4 / 25,\n    in: 96,\n    mm: 96 / 25.4,\n    cm: 96 / 2.54,\n};\n/**\n * Customize this field to specify a different CDN for delivering web fonts.\n * Alternative: https://cdn.jsdelivr.net/npm/vexflow-fonts@1.0.3/\n * Or you can use your own host.\n */\nFont.WEB_FONT_HOST = 'https://unpkg.com/vexflow-fonts@1.0.3/';\n/**\n * These font files will be loaded from the CDN specified by `Font.WEB_FONT_HOST` when\n * `await Font.loadWebFonts()` is called. Customize this field to specify a different\n * set of fonts to load. See: `Font.loadWebFonts()`.\n */\nFont.WEB_FONT_FILES = {\n    'Roboto Slab': 'robotoslab/RobotoSlab-Medium_2.001.woff',\n    PetalumaScript: 'petaluma/PetalumaScript_1.10_FS.woff',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n//\n// ## Description\n//\n// This file implements a registry for VexFlow elements. It allows users\n// to track, query, and manage some subset of generated elements, and\n// dynamically get and set attributes.\n//\n// There are two ways to register with a registry:\n//\n// 1) Explicitly call `registry.register(elem:Element, id?:string)`, or,\n// 2) Call `Registry.enableDefaultRegistry(registry)` when ready, and all future\n//    elements will automatically register with it.\n//\n// Once an element is registered, selected attributes are tracked and indexed by\n// the registry. This allows fast look up of elements by attributes like id, type,\n// and class.\nimport { RuntimeError } from './util';\n// Indexes are represented as maps of maps of maps. This allows\n// for both multi-labeling (e.g., an element can have multiple classes)\n// and efficient lookup.\nclass Index {\n    constructor() {\n        this.id = {};\n        this.type = {};\n        this.class = {};\n    }\n}\nexport class Registry {\n    static getDefaultRegistry() {\n        return Registry.defaultRegistry;\n    }\n    // If you call `enableDefaultRegistry`, any new elements will auto-register with\n    // the provided registry as soon as they're constructed.\n    static enableDefaultRegistry(registry) {\n        Registry.defaultRegistry = registry;\n    }\n    static disableDefaultRegistry() {\n        Registry.defaultRegistry = undefined;\n    }\n    constructor() {\n        this.index = new Index();\n    }\n    clear() {\n        this.index = new Index();\n        return this;\n    }\n    setIndexValue(name, value, id, elem) {\n        const index = this.index;\n        if (!index[name][value]) {\n            index[name][value] = {};\n        }\n        index[name][value][id] = elem;\n    }\n    // Updates the indexes for element 'id'. If an element's attribute changes\n    // from A -> B, make sure to remove the element from A.\n    updateIndex({ id, name, value, oldValue }) {\n        const elem = this.getElementById(id);\n        if (oldValue !== undefined && this.index[name][oldValue]) {\n            delete this.index[name][oldValue][id];\n        }\n        if (value && elem) {\n            this.setIndexValue(name, value, elem.getAttribute('id'), elem);\n        }\n    }\n    /**\n     * Register element `elem` with this registry.\n     * This adds the element to its index and watches it for attribute changes.\n     * @param elem\n     * @param id\n     * @returns this\n     */\n    register(elem, id) {\n        id = id || elem.getAttribute('id');\n        if (!id) {\n            throw new RuntimeError(\"Can't add element without `id` attribute to registry\");\n        }\n        // Manually add id to index, then update other indexes.\n        elem.setAttribute('id', id);\n        this.setIndexValue('id', id, id, elem);\n        this.updateIndex({ id, name: 'type', value: elem.getAttribute('type'), oldValue: undefined });\n        elem.onRegister(this);\n        return this;\n    }\n    getElementById(id) {\n        var _a, _b;\n        return (_b = (_a = this.index.id) === null || _a === void 0 ? void 0 : _a[id]) === null || _b === void 0 ? void 0 : _b[id]; // return undefined if the id is not found.\n    }\n    getElementsByAttribute(attribute, value) {\n        const index_attr = this.index[attribute];\n        if (index_attr) {\n            const index_attr_val = index_attr[value];\n            if (index_attr_val) {\n                const keys = Object.keys(index_attr_val);\n                return keys.map((k) => index_attr_val[k]);\n            }\n        }\n        return [];\n    }\n    getElementsByType(type) {\n        return this.getElementsByAttribute('type', type);\n    }\n    getElementsByClass(className) {\n        return this.getElementsByAttribute('class', className);\n    }\n    // This is called by the element when an attribute value changes. If an indexed\n    // attribute changes, then update the local index.\n    onUpdate(info) {\n        const allowedNames = ['id', 'type', 'class'];\n        if (allowedNames.includes(info.name)) {\n            this.updateIndex(info);\n        }\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Registry } from './registry';\nimport { Category } from './typeguard';\nimport { defined, prefix } from './util';\n/**\n * Element implements a generic base class for VexFlow, with implementations\n * of general functions and properties that can be inherited by all VexFlow elements.\n *\n * The Element is an abstract class that needs to be subclassed to work. It handles\n * style and text-font properties for the Element and any child elements, along with\n * working with the Registry to create unique ids, but does not have any tools for\n * formatting x or y positions or connections to a Stave.\n */\nexport class Element {\n    static get CATEGORY() {\n        return Category.Element;\n    }\n    static newID() {\n        return `auto${Element.ID++}`;\n    }\n    constructor() {\n        var _a;\n        // all Element objects keep a list of children that they are responsible and which\n        // inherit the style of their parents.\n        this.children = [];\n        this.attrs = {\n            id: Element.newID(),\n            type: this.getCategory(),\n            class: '',\n        };\n        this.rendered = false;\n        // If a default registry exist, then register with it right away.\n        (_a = Registry.getDefaultRegistry()) === null || _a === void 0 ? void 0 : _a.register(this);\n    }\n    /**\n     * Adds a child Element to the Element, which lets it inherit the\n     * same style as the parent when setGroupStyle() is called.\n     *\n     * Examples of children are noteheads and stems.  Modifiers such\n     * as Accidentals are generally not set as children.\n     *\n     * Note that StaveNote calls setGroupStyle() when setStyle() is called.\n     */\n    addChildElement(child) {\n        this.children.push(child);\n        return this;\n    }\n    getCategory() {\n        return this.constructor.CATEGORY;\n    }\n    /**\n     * Set the element style used to render.\n     *\n     * Example:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.draw();\n     * ```\n     * Note: If the element draws additional sub-elements (ie.: Modifiers in a Stave),\n     * the style can be applied to all of them by means of the context:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.getContext().setFillStyle('red');\n     * element.getContext().setStrokeStyle('red');\n     * element.draw();\n     * ```\n     * or using drawWithStyle:\n     * ```typescript\n     * element.setStyle({ fillStyle: 'red', strokeStyle: 'red' });\n     * element.drawWithStyle();\n     * ```\n     */\n    setStyle(style) {\n        this.style = style;\n        return this;\n    }\n    /** Set the element & associated children style used for rendering. */\n    setGroupStyle(style) {\n        this.style = style;\n        this.children.forEach((child) => child.setGroupStyle(style));\n        return this;\n    }\n    /** Get the element style used for rendering. */\n    getStyle() {\n        return this.style;\n    }\n    /** Apply the element style to `context`. */\n    applyStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.save();\n        if (style.shadowColor)\n            context.setShadowColor(style.shadowColor);\n        if (style.shadowBlur)\n            context.setShadowBlur(style.shadowBlur);\n        if (style.fillStyle)\n            context.setFillStyle(style.fillStyle);\n        if (style.strokeStyle)\n            context.setStrokeStyle(style.strokeStyle);\n        if (style.lineWidth)\n            context.setLineWidth(style.lineWidth);\n        return this;\n    }\n    /** Restore the style of `context`. */\n    restoreStyle(context = this.context, style = this.getStyle()) {\n        if (!style)\n            return this;\n        if (!context)\n            return this;\n        context.restore();\n        return this;\n    }\n    /**\n     * Draw the element and all its sub-elements (ie.: Modifiers in a Stave)\n     * with the element's style (see `getStyle()` and `setStyle()`)\n     */\n    drawWithStyle() {\n        this.checkContext();\n        this.applyStyle();\n        this.draw();\n        this.restoreStyle();\n    }\n    /** Check if it has a class label (An element can have multiple class labels).  */\n    hasClass(className) {\n        var _a;\n        if (!this.attrs.class)\n            return false;\n        return ((_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ').indexOf(className)) != -1;\n    }\n    /** Add a class label (An element can have multiple class labels).  */\n    addClass(className) {\n        var _a;\n        if (this.hasClass(className))\n            return this;\n        if (!this.attrs.class)\n            this.attrs.class = `${className}`;\n        else\n            this.attrs.class = `${this.attrs.class} ${className}`;\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: className,\n            oldValue: undefined,\n        });\n        return this;\n    }\n    /** Remove a class label (An element can have multiple class labels).  */\n    removeClass(className) {\n        var _a, _b;\n        if (!this.hasClass(className))\n            return this;\n        const arr = (_a = this.attrs.class) === null || _a === void 0 ? void 0 : _a.split(' ');\n        if (arr) {\n            arr.splice(arr.indexOf(className));\n            this.attrs.class = arr.join(' ');\n        }\n        (_b = this.registry) === null || _b === void 0 ? void 0 : _b.onUpdate({\n            id: this.attrs.id,\n            name: 'class',\n            value: undefined,\n            oldValue: className,\n        });\n        return this;\n    }\n    /** Call back from registry after the element is registered. */\n    onRegister(registry) {\n        this.registry = registry;\n        return this;\n    }\n    /** Return the rendered status. */\n    isRendered() {\n        return this.rendered;\n    }\n    /** Set the rendered status. */\n    setRendered(rendered = true) {\n        this.rendered = rendered;\n        return this;\n    }\n    /** Return the element attributes. */\n    getAttributes() {\n        return this.attrs;\n    }\n    /** Return an attribute, such as 'id', 'type' or 'class'. */\n    // eslint-disable-next-line\n    getAttribute(name) {\n        return this.attrs[name];\n    }\n    /** Return associated SVGElement. */\n    getSVGElement(suffix = '') {\n        const id = prefix(this.attrs.id + suffix);\n        const element = document.getElementById(id);\n        if (element)\n            return element;\n    }\n    /** Set an attribute such as 'id', 'class', or 'type'. */\n    setAttribute(name, value) {\n        var _a;\n        const oldID = this.attrs.id;\n        const oldValue = this.attrs[name];\n        this.attrs[name] = value;\n        // Register with old id to support id changes.\n        (_a = this.registry) === null || _a === void 0 ? void 0 : _a.onUpdate({ id: oldID, name, value, oldValue });\n        return this;\n    }\n    /** Get the boundingBox. */\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    /** Return the context, such as an SVGContext or CanvasContext object. */\n    getContext() {\n        return this.context;\n    }\n    /** Set the context to an SVGContext or CanvasContext object */\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    /** Validate and return the rendering context. */\n    checkContext() {\n        return defined(this.context, 'NoContext', 'No rendering context attached to instance.');\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // Font Handling\n    /**\n     * Provide a CSS compatible font string (e.g., 'bold 16px Arial') that will be applied\n     * to text (not glyphs).\n     */\n    set font(f) {\n        this.setFont(f);\n    }\n    /** Returns the CSS compatible font string for the text font. */\n    get font() {\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Set the element's text font family, size, weight, style\n     * (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * This attribute does not determine the font used for musical Glyphs like treble clefs.\n     *\n     * @param font is 1) a `FontInfo` object or\n     *                2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *                3) a string representing the font family (at least one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     * If no arguments are provided, then the font is set to the default font.\n     * Each Element subclass may specify its own default by overriding the static `TEXT_FONT` property.\n     */\n    setFont(font, size, weight, style) {\n        // Allow subclasses to override `TEXT_FONT`.\n        const defaultTextFont = this.constructor.TEXT_FONT;\n        const fontIsObject = typeof font === 'object';\n        const fontIsString = typeof font === 'string';\n        const fontIsUndefined = font === undefined;\n        const sizeWeightStyleAreUndefined = size === undefined && weight === undefined && style === undefined;\n        if (fontIsObject) {\n            // `font` is case 1) a FontInfo object\n            this.textFont = Object.assign(Object.assign({}, defaultTextFont), font);\n        }\n        else if (fontIsString && sizeWeightStyleAreUndefined) {\n            // `font` is case 2) CSS font shorthand.\n            this.textFont = Font.fromCSSString(font);\n        }\n        else if (fontIsUndefined && sizeWeightStyleAreUndefined) {\n            // All arguments are undefined. Do not check for `arguments.length === 0`,\n            // which fails on the edge case: `setFont(undefined)`.\n            // TODO: See if we can remove this case entirely without introducing a visual diff.\n            // The else case below seems like it should be equivalent to this case.\n            this.textFont = Object.assign({}, defaultTextFont);\n        }\n        else {\n            // `font` is case 3) a font family string (e.g., 'Times New Roman').\n            // The other parameters represent the size, weight, and style.\n            // It is okay for `font` to be undefined while one or more of the other arguments is provided.\n            // Following CSS conventions, unspecified params are reset to the default.\n            this.textFont = Font.validate(font !== null && font !== void 0 ? font : defaultTextFont.family, size !== null && size !== void 0 ? size : defaultTextFont.size, weight !== null && weight !== void 0 ? weight : defaultTextFont.weight, style !== null && style !== void 0 ? style : defaultTextFont.style);\n        }\n        return this;\n    }\n    /**\n     * Get the css string describing this Element's text font. e.g.,\n     * 'bold 10pt Arial'.\n     */\n    getFont() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        return Font.toCSSString(this.textFont);\n    }\n    /**\n     * Reset the text font to the style indicated by the static `TEXT_FONT` property.\n     * Subclasses can call this to initialize `textFont` for the first time.\n     */\n    resetFont() {\n        this.setFont();\n    }\n    /** Return a copy of the current FontInfo object. */\n    get fontInfo() {\n        if (!this.textFont) {\n            this.resetFont();\n        }\n        // We can cast to Required<FontInfo> here, because\n        // we just called resetFont() above to ensure this.textFont is set.\n        return Object.assign({}, this.textFont);\n    }\n    set fontInfo(fontInfo) {\n        this.setFont(fontInfo);\n    }\n    /** Change the font size, while keeping everything else the same. */\n    setFontSize(size) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, size, fontInfo.weight, fontInfo.style);\n        return this;\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     * See Element.fontSizeInPixels or Element.fontSizeInPoints if you need to get a number for calculation purposes.\n     */\n    getFontSize() {\n        return this.fontSize;\n    }\n    /**\n     * The size is 1) a string of the form '10pt' or '16px', compatible with the CSS font-size property.\n     *          or 2) a number, which is interpreted as a point size (i.e. 12 == '12pt').\n     */\n    set fontSize(size) {\n        this.setFontSize(size);\n    }\n    /**\n     * @returns a CSS font-size string (e.g., '18pt', '12px', '1em').\n     */\n    get fontSize() {\n        let size = this.fontInfo.size;\n        if (typeof size === 'number') {\n            size = `${size}pt`;\n        }\n        return size;\n    }\n    /**\n     * @returns the font size in `pt`.\n     */\n    get fontSizeInPoints() {\n        return Font.convertSizeToPointValue(this.fontSize);\n    }\n    /**\n     * @returns the font size in `px`.\n     */\n    get fontSizeInPixels() {\n        return Font.convertSizeToPixelValue(this.fontSize);\n    }\n    /**\n     * @returns a CSS font-style string (e.g., 'italic').\n     */\n    get fontStyle() {\n        return this.fontInfo.style;\n    }\n    set fontStyle(style) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, fontInfo.weight, style);\n    }\n    /**\n     * @returns a CSS font-weight string (e.g., 'bold').\n     * As in CSS, font-weight is always returned as a string, even if it was set as a number.\n     */\n    get fontWeight() {\n        return this.fontInfo.weight + '';\n    }\n    set fontWeight(weight) {\n        const fontInfo = this.fontInfo;\n        this.setFont(fontInfo.family, fontInfo.size, weight, fontInfo.style);\n    }\n}\nElement.ID = 1000;\n/**\n * Default font for text. This is not related to music engraving. Instead, see `Flow.setMusicFont(...fontNames)`\n * to customize the font for musical symbols placed on the score.\n */\nElement.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { RuntimeError } from './util';\nconst RESOLUTION = 16384;\n/**\n * Map duration numbers to 'ticks', the unit of duration used throughout VexFlow.\n * For example, a quarter note is 4, so it maps to RESOLUTION / 4 = 4096 ticks.\n */\nconst durations = {\n    '1/2': RESOLUTION * 2,\n    1: RESOLUTION / 1,\n    2: RESOLUTION / 2,\n    4: RESOLUTION / 4,\n    8: RESOLUTION / 8,\n    16: RESOLUTION / 16,\n    32: RESOLUTION / 32,\n    64: RESOLUTION / 64,\n    128: RESOLUTION / 128,\n    256: RESOLUTION / 256,\n};\nconst durationAliases = {\n    w: '1',\n    h: '2',\n    q: '4',\n    // This is the default duration used to render bars (BarNote). Bars no longer\n    // consume ticks, so this should be a no-op.\n    // TODO(0xfe): This needs to be cleaned up.\n    b: '256',\n};\nconst generateKeySignatures = () => {\n    const keySignatures = {};\n    // Generate flats\n    for (let i = 1; i <= 14; i++) {\n        keySignatures[`flats_${i}`] = { acc: 'b', num: i };\n    }\n    // Generate sharps\n    for (let i = 1; i <= 14; i++) {\n        keySignatures[`sharps_${i}`] = { acc: '#', num: i };\n    }\n    return keySignatures;\n};\nconst keySignatures = Object.assign(Object.assign({}, generateKeySignatures()), { C: { num: 0 }, Am: { num: 0 }, F: { acc: 'b', num: 1 }, Dm: { acc: 'b', num: 1 }, Bb: { acc: 'b', num: 2 }, Gm: { acc: 'b', num: 2 }, Eb: { acc: 'b', num: 3 }, Cm: { acc: 'b', num: 3 }, Ab: { acc: 'b', num: 4 }, Fm: { acc: 'b', num: 4 }, Db: { acc: 'b', num: 5 }, Bbm: { acc: 'b', num: 5 }, Gb: { acc: 'b', num: 6 }, Ebm: { acc: 'b', num: 6 }, Cb: { acc: 'b', num: 7 }, Abm: { acc: 'b', num: 7 }, Dbm: { acc: 'b', num: 8 }, Gbm: { acc: 'b', num: 9 }, G: { acc: '#', num: 1 }, Em: { acc: '#', num: 1 }, D: { acc: '#', num: 2 }, Bm: { acc: '#', num: 2 }, A: { acc: '#', num: 3 }, 'F#m': { acc: '#', num: 3 }, E: { acc: '#', num: 4 }, 'C#m': { acc: '#', num: 4 }, B: { acc: '#', num: 5 }, 'G#m': { acc: '#', num: 5 }, 'F#': { acc: '#', num: 6 }, 'D#m': { acc: '#', num: 6 }, 'C#': { acc: '#', num: 7 }, 'A#m': { acc: '#', num: 7 }, 'G#': { acc: '#', num: 8 }, 'D#': { acc: '#', num: 9 }, 'A#': { acc: '#', num: 10 } });\nconst clefs = {\n    treble: { line_shift: 0 },\n    bass: { line_shift: 6 },\n    tenor: { line_shift: 4 },\n    alto: { line_shift: 3 },\n    soprano: { line_shift: 1 },\n    percussion: { line_shift: 0 },\n    'mezzo-soprano': { line_shift: 2 },\n    'baritone-c': { line_shift: 5 },\n    'baritone-f': { line_shift: 5 },\n    subbass: { line_shift: 7 },\n    french: { line_shift: -1 },\n};\nconst notesInfo = {\n    C: { index: 0, int_val: 0 },\n    CN: { index: 0, int_val: 0, accidental: 'n' },\n    'C#': { index: 0, int_val: 1, accidental: '#' },\n    'C##': { index: 0, int_val: 2, accidental: '##' },\n    CB: { index: 0, int_val: 11, accidental: 'b' },\n    CBB: { index: 0, int_val: 10, accidental: 'bb' },\n    D: { index: 1, int_val: 2 },\n    DN: { index: 1, int_val: 2, accidental: 'n' },\n    'D#': { index: 1, int_val: 3, accidental: '#' },\n    'D##': { index: 1, int_val: 4, accidental: '##' },\n    DB: { index: 1, int_val: 1, accidental: 'b' },\n    DBB: { index: 1, int_val: 0, accidental: 'bb' },\n    E: { index: 2, int_val: 4 },\n    EN: { index: 2, int_val: 4, accidental: 'n' },\n    'E#': { index: 2, int_val: 5, accidental: '#' },\n    'E##': { index: 2, int_val: 6, accidental: '##' },\n    EB: { index: 2, int_val: 3, accidental: 'b' },\n    EBB: { index: 2, int_val: 2, accidental: 'bb' },\n    F: { index: 3, int_val: 5 },\n    FN: { index: 3, int_val: 5, accidental: 'n' },\n    'F#': { index: 3, int_val: 6, accidental: '#' },\n    'F##': { index: 3, int_val: 7, accidental: '##' },\n    FB: { index: 3, int_val: 4, accidental: 'b' },\n    FBB: { index: 3, int_val: 3, accidental: 'bb' },\n    G: { index: 4, int_val: 7 },\n    GN: { index: 4, int_val: 7, accidental: 'n' },\n    'G#': { index: 4, int_val: 8, accidental: '#' },\n    'G##': { index: 4, int_val: 9, accidental: '##' },\n    GB: { index: 4, int_val: 6, accidental: 'b' },\n    GBB: { index: 4, int_val: 5, accidental: 'bb' },\n    A: { index: 5, int_val: 9 },\n    AN: { index: 5, int_val: 9, accidental: 'n' },\n    'A#': { index: 5, int_val: 10, accidental: '#' },\n    'A##': { index: 5, int_val: 11, accidental: '##' },\n    AB: { index: 5, int_val: 8, accidental: 'b' },\n    ABB: { index: 5, int_val: 7, accidental: 'bb' },\n    B: { index: 6, int_val: 11 },\n    BN: { index: 6, int_val: 11, accidental: 'n' },\n    'B#': { index: 6, int_val: 12, accidental: '#' },\n    'B##': { index: 6, int_val: 13, accidental: '##' },\n    BB: { index: 6, int_val: 10, accidental: 'b' },\n    BBB: { index: 6, int_val: 9, accidental: 'bb' },\n    R: { index: 6, rest: true },\n    X: {\n        index: 6,\n        accidental: '',\n        octave: 4,\n        code: 'noteheadXBlack',\n        shift_right: 5.5,\n    },\n};\nconst validNoteTypes = {\n    n: { name: 'note' },\n    r: { name: 'rest' },\n    h: { name: 'harmonic' },\n    m: { name: 'muted' },\n    s: { name: 'slash' },\n    g: { name: 'ghost' },\n    d: { name: 'diamond' },\n    x: { name: 'x' },\n    ci: { name: 'circled' },\n    cx: { name: 'circle x' },\n    sf: { name: 'slashed' },\n    sb: { name: 'slashed backward' },\n    sq: { name: 'square' },\n    tu: { name: 'triangle up' },\n    td: { name: 'triangle down' },\n};\nconst accidentals = {\n    '#': { code: 'accidentalSharp', parenRightPaddingAdjustment: -1 },\n    '##': { code: 'accidentalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    b: { code: 'accidentalFlat', parenRightPaddingAdjustment: -2 },\n    bb: { code: 'accidentalDoubleFlat', parenRightPaddingAdjustment: -2 },\n    n: { code: 'accidentalNatural', parenRightPaddingAdjustment: -1 },\n    '{': { code: 'accidentalParensLeft', parenRightPaddingAdjustment: -1 },\n    '}': { code: 'accidentalParensRight', parenRightPaddingAdjustment: -1 },\n    db: { code: 'accidentalThreeQuarterTonesFlatZimmermann', parenRightPaddingAdjustment: -1 },\n    d: { code: 'accidentalQuarterToneFlatStein', parenRightPaddingAdjustment: 0 },\n    '++': { code: 'accidentalThreeQuarterTonesSharpStein', parenRightPaddingAdjustment: -1 },\n    '+': { code: 'accidentalQuarterToneSharpStein', parenRightPaddingAdjustment: -1 },\n    '+-': { code: 'accidentalKucukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    bs: { code: 'accidentalBakiyeFlat', parenRightPaddingAdjustment: -1 },\n    bss: { code: 'accidentalBuyukMucennebFlat', parenRightPaddingAdjustment: -1 },\n    o: { code: 'accidentalSori', parenRightPaddingAdjustment: -1 },\n    k: { code: 'accidentalKoron', parenRightPaddingAdjustment: -1 },\n    bbs: { code: 'vexAccidentalMicrotonal1', parenRightPaddingAdjustment: -1 },\n    '++-': { code: 'accidentalBuyukMucennebSharp', parenRightPaddingAdjustment: -1 },\n    ashs: { code: 'vexAccidentalMicrotonal3', parenRightPaddingAdjustment: -1 },\n    afhf: { code: 'vexAccidentalMicrotonal4', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaUp: { code: 'accSagittal5v7KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v7KleismaDown: { code: 'accSagittal5v7KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaUp: { code: 'accSagittal5CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5CommaDown: { code: 'accSagittal5CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaUp: { code: 'accSagittal7CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7CommaDown: { code: 'accSagittal7CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisUp: { code: 'accSagittal25SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal25SmallDiesisDown: { code: 'accSagittal25SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisUp: { code: 'accSagittal35MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35MediumDiesisDown: { code: 'accSagittal35MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisUp: { code: 'accSagittal11MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11MediumDiesisDown: { code: 'accSagittal11MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisUp: { code: 'accSagittal11LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11LargeDiesisDown: { code: 'accSagittal11LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisUp: { code: 'accSagittal35LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal35LargeDiesisDown: { code: 'accSagittal35LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SDown: { code: 'accSagittalSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SUp: { code: 'accSagittalFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CDown: { code: 'accSagittalSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CUp: { code: 'accSagittalFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CDown: { code: 'accSagittalSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CUp: { code: 'accSagittalFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kDown: { code: 'accSagittalSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kUp: { code: 'accSagittalFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp: { code: 'accSagittalSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat: { code: 'accSagittalFlat', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v7kUp: { code: 'accSagittalSharp5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v7kDown: { code: 'accSagittalFlat5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5CUp: { code: 'accSagittalSharp5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5CDown: { code: 'accSagittalFlat5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7CUp: { code: 'accSagittalSharp7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7CDown: { code: 'accSagittalFlat7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp25SUp: { code: 'accSagittalSharp25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat25SDown: { code: 'accSagittalFlat25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35MUp: { code: 'accSagittalSharp35MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35MDown: { code: 'accSagittalFlat35MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11MUp: { code: 'accSagittalSharp11MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11MDown: { code: 'accSagittalFlat11MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11LUp: { code: 'accSagittalSharp11LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11LDown: { code: 'accSagittalFlat11LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp35LUp: { code: 'accSagittalSharp35LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat35LDown: { code: 'accSagittalFlat35LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp25SDown: { code: 'accSagittalDoubleSharp25SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat25SUp: { code: 'accSagittalDoubleFlat25SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7CDown: { code: 'accSagittalDoubleSharp7CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7CUp: { code: 'accSagittalDoubleFlat7CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5CDown: { code: 'accSagittalDoubleSharp5CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5CUp: { code: 'accSagittalDoubleFlat5CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v7kDown: { code: 'accSagittalDoubleSharp5v7kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v7kUp: { code: 'accSagittalDoubleFlat5v7kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp: { code: 'accSagittalDoubleSharp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat: { code: 'accSagittalDoubleFlat', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaUp: { code: 'accSagittal7v11KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11KleismaDown: { code: 'accSagittal7v11KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaUp: { code: 'accSagittal17CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17CommaDown: { code: 'accSagittal17CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaUp: { code: 'accSagittal55CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal55CommaDown: { code: 'accSagittal55CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaUp: { code: 'accSagittal7v11CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v11CommaDown: { code: 'accSagittal7v11CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisUp: { code: 'accSagittal5v11SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v11SmallDiesisDown: { code: 'accSagittal5v11SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SDown: { code: 'accSagittalSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SUp: { code: 'accSagittalFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CDown: { code: 'accSagittalSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CUp: { code: 'accSagittalFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CDown: { code: 'accSagittalSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CUp: { code: 'accSagittalFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CDown: { code: 'accSagittalSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CUp: { code: 'accSagittalFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kDown: { code: 'accSagittalSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kUp: { code: 'accSagittalFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11kUp: { code: 'accSagittalSharp7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11kDown: { code: 'accSagittalFlat7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17CUp: { code: 'accSagittalSharp17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17CDown: { code: 'accSagittalFlat17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp55CUp: { code: 'accSagittalSharp55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat55CDown: { code: 'accSagittalFlat55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v11CUp: { code: 'accSagittalSharp7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v11CDown: { code: 'accSagittalFlat7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v11SUp: { code: 'accSagittalSharp5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v11SDown: { code: 'accSagittalFlat5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v11SDown: { code: 'accSagittalDoubleSharp5v11SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v11SUp: { code: 'accSagittalDoubleFlat5v11SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11CDown: { code: 'accSagittalDoubleSharp7v11CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11CUp: { code: 'accSagittalDoubleFlat7v11CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp55CDown: { code: 'accSagittalDoubleSharp55CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat55CUp: { code: 'accSagittalDoubleFlat55CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17CDown: { code: 'accSagittalDoubleSharp17CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17CUp: { code: 'accSagittalDoubleFlat17CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v11kDown: { code: 'accSagittalDoubleSharp7v11kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v11kUp: { code: 'accSagittalDoubleFlat7v11kUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaUp: { code: 'accSagittal23CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23CommaDown: { code: 'accSagittal23CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaUp: { code: 'accSagittal5v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v19CommaDown: { code: 'accSagittal5v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisUp: { code: 'accSagittal5v23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v23SmallDiesisDown: { code: 'accSagittal5v23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SDown: { code: 'accSagittalSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SUp: { code: 'accSagittalFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CDown: { code: 'accSagittalSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CUp: { code: 'accSagittalFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CDown: { code: 'accSagittalSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CUp: { code: 'accSagittalFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23CUp: { code: 'accSagittalSharp23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23CDown: { code: 'accSagittalFlat23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v19CUp: { code: 'accSagittalSharp5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v19CDown: { code: 'accSagittalFlat5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v23SUp: { code: 'accSagittalSharp5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v23SDown: { code: 'accSagittalFlat5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v23SDown: { code: 'accSagittalDoubleSharp5v23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v23SUp: { code: 'accSagittalDoubleFlat5v23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp5v19CDown: { code: 'accSagittalDoubleSharp5v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat5v19CUp: { code: 'accSagittalDoubleFlat5v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23CDown: { code: 'accSagittalDoubleSharp23CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23CUp: { code: 'accSagittalDoubleFlat23CUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaUp: { code: 'accSagittal19SchismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19SchismaDown: { code: 'accSagittal19SchismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaUp: { code: 'accSagittal17KleismaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal17KleismaDown: { code: 'accSagittal17KleismaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaUp: { code: 'accSagittal143CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal143CommaDown: { code: 'accSagittal143CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaUp: { code: 'accSagittal11v49CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v49CommaDown: { code: 'accSagittal11v49CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaUp: { code: 'accSagittal19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal19CommaDown: { code: 'accSagittal19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaUp: { code: 'accSagittal7v19CommaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7v19CommaDown: { code: 'accSagittal7v19CommaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisUp: { code: 'accSagittal49SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49SmallDiesisDown: { code: 'accSagittal49SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisUp: { code: 'accSagittal23SmallDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal23SmallDiesisDown: { code: 'accSagittal23SmallDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisUp: { code: 'accSagittal5v13MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13MediumDiesisDown: { code: 'accSagittal5v13MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisUp: { code: 'accSagittal11v19MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19MediumDiesisDown: { code: 'accSagittal11v19MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisUp: { code: 'accSagittal49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49MediumDiesisDown: { code: 'accSagittal49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisUp: { code: 'accSagittal5v49MediumDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v49MediumDiesisDown: { code: 'accSagittal5v49MediumDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisUp: { code: 'accSagittal49LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal49LargeDiesisDown: { code: 'accSagittal49LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisUp: { code: 'accSagittal11v19LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal11v19LargeDiesisDown: { code: 'accSagittal11v19LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisUp: { code: 'accSagittal5v13LargeDiesisUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5v13LargeDiesisDown: { code: 'accSagittal5v13LargeDiesisDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SDown: { code: 'accSagittalSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SUp: { code: 'accSagittalFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SDown: { code: 'accSagittalSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SUp: { code: 'accSagittalFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CDown: { code: 'accSagittalSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CUp: { code: 'accSagittalFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CDown: { code: 'accSagittalSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CUp: { code: 'accSagittalFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CDown: { code: 'accSagittalSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CUp: { code: 'accSagittalFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CDown: { code: 'accSagittalSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CUp: { code: 'accSagittalFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kDown: { code: 'accSagittalSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kUp: { code: 'accSagittalFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sDown: { code: 'accSagittalSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sUp: { code: 'accSagittalFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19sUp: { code: 'accSagittalSharp19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19sDown: { code: 'accSagittalFlat19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp17kUp: { code: 'accSagittalSharp17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat17kDown: { code: 'accSagittalFlat17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp143CUp: { code: 'accSagittalSharp143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat143CDown: { code: 'accSagittalFlat143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v49CUp: { code: 'accSagittalSharp11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v49CDown: { code: 'accSagittalFlat11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp19CUp: { code: 'accSagittalSharp19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat19CDown: { code: 'accSagittalFlat19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp7v19CUp: { code: 'accSagittalSharp7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat7v19CDown: { code: 'accSagittalFlat7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49SUp: { code: 'accSagittalSharp49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49SDown: { code: 'accSagittalFlat49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp23SUp: { code: 'accSagittalSharp23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat23SDown: { code: 'accSagittalFlat23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13MUp: { code: 'accSagittalSharp5v13MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13MDown: { code: 'accSagittalFlat5v13MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19MUp: { code: 'accSagittalSharp11v19MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19MDown: { code: 'accSagittalFlat11v19MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49MUp: { code: 'accSagittalSharp49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49MDown: { code: 'accSagittalFlat49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v49MUp: { code: 'accSagittalSharp5v49MUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v49MDown: { code: 'accSagittalFlat5v49MDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp49LUp: { code: 'accSagittalSharp49LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat49LDown: { code: 'accSagittalFlat49LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp11v19LUp: { code: 'accSagittalSharp11v19LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat11v19LDown: { code: 'accSagittalFlat11v19LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalSharp5v13LUp: { code: 'accSagittalSharp5v13LUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFlat5v13LDown: { code: 'accSagittalFlat5v13LDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp23SDown: { code: 'accSagittalDoubleSharp23SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat23SUp: { code: 'accSagittalDoubleFlat23SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp49SDown: { code: 'accSagittalDoubleSharp49SDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat49SUp: { code: 'accSagittalDoubleFlat49SUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp7v19CDown: { code: 'accSagittalDoubleSharp7v19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat7v19CUp: { code: 'accSagittalDoubleFlat7v19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19CDown: { code: 'accSagittalDoubleSharp19CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19CUp: { code: 'accSagittalDoubleFlat19CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp11v49CDown: { code: 'accSagittalDoubleSharp11v49CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat11v49CUp: { code: 'accSagittalDoubleFlat11v49CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp143CDown: { code: 'accSagittalDoubleSharp143CDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat143CUp: { code: 'accSagittalDoubleFlat143CUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp17kDown: { code: 'accSagittalDoubleSharp17kDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat17kUp: { code: 'accSagittalDoubleFlat17kUp', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleSharp19sDown: { code: 'accSagittalDoubleSharp19sDown', parenRightPaddingAdjustment: -1 },\n    accSagittalDoubleFlat19sUp: { code: 'accSagittalDoubleFlat19sUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftUp: { code: 'accSagittalShaftUp', parenRightPaddingAdjustment: -1 },\n    accSagittalShaftDown: { code: 'accSagittalShaftDown', parenRightPaddingAdjustment: -1 },\n    accSagittalAcute: { code: 'accSagittalAcute', parenRightPaddingAdjustment: -1 },\n    accSagittalGrave: { code: 'accSagittalGrave', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaUp: { code: 'accSagittal1MinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1MinaDown: { code: 'accSagittal1MinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasUp: { code: 'accSagittal2MinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2MinasDown: { code: 'accSagittal2MinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaUp: { code: 'accSagittal1TinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittal1TinaDown: { code: 'accSagittal1TinaDown', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasUp: { code: 'accSagittal2TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal2TinasDown: { code: 'accSagittal2TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasUp: { code: 'accSagittal3TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal3TinasDown: { code: 'accSagittal3TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasUp: { code: 'accSagittal4TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal4TinasDown: { code: 'accSagittal4TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasUp: { code: 'accSagittal5TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal5TinasDown: { code: 'accSagittal5TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasUp: { code: 'accSagittal6TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal6TinasDown: { code: 'accSagittal6TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasUp: { code: 'accSagittal7TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal7TinasDown: { code: 'accSagittal7TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasUp: { code: 'accSagittal8TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal8TinasDown: { code: 'accSagittal8TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasUp: { code: 'accSagittal9TinasUp', parenRightPaddingAdjustment: -1 },\n    accSagittal9TinasDown: { code: 'accSagittal9TinasDown', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaUp: { code: 'accSagittalFractionalTinaUp', parenRightPaddingAdjustment: -1 },\n    accSagittalFractionalTinaDown: { code: 'accSagittalFractionalTinaDown', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlat: { code: 'accidentalNarrowReversedFlat', parenRightPaddingAdjustment: -1 },\n    accidentalNarrowReversedFlatAndFlat: {\n        code: 'accidentalNarrowReversedFlatAndFlat',\n        parenRightPaddingAdjustment: -1,\n    },\n    accidentalWilsonPlus: { code: 'accidentalWilsonPlus', parenRightPaddingAdjustment: -1 },\n    accidentalWilsonMinus: { code: 'accidentalWilsonMinus', parenRightPaddingAdjustment: -1 },\n};\n// Helps determine the layout of accidentals.\nconst accidentalColumns = {\n    1: {\n        a: [1],\n        b: [1],\n    },\n    2: {\n        a: [1, 2],\n    },\n    3: {\n        a: [1, 3, 2],\n        b: [1, 2, 1],\n        second_on_bottom: [1, 2, 3],\n    },\n    4: {\n        a: [1, 3, 4, 2],\n        b: [1, 2, 3, 1],\n        spaced_out_tetrachord: [1, 2, 1, 2],\n    },\n    5: {\n        a: [1, 3, 5, 4, 2],\n        b: [1, 2, 4, 3, 1],\n        spaced_out_pentachord: [1, 2, 3, 2, 1],\n        very_spaced_out_pentachord: [1, 2, 1, 2, 1],\n    },\n    6: {\n        a: [1, 3, 5, 6, 4, 2],\n        b: [1, 2, 4, 5, 3, 1],\n        spaced_out_hexachord: [1, 3, 2, 1, 3, 2],\n        very_spaced_out_hexachord: [1, 2, 1, 2, 1, 2],\n    },\n};\nconst articulations = {\n    'a.': { code: 'augmentationDot', between_lines: true },\n    av: {\n        aboveCode: 'articStaccatissimoAbove',\n        belowCode: 'articStaccatissimoBelow',\n        between_lines: true,\n    },\n    'a>': {\n        aboveCode: 'articAccentAbove',\n        belowCode: 'articAccentBelow',\n        between_lines: true,\n    },\n    'a-': {\n        aboveCode: 'articTenutoAbove',\n        belowCode: 'articTenutoBelow',\n        between_lines: true,\n    },\n    'a^': {\n        aboveCode: 'articMarcatoAbove',\n        belowCode: 'articMarcatoBelow',\n        between_lines: false,\n    },\n    'a+': { code: 'pluckedLeftHandPizzicato', between_lines: false },\n    ao: {\n        aboveCode: 'pluckedSnapPizzicatoAbove',\n        belowCode: 'pluckedSnapPizzicatoBelow',\n        between_lines: false,\n    },\n    ah: { code: 'stringsHarmonic', between_lines: false },\n    'a@': { aboveCode: 'fermataAbove', belowCode: 'fermataBelow', between_lines: false },\n    'a@a': { code: 'fermataAbove', between_lines: false },\n    'a@u': { code: 'fermataBelow', between_lines: false },\n    'a@s': { aboveCode: 'fermataShortAbove', belowCode: 'fermataShortBelow', between_lines: false },\n    'a@as': { code: 'fermataShortAbove', between_lines: false },\n    'a@us': { code: 'fermataShortBelow', between_lines: false },\n    'a@l': { aboveCode: 'fermataLongAbove', belowCode: 'fermataLongBelow', between_lines: false },\n    'a@al': { code: 'fermataLongAbove', between_lines: false },\n    'a@ul': { code: 'fermataLongBelow', between_lines: false },\n    'a@vl': { aboveCode: 'fermataVeryLongAbove', belowCode: 'fermataVeryLongBelow', between_lines: false },\n    'a@avl': { code: 'fermataVeryLongAbove', between_lines: false },\n    'a@uvl': { code: 'fermataVeryLongBelow', between_lines: false },\n    'a|': { code: 'stringsUpBow', between_lines: false },\n    am: { code: 'stringsDownBow', between_lines: false },\n    'a,': { code: 'pictChokeCymbal', between_lines: false }, // Choked\n};\nconst ornaments = {\n    mordent: { code: 'ornamentShortTrill' },\n    mordent_inverted: { code: 'ornamentMordent' },\n    turn: { code: 'ornamentTurn' },\n    turn_inverted: { code: 'ornamentTurnSlash' },\n    tr: { code: 'ornamentTrill' },\n    upprall: { code: 'ornamentPrecompSlideTrillDAnglebert' },\n    downprall: { code: 'ornamentPrecompDoubleCadenceUpperPrefix' },\n    prallup: { code: 'ornamentPrecompTrillSuffixDandrieu' },\n    pralldown: { code: 'ornamentPrecompTrillLowerSuffix' },\n    upmordent: { code: 'ornamentPrecompSlideTrillBach' },\n    downmordent: { code: 'ornamentPrecompDoubleCadenceUpperPrefixTurn' },\n    lineprall: { code: 'ornamentPrecompAppoggTrill' },\n    prallprall: { code: 'ornamentTremblement' },\n    scoop: { code: 'brassScoop' },\n    doit: { code: 'brassDoitMedium' },\n    fall: { code: 'brassFallLipShort' },\n    doitLong: { code: 'brassLiftMedium' },\n    fallLong: { code: 'brassFallRoughMedium' },\n    bend: { code: 'brassBend' },\n    plungerClosed: { code: 'brassMuteClosed' },\n    plungerOpen: { code: 'brassMuteOpen' },\n    flip: { code: 'brassFlip' },\n    jazzTurn: { code: 'brassJazzTurn' },\n    smear: { code: 'brassSmear' },\n};\nexport class Tables {\n    /**\n     * @returns the `Font` object at the head of the music font stack.\n     */\n    static currentMusicFont() {\n        if (Tables.MUSIC_FONT_STACK.length === 0) {\n            throw new RuntimeError('NoFonts', 'The font stack is empty. See: await Flow.fetchMusicFont(...); Flow.setMusicFont(...).');\n        }\n        else {\n            return Tables.MUSIC_FONT_STACK[0];\n        }\n    }\n    static clefProperties(clef) {\n        if (!clef || !(clef in clefs))\n            throw new RuntimeError('BadArgument', 'Invalid clef: ' + clef);\n        return clefs[clef];\n    }\n    /**\n     * @param keyOctaveGlyph a string in the format \"key/octave\" (e.g., \"c/5\") or \"key/octave/custom-note-head-code\" (e.g., \"g/5/t3\").\n     * @param clef\n     * @param params a struct with one option, `octave_shift` for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n     * @returns properties for the specified note.\n     */\n    static keyProperties(keyOctaveGlyph, clef = 'treble', params) {\n        let options = { octave_shift: 0, duration: '4' };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        const duration = Tables.sanitizeDuration(options.duration);\n        const pieces = keyOctaveGlyph.split('/');\n        if (pieces.length < 2) {\n            throw new RuntimeError('BadArguments', `First argument must be note/octave or note/octave/glyph-code: ${keyOctaveGlyph}`);\n        }\n        const key = pieces[0].toUpperCase();\n        const value = notesInfo[key];\n        if (!value)\n            throw new RuntimeError('BadArguments', 'Invalid key name: ' + key);\n        if (value.octave)\n            pieces[1] = value.octave.toString();\n        let octave = parseInt(pieces[1], 10);\n        // Octave_shift is the shift to compensate for clef 8va/8vb.\n        octave -= options.octave_shift;\n        const baseIndex = octave * 7 - 4 * 7;\n        let line = (baseIndex + value.index) / 2;\n        line += Tables.clefProperties(clef).line_shift;\n        let stroke = 0;\n        if (line <= 0 && (line * 2) % 2 === 0)\n            stroke = 1; // stroke up\n        if (line >= 6 && (line * 2) % 2 === 0)\n            stroke = -1; // stroke down\n        // Integer value for note arithmetic.\n        const int_value = typeof value.int_val !== 'undefined' ? octave * 12 + value.int_val : undefined;\n        // If the user specified a glyph, overwrite the glyph code.\n        const code = value.code;\n        const shift_right = value.shift_right;\n        let customNoteHeadProps = {};\n        if (pieces.length > 2 && pieces[2]) {\n            const glyphName = pieces[2].toUpperCase();\n            customNoteHeadProps = { code: this.codeNoteHead(glyphName, duration) } || {};\n        }\n        return Object.assign({ key,\n            octave,\n            line,\n            int_value, accidental: value.accidental, code,\n            stroke,\n            shift_right, displaced: false }, customNoteHeadProps);\n    }\n    static integerToNote(integer) {\n        if (typeof integer === 'undefined' || integer < 0 || integer > 11) {\n            throw new RuntimeError('BadArguments', `integerToNote() requires an integer in the range [0, 11]: ${integer}`);\n        }\n        const table = {\n            0: 'C',\n            1: 'C#',\n            2: 'D',\n            3: 'D#',\n            4: 'E',\n            5: 'F',\n            6: 'F#',\n            7: 'G',\n            8: 'G#',\n            9: 'A',\n            10: 'A#',\n            11: 'B',\n        };\n        const noteValue = table[integer];\n        if (!noteValue) {\n            throw new RuntimeError('BadArguments', `Unknown note value for integer: ${integer}`);\n        }\n        return noteValue;\n    }\n    static tabToGlyphProps(fret, scale = 1.0) {\n        let glyph = undefined;\n        let width = 0;\n        let shift_y = 0;\n        if (fret.toUpperCase() === 'X') {\n            const glyphMetrics = new Glyph('accidentalDoubleSharp', Tables.TABLATURE_FONT_SCALE).getMetrics();\n            glyph = 'accidentalDoubleSharp';\n            if (glyphMetrics.width == undefined || glyphMetrics.height == undefined)\n                throw new RuntimeError('InvalidMetrics', 'Width and height required');\n            width = glyphMetrics.width;\n            shift_y = -glyphMetrics.height / 2;\n        }\n        else {\n            width = Tables.textWidth(fret);\n        }\n        return {\n            text: fret,\n            code: glyph,\n            getWidth: () => width * scale,\n            shift_y,\n        };\n    }\n    // Used by annotation.ts and bend.ts. Clearly this implementation only works for the default font size.\n    // TODO: The actual width depends on the font family, size, weight, style.\n    static textWidth(text) {\n        return 7 * text.toString().length;\n    }\n    static articulationCodes(artic) {\n        return articulations[artic];\n    }\n    static accidentalCodes(acc) {\n        return accidentals[acc];\n    }\n    static ornamentCodes(acc) {\n        return ornaments[acc];\n    }\n    static keySignature(spec) {\n        const keySpec = keySignatures[spec];\n        if (!keySpec) {\n            throw new RuntimeError('BadKeySignature', `Bad key signature spec: '${spec}'`);\n        }\n        if (!keySpec.acc) {\n            return [];\n        }\n        const accidentalList = {\n            b: [2, 0.5, 2.5, 1, 3, 1.5, 3.5],\n            '#': [0, 1.5, -0.5, 1, 2.5, 0.5, 2],\n        };\n        // Check if the accidental type exists in accidentalList\n        const baseNotes = accidentalList[keySpec.acc];\n        if (!baseNotes) {\n            throw new RuntimeError('UnsupportedAccidental', `Unsupported accidental type: '${keySpec.acc}'`);\n        }\n        const accidentalCount = Math.min(keySpec.num, 7);\n        const doubleAccidentalCount = Math.max(keySpec.num - 7, 0);\n        // Map the first `accidentalCount` notes as regular accidentals\n        const regularAccidentals = baseNotes.slice(doubleAccidentalCount, accidentalCount).map((line) => ({\n            type: `${keySpec.acc}`,\n            line,\n        }));\n        // Map the last `doubleAccidentalCount` notes as double accidentals\n        const doubleAccidentals = baseNotes\n            .slice(0, doubleAccidentalCount)\n            .map((line) => ({ type: `${keySpec.acc}${keySpec.acc}`, line }));\n        // Combine regular and double accidentals\n        return [...regularAccidentals, ...doubleAccidentals];\n    }\n    static getKeySignatures() {\n        return keySignatures;\n    }\n    static hasKeySignature(spec) {\n        return spec in keySignatures;\n    }\n    /**\n     * Convert duration aliases to the number based duration.\n     * If the input isn't an alias, simply return the input.\n     * @param duration\n     * @returns Example: 'q' -> '4', '8' -> '8'\n     */\n    static sanitizeDuration(duration) {\n        const durationNumber = durationAliases[duration];\n        if (durationNumber !== undefined) {\n            duration = durationNumber;\n        }\n        if (durations[duration] === undefined) {\n            throw new RuntimeError('BadArguments', `The provided duration is not valid: ${duration}`);\n        }\n        return duration;\n    }\n    /** Convert the `duration` to a fraction. */\n    static durationToFraction(duration) {\n        return new Fraction().parse(Tables.sanitizeDuration(duration));\n    }\n    /** Convert the `duration` to a number. */\n    static durationToNumber(duration) {\n        return Tables.durationToFraction(duration).value();\n    }\n    /* Convert the `duration` to total ticks. */\n    static durationToTicks(duration) {\n        duration = Tables.sanitizeDuration(duration);\n        const ticks = durations[duration];\n        if (ticks === undefined) {\n            throw new RuntimeError('InvalidDuration');\n        }\n        return ticks;\n    }\n    static codeNoteHead(type, duration) {\n        let code = '';\n        switch (type) {\n            /* Diamond */\n            case 'D0':\n                code = 'noteheadDiamondWhole';\n                break;\n            case 'D1':\n                code = 'noteheadDiamondHalf';\n                break;\n            case 'D2':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'D3':\n                code = 'noteheadDiamondBlack';\n                break;\n            /* Triangle */\n            case 'T0':\n                code = 'noteheadTriangleUpWhole';\n                break;\n            case 'T1':\n                code = 'noteheadTriangleUpHalf';\n                break;\n            case 'T2':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'T3':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            /* Cross */\n            case 'X0':\n                code = 'noteheadXWhole';\n                break;\n            case 'X1':\n                code = 'noteheadXHalf';\n                break;\n            case 'X2':\n                code = 'noteheadXBlack';\n                break;\n            case 'X3':\n                code = 'noteheadCircleX';\n                break;\n            /* Square */\n            case 'S1':\n                code = 'noteheadSquareWhite';\n                break;\n            case 'S2':\n                code = 'noteheadSquareBlack';\n                break;\n            /* Rectangle */\n            case 'R1':\n                code = 'vexNoteHeadRectWhite'; // no smufl code\n                break;\n            case 'R2':\n                code = 'vexNoteHeadRectBlack'; // no smufl code\n                break;\n            case 'DO':\n                code = 'noteheadTriangleUpBlack';\n                break;\n            case 'RE':\n                code = 'noteheadMoonBlack';\n                break;\n            case 'MI':\n                code = 'noteheadDiamondBlack';\n                break;\n            case 'FA':\n                code = 'noteheadTriangleLeftBlack';\n                break;\n            case 'FAUP':\n                code = 'noteheadTriangleRightBlack';\n                break;\n            case 'SO':\n                code = 'noteheadBlack';\n                break;\n            case 'LA':\n                code = 'noteheadSquareBlack';\n                break;\n            case 'TI':\n                code = 'noteheadTriangleRoundDownBlack';\n                break;\n            case 'D':\n            case 'H': // left for backwards compatibility\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDiamondDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadDiamondWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadDiamondHalf';\n                        break;\n                    default:\n                        code = 'noteheadDiamondBlack';\n                        break;\n                }\n                break;\n            case 'N':\n            case 'G':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadHalf';\n                        break;\n                    default:\n                        code = 'noteheadBlack';\n                        break;\n                }\n                break;\n            case 'M': // left for backwards compatibility\n            case 'X':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadXHalf';\n                        break;\n                    default:\n                        code = 'noteheadXBlack';\n                        break;\n                }\n                break;\n            case 'CX':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircleXDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircleXWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircleXHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircleX';\n                        break;\n                }\n                break;\n            case 'CI':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadCircledDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadCircledWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadCircledHalf';\n                        break;\n                    default:\n                        code = 'noteheadCircledBlack';\n                        break;\n                }\n                break;\n            case 'SQ':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadDoubleWholeSquare';\n                        break;\n                    case '1':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    case '2':\n                        code = 'noteheadSquareWhite';\n                        break;\n                    default:\n                        code = 'noteheadSquareBlack';\n                        break;\n                }\n                break;\n            case 'TU':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleUpDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleUpWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleUpHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleUpBlack';\n                        break;\n                }\n                break;\n            case 'TD':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadTriangleDownDoubleWhole';\n                        break;\n                    case '1':\n                        code = 'noteheadTriangleDownWhole';\n                        break;\n                    case '2':\n                        code = 'noteheadTriangleDownHalf';\n                        break;\n                    default:\n                        code = 'noteheadTriangleDownBlack';\n                        break;\n                }\n                break;\n            case 'SF':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole1';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole1';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf1';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack1';\n                }\n                break;\n            case 'SB':\n                switch (duration) {\n                    case '1/2':\n                        code = 'noteheadSlashedDoubleWhole2';\n                        break;\n                    case '1':\n                        code = 'noteheadSlashedWhole2';\n                        break;\n                    case '2':\n                        code = 'noteheadSlashedHalf2';\n                        break;\n                    default:\n                        code = 'noteheadSlashedBlack2';\n                }\n                break;\n        }\n        return code;\n    }\n    // Return a glyph given duration and type. The type can be a custom glyph code from customNoteHeads.\n    // The default type is a regular note ('n').\n    static getGlyphProps(duration, type = 'n') {\n        duration = Tables.sanitizeDuration(duration);\n        // Lookup duration for default glyph head code\n        let code = durationCodes[duration];\n        if (code === undefined) {\n            code = durationCodes['4'];\n        }\n        // Get glyph properties for 'type' from duration string (note, rest, harmonic, muted, slash)\n        let glyphTypeProperties = code[type];\n        // Try and get it from the custom list of note heads\n        const codeNoteHead = Tables.codeNoteHead(type.toUpperCase(), duration);\n        if (codeNoteHead != '')\n            glyphTypeProperties = Object.assign(Object.assign({}, glyphTypeProperties), { code_head: codeNoteHead, code: codeNoteHead });\n        const code_head = glyphTypeProperties.code_head;\n        // The default implementation of getWidth() calls Glyph.getWidth(code_head, scale).\n        // This can be overridden by an individual glyph type (see slash noteheads below: Tables.SLASH_NOTEHEAD_WIDTH).\n        const getWidth = (scale = Tables.NOTATION_FONT_SCALE) => Glyph.getWidth(code_head, scale);\n        // Merge duration props for 'duration' with the note head properties.\n        return Object.assign(Object.assign(Object.assign({}, code.common), { getWidth: getWidth }), glyphTypeProperties);\n    }\n}\nTables.UNISON = true;\nTables.SOFTMAX_FACTOR = 10;\nTables.STEM_WIDTH = 1.5;\nTables.STEM_HEIGHT = 35;\nTables.STAVE_LINE_THICKNESS = 1;\nTables.RENDER_PRECISION_PLACES = 3;\nTables.RESOLUTION = RESOLUTION;\n/**\n * Customize this by calling Flow.setMusicFont(...fontNames);\n */\nTables.MUSIC_FONT_STACK = [];\nTables.NOTATION_FONT_SCALE = 39;\nTables.TABLATURE_FONT_SCALE = 39;\nTables.SLASH_NOTEHEAD_WIDTH = 15;\nTables.STAVE_LINE_DISTANCE = 10;\n// HACK:\n// Since text origins are positioned at the baseline, we must\n// compensate for the ascender of the text. Of course, 1 staff space is\n// a very poor approximation.\n//\n// This will be deprecated in the future. This is a temporary solution until\n// we have more robust text metrics.\nTables.TEXT_HEIGHT_OFFSET_HACK = 1;\nTables.accidentalMap = accidentals;\nTables.accidentalColumnsTable = accidentalColumns;\nTables.unicode = {\n    // ♯ accidental sharp\n    sharp: String.fromCharCode(0x266f),\n    // ♭ accidental flat\n    flat: String.fromCharCode(0x266d),\n    // ♮ accidental natural\n    natural: String.fromCharCode(0x266e),\n    // △ major seventh\n    triangle: String.fromCharCode(0x25b3),\n    // ø half-diminished\n    'o-with-slash': String.fromCharCode(0x00f8),\n    // ° diminished\n    degrees: String.fromCharCode(0x00b0),\n    // ○ diminished\n    circle: String.fromCharCode(0x25cb),\n};\n/* The list of valid note types. Used by note.ts during parseNoteStruct(). */\nTables.validTypes = validNoteTypes;\n// Default time signature.\nTables.TIME4_4 = {\n    num_beats: 4,\n    beat_value: 4,\n    resolution: RESOLUTION,\n};\n// 1/2, 1, 2, 4, 8, 16, 32, 64, 128\n// NOTE: There is no 256 here! However, there are other mentions of 256 in this file.\n// For example, in durations has a 256 key, and sanitizeDuration() can return 256.\n// The sanitizeDuration() bit may need to be removed by 0xfe.\nconst durationCodes = {\n    '1/2': {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Breve rest\n            code_head: 'restDoubleWhole',\n            rest: true,\n            position: 'B/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Breve note slash -\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    1: {\n        common: {\n            code_head: '',\n            stem: false,\n            flag: false,\n            stem_up_extension: -Tables.STEM_HEIGHT,\n            stem_down_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_up_extension: -Tables.STEM_HEIGHT,\n            tabnote_stem_down_extension: -Tables.STEM_HEIGHT,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Whole rest\n            code_head: 'restWhole',\n            ledger_code_head: 'restWholeLegerLine',\n            rest: true,\n            position: 'D/5',\n            dot_shiftY: 0.5,\n        },\n        s: {\n            // Whole note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    2: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Half rest\n            code_head: 'restHalf',\n            ledger_code_head: 'restHalfLegerLine',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n        },\n        s: {\n            // Half note slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    4: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: false,\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Quarter rest\n            code_head: 'restQuarter',\n            stem: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.5,\n            line_below: 1.5,\n        },\n        s: {\n            // Quarter slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    8: {\n        common: {\n            code_head: '',\n            stem: true,\n            flag: true,\n            beam_count: 1,\n            stem_beam_extension: 0,\n            code_flag_upstem: 'flag8thUp',\n            code_flag_downstem: 'flag8thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Eighth rest\n            code_head: 'rest8th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 1.0,\n        },\n        s: {\n            // Eighth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    16: {\n        common: {\n            code_head: '',\n            beam_count: 2,\n            stem_beam_extension: 0,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag16thUp',\n            code_flag_downstem: 'flag16thDown',\n            stem_up_extension: 0,\n            stem_down_extension: 0,\n            tabnote_stem_up_extension: 0,\n            tabnote_stem_down_extension: 0,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixteenth rest\n            code_head: 'rest16th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -0.5,\n            line_above: 1.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Sixteenth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    32: {\n        common: {\n            code_head: '',\n            beam_count: 3,\n            stem_beam_extension: 7.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag32ndUp',\n            code_flag_downstem: 'flag32ndDown',\n            stem_up_extension: 9,\n            stem_down_extension: 9,\n            tabnote_stem_up_extension: 9,\n            tabnote_stem_down_extension: 9,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Thirty-second rest\n            code_head: 'rest32nd',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 2.0,\n        },\n        s: {\n            // Thirty-second slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    64: {\n        common: {\n            code_head: '',\n            beam_count: 4,\n            stem_beam_extension: 15,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag64thUp',\n            code_flag_downstem: 'flag64thDown',\n            stem_up_extension: 13,\n            stem_down_extension: 13,\n            tabnote_stem_up_extension: 13,\n            tabnote_stem_down_extension: 13,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Sixty-fourth rest\n            code_head: 'rest64th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -1.5,\n            line_above: 2.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Sixty-fourth slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n    128: {\n        common: {\n            code_head: '',\n            beam_count: 5,\n            stem_beam_extension: 22.5,\n            stem: true,\n            flag: true,\n            code_flag_upstem: 'flag128thUp',\n            code_flag_downstem: 'flag128thDown',\n            stem_up_extension: 22,\n            stem_down_extension: 22,\n            tabnote_stem_up_extension: 22,\n            tabnote_stem_down_extension: 22,\n            dot_shiftY: 0,\n            line_above: 0,\n            line_below: 0,\n        },\n        r: {\n            // Hundred-twenty-eight rest\n            code_head: 'rest128th',\n            stem: false,\n            flag: false,\n            rest: true,\n            position: 'B/4',\n            dot_shiftY: -2.5,\n            line_above: 3.0,\n            line_below: 3.0,\n        },\n        s: {\n            // Hundred-twenty-eight slash\n            // Drawn with canvas primitives\n            getWidth: () => Tables.SLASH_NOTEHEAD_WIDTH,\n            position: 'B/4',\n        },\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var OutlineCode;\n(function (OutlineCode) {\n    OutlineCode[OutlineCode[\"MOVE\"] = 0] = \"MOVE\";\n    OutlineCode[OutlineCode[\"LINE\"] = 1] = \"LINE\";\n    OutlineCode[OutlineCode[\"QUADRATIC\"] = 2] = \"QUADRATIC\";\n    OutlineCode[OutlineCode[\"BEZIER\"] = 3] = \"BEZIER\";\n})(OutlineCode || (OutlineCode = {}));\nclass GlyphCacheEntry {\n    constructor(fontStack, code, category) {\n        this.point = -1;\n        this.metrics = Glyph.loadMetrics(fontStack, code, category);\n        this.bbox = Glyph.getOutlineBoundingBox(this.metrics.outline, this.metrics.scale, this.metrics.x_shift, this.metrics.y_shift);\n        if (category) {\n            this.point = Glyph.lookupFontMetric(this.metrics.font, category, code, 'point', -1);\n        }\n    }\n}\nclass GlyphCache {\n    constructor() {\n        this.cache = new Map();\n    }\n    lookup(code, category) {\n        let entries = this.cache.get(Glyph.CURRENT_CACHE_KEY);\n        if (entries === undefined) {\n            entries = {};\n            this.cache.set(Glyph.CURRENT_CACHE_KEY, entries);\n        }\n        const key = category ? `${code}%${category}` : code;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = new GlyphCacheEntry(Glyph.MUSIC_FONT_STACK, code, category);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n}\nclass GlyphOutline {\n    constructor(outline, originX, originY, scale) {\n        this.outline = outline;\n        this.originX = originX;\n        this.originY = originY;\n        this.scale = scale;\n        this.i = 0;\n        this.precision = 1;\n        // Automatically assign private properties: this.outline, this.originX, this.originY, and this.scale.\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n    }\n    done() {\n        return this.i >= this.outline.length;\n    }\n    next() {\n        return Math.round((this.outline[this.i++] * this.precision) / this.precision);\n    }\n    nextX() {\n        return Math.round((this.originX + this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    nextY() {\n        return Math.round((this.originY - this.outline[this.i++] * this.scale) * this.precision) / this.precision;\n    }\n    static parse(str) {\n        const result = [];\n        const parts = str.split(' ');\n        let i = 0;\n        while (i < parts.length) {\n            switch (parts[i++]) {\n                case 'm':\n                    result.push(OutlineCode.MOVE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'l':\n                    result.push(OutlineCode.LINE, parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'q':\n                    result.push(OutlineCode.QUADRATIC, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n                case 'b':\n                    result.push(OutlineCode.BEZIER, parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]), parseInt(parts[i++]));\n                    break;\n            }\n        }\n        return result;\n    }\n}\nexport class Glyph extends Element {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Glyph;\n    }\n    /**\n     * Pass a key of the form `glyphs.{category}.{code}.{key}` to Font.lookupMetric(). If the initial lookup fails,\n     * try again with the path `glyphs.{category}.{key}`. If the second lookup fails, return the defaultValue.\n     *\n     * @param font\n     * @param category any metric path under 'glyphs', so 'stem.up' could resolve to glyphs.stem.up.shiftX, glyphs.stem.up.shiftY, etc.\n     * @param code\n     * @param key\n     * @param defaultValue\n     */\n    static lookupFontMetric(font, category, code, key, defaultValue) {\n        let value = font.lookupMetric(`glyphs.${category}.${code}.${key}`, undefined);\n        if (value === undefined) {\n            // The first lookup failed, so we omit .${code} and try again (with a defaultValue this time).\n            value = font.lookupMetric(`glyphs.${category}.${key}`, defaultValue);\n        }\n        return value;\n    }\n    static lookupGlyph(fontStack, code) {\n        defined(fontStack, 'BadFontStack', 'Font stack is misconfigured');\n        let glyph;\n        let font;\n        for (let i = 0; i < fontStack.length; i++) {\n            font = fontStack[i];\n            glyph = font.getGlyphs()[code];\n            if (glyph)\n                return { glyph, font };\n        }\n        throw new RuntimeError('BadGlyph', `Glyph ${code} does not exist in font.`);\n    }\n    static loadMetrics(fontStack, code, category) {\n        const { glyph, font } = Glyph.lookupGlyph(fontStack, code);\n        if (!glyph.o)\n            throw new RuntimeError('BadGlyph', `Glyph ${code} has no outline defined.`);\n        let x_shift = 0;\n        let y_shift = 0;\n        let scale = 1;\n        if (category && font) {\n            x_shift = Glyph.lookupFontMetric(font, category, code, 'shiftX', 0);\n            y_shift = Glyph.lookupFontMetric(font, category, code, 'shiftY', 0);\n            scale = Glyph.lookupFontMetric(font, category, code, 'scale', 1);\n        }\n        const x_min = glyph.x_min;\n        const x_max = glyph.x_max;\n        const ha = glyph.ha;\n        if (!glyph.cached_outline) {\n            glyph.cached_outline = GlyphOutline.parse(glyph.o);\n        }\n        return {\n            x_min,\n            x_max,\n            x_shift,\n            y_shift,\n            scale,\n            ha,\n            outline: glyph.cached_outline,\n            font,\n            width: x_max - x_min,\n            height: ha,\n        };\n    }\n    /**\n     * Renders glyphs from the default font stack.\n     *\n     * @param ctx Canvas or SVG context\n     * @param x_pos x coordinate\n     * @param y_pos y coordinate\n     * @param point the point size of the font\n     * @param code the glyph code in font.getGlyphs()\n     * @param options\n     * @returns\n     */\n    static renderGlyph(ctx, x_pos, y_pos, point, code, options) {\n        var _a;\n        const data = Glyph.cache.lookup(code, options === null || options === void 0 ? void 0 : options.category);\n        const metrics = data.metrics;\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const customScale = (_a = options === null || options === void 0 ? void 0 : options.scale) !== null && _a !== void 0 ? _a : 1;\n        const scale = ((point * 72.0) / (metrics.font.getResolution() * 100.0)) * metrics.scale * customScale;\n        Glyph.renderOutline(ctx, metrics.outline, scale, x_pos + metrics.x_shift * customScale, y_pos + metrics.y_shift * customScale);\n        return metrics;\n    }\n    static renderOutline(ctx, outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        ctx.beginPath();\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    ctx.moveTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.LINE:\n                    ctx.lineTo(go.nextX(), go.nextY());\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.quadraticCurveTo(go.nextX(), go.nextY(), x, y);\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    ctx.bezierCurveTo(go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    break;\n            }\n        }\n        ctx.fill();\n    }\n    static getOutlineBoundingBox(outline, scale, x_pos, y_pos) {\n        const go = new GlyphOutline(outline, x_pos, y_pos, scale);\n        const bboxComp = new BoundingBoxComputation();\n        // (penX, penY) hold the pen position: the start of each stroke.\n        let penX = x_pos;\n        let penY = y_pos;\n        let x, y;\n        while (!go.done()) {\n            switch (go.next()) {\n                case OutlineCode.MOVE:\n                    // Note that we don't add any points to the bounding box until a srroke is actually drawn.\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    break;\n                case OutlineCode.LINE:\n                    bboxComp.addPoint(penX, penY);\n                    penX = go.nextX();\n                    penY = go.nextY();\n                    bboxComp.addPoint(penX, penY);\n                    break;\n                case OutlineCode.QUADRATIC:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addQuadraticCurve(penX, penY, go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n                case OutlineCode.BEZIER:\n                    x = go.nextX();\n                    y = go.nextY();\n                    bboxComp.addBezierCurve(penX, penY, go.nextX(), go.nextY(), go.nextX(), go.nextY(), x, y);\n                    penX = x;\n                    penY = y;\n                    break;\n            }\n        }\n        return new BoundingBox(bboxComp.getX1(), bboxComp.getY1(), bboxComp.width(), bboxComp.height());\n    }\n    static getWidth(code, point, category) {\n        const data = Glyph.cache.lookup(code, category);\n        if (data.point != -1) {\n            point = data.point;\n        }\n        const scale = (point * 72) / (data.metrics.font.getResolution() * 100);\n        return data.bbox.getW() * scale;\n    }\n    /**\n     * @param code\n     * @param point\n     * @param options\n     */\n    constructor(code, point, options) {\n        super();\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.bbox = new BoundingBox(0, 0, 0, 0);\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        this.options = {};\n        this.scale = 1;\n        this.code = code;\n        this.point = point;\n        this.originShift = { x: 0, y: 0 };\n        this.x_shift = 0;\n        this.y_shift = 0;\n        if (options) {\n            this.setOptions(options);\n        }\n        else {\n            this.reset();\n        }\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n    getCode() {\n        return this.code;\n    }\n    // eslint-disable-next-line\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.reset();\n    }\n    setPoint(point) {\n        this.point = point;\n        return this;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    setXShift(x_shift) {\n        this.x_shift = x_shift;\n        return this;\n    }\n    getYshift() {\n        return this.y_shift;\n    }\n    setYShift(y_shift) {\n        this.y_shift = y_shift;\n        return this;\n    }\n    reset() {\n        const data = Glyph.cache.lookup(this.code, this.options.category);\n        this.metrics = data.metrics;\n        // Override point from metrics file\n        if (data.point != -1) {\n            this.point = data.point;\n        }\n        this.scale = (this.point * 72) / (this.metrics.font.getResolution() * 100);\n        this.bbox = new BoundingBox(data.bbox.getX() * this.scale, data.bbox.getY() * this.scale, data.bbox.getW() * this.scale, data.bbox.getH() * this.scale);\n    }\n    checkMetrics() {\n        return defined(this.metrics, 'BadGlyph', `Glyph ${this.code} is not initialized.`);\n    }\n    getMetrics() {\n        const metrics = this.checkMetrics();\n        const metricsScale = metrics.scale;\n        return {\n            x_min: metrics.x_min * this.scale * metricsScale,\n            x_max: metrics.x_max * this.scale * metricsScale,\n            width: this.bbox.getW(),\n            height: this.bbox.getH(),\n            scale: this.scale * metricsScale,\n            x_shift: metrics.x_shift,\n            y_shift: metrics.y_shift,\n            outline: metrics.outline,\n            font: metrics.font,\n            ha: metrics.ha,\n        };\n    }\n    setOriginX(x) {\n        const { bbox } = this;\n        const originX = Math.abs(bbox.getX() / bbox.getW());\n        const xShift = (x - originX) * bbox.getW();\n        this.originShift.x = -xShift;\n    }\n    setOriginY(y) {\n        const { bbox } = this;\n        const originY = Math.abs(bbox.getY() / bbox.getH());\n        const yShift = (y - originY) * bbox.getH();\n        this.originShift.y = -yShift;\n    }\n    setOrigin(x, y) {\n        this.setOriginX(x);\n        this.setOriginY(y);\n    }\n    render(ctx, x, y) {\n        const metrics = this.checkMetrics();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle(ctx);\n        const xPos = x + this.originShift.x + metrics.x_shift;\n        const yPos = y + this.originShift.y + metrics.y_shift;\n        Glyph.renderOutline(ctx, outline, scale, xPos, yPos);\n        this.restoreStyle(ctx);\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    renderToStave(x) {\n        const context = this.checkContext();\n        const metrics = this.checkMetrics();\n        const stave = this.checkStave();\n        const outline = metrics.outline;\n        const scale = this.scale * metrics.scale;\n        this.setRendered();\n        this.applyStyle();\n        const xPos = x + this.x_shift + metrics.x_shift;\n        const yPos = stave.getYForGlyphs() + this.y_shift + metrics.y_shift;\n        Glyph.renderOutline(context, outline, scale, xPos, yPos);\n        this.restoreStyle();\n    }\n}\nGlyph.cache = new GlyphCache();\n// The current cache key for GlyphCache above.\n// Computed when Flow.setMusicFont(...) is called.\n// It is set to a comma separated list of font names.\nGlyph.CURRENT_CACHE_KEY = '';\n// Used by the GlyphCache above.\n// Set when Flow.setMusicFont(...) is called.\nGlyph.MUSIC_FONT_STACK = [];\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var ModifierPosition;\n(function (ModifierPosition) {\n    ModifierPosition[ModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    ModifierPosition[ModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    ModifierPosition[ModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    ModifierPosition[ModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    ModifierPosition[ModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n})(ModifierPosition || (ModifierPosition = {}));\n// To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n// function L(...args) { if (Modifier.DEBUG) log('Vex.Flow.Modifier', args); }\n/**\n * `Modifier` is an abstract interface for notational elements that modify\n * a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n *\n * For a `Modifier` instance to be positioned correctly, it must be part of\n * a `ModifierContext`. All modifiers in the same context are rendered relative to\n * one another.\n *\n * Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n * in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n * `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n */\nexport class Modifier extends Element {\n    /**\n     * Modifiers category string. Every modifier has a different category.\n     * The `ModifierContext` uses this to determine the type and order of the modifiers.\n     */\n    static get CATEGORY() {\n        return Category.Modifier;\n    }\n    /** Modifiers can be positioned almost anywhere, relative to a note. */\n    static get Position() {\n        return ModifierPosition;\n    }\n    static get PositionString() {\n        return {\n            center: ModifierPosition.CENTER,\n            above: ModifierPosition.ABOVE,\n            below: ModifierPosition.BELOW,\n            left: ModifierPosition.LEFT,\n            right: ModifierPosition.RIGHT,\n        };\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        // The `text_line` is reserved space above or below a stave.\n        this.text_line = 0;\n        this.position = Modifier.Position.LEFT;\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.spacingFromNextModifier = 0;\n    }\n    /** Called when position changes. */\n    reset() {\n        // DO NOTHING.\n    }\n    /** Get modifier widths. */\n    getWidth() {\n        return this.width;\n    }\n    /** Set modifier widths. */\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    /** Get attached note (`StaveNote`, `TabNote`, etc.) */\n    getNote() {\n        return defined(this.note, 'NoNote', 'Modifier has no note.');\n    }\n    /**\n     * Used in draw() to check and get the attached note (`StaveNote`, `TabNote`, etc.).\n     * Also verifies that the index is valid.\n     */\n    checkAttachedNote() {\n        const category = this.getCategory();\n        defined(this.index, 'NoIndex', `Can't draw ${category} without an index.`);\n        return defined(this.note, 'NoNote', `Can't draw ${category} without a note.`);\n    }\n    /**\n     * Set attached note.\n     * @param note (`StaveNote`, `TabNote`, etc.)\n     */\n    setNote(note) {\n        this.note = note;\n        return this;\n    }\n    /** Get note index, which is a specific note in a chord. */\n    getIndex() {\n        return this.index;\n    }\n    /** Check and get note index, which is a specific note in a chord. */\n    checkIndex() {\n        return defined(this.index, 'NoIndex', 'Modifier has an invalid index.');\n    }\n    /** Set note index, which is a specific note in a chord. */\n    setIndex(index) {\n        this.index = index;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'Modifier Context Required');\n    }\n    /** Every modifier must be part of a `ModifierContext`. */\n    setModifierContext(c) {\n        this.modifierContext = c;\n        return this;\n    }\n    /** Get position. */\n    getPosition() {\n        return this.position;\n    }\n    /**\n     * Set position.\n     * @param position CENTER | LEFT | RIGHT | ABOVE | BELOW\n     */\n    setPosition(position) {\n        this.position = typeof position === 'string' ? Modifier.PositionString[position] : position;\n        this.reset();\n        return this;\n    }\n    /** Set the `text_line` for the modifier. */\n    setTextLine(line) {\n        this.text_line = line;\n        return this;\n    }\n    /** Shift modifier down `y` pixels. Negative values shift up. */\n    setYShift(y) {\n        this.y_shift = y;\n        return this;\n    }\n    /** Set spacing from next modifier. */\n    setSpacingFromNextModifier(x) {\n        this.spacingFromNextModifier = x;\n    }\n    /** Get spacing from next modifier. */\n    getSpacingFromNextModifier() {\n        return this.spacingFromNextModifier;\n    }\n    /**\n     * Shift modifier `x` pixels in the direction of the modifier. Negative values\n     * shift reverse.\n     */\n    setXShift(x) {\n        this.x_shift = 0;\n        if (this.position === Modifier.Position.LEFT) {\n            this.x_shift -= x;\n        }\n        else {\n            this.x_shift += x;\n        }\n        return this;\n    }\n    /** Get shift modifier `x` */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render the modifier onto the canvas. */\n    draw() {\n        this.checkContext();\n        throw new RuntimeError('NotImplemented', 'draw() not implemented for this modifier.');\n    }\n    // aligns sub notes of NoteSubGroup (or GraceNoteGroup) to the main note with correct x-offset\n    alignSubNotesWithNote(subNotes, note) {\n        // Shift over the tick contexts of each note\n        const tickContext = note.getTickContext();\n        const metrics = tickContext.getMetrics();\n        const stave = note.getStave();\n        const subNoteXOffset = tickContext.getX() - metrics.modLeftPx - metrics.modRightPx + this.getSpacingFromNextModifier();\n        subNotes.forEach((subNote) => {\n            const subTickContext = subNote.getTickContext();\n            if (stave)\n                subNote.setStave(stave);\n            subTickContext.setXOffset(subNoteXOffset); // don't touch baseX to avoid shift each render\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { RuntimeError } from './util';\n/** Music implements some standard music theory routines. */\nexport class Music {\n    /** Number of an canonical notes (12). */\n    static get NUM_TONES() {\n        return this.canonical_notes.length;\n    }\n    /** Names of root notes ('c', 'd',...) */\n    static get roots() {\n        return ['c', 'd', 'e', 'f', 'g', 'a', 'b'];\n    }\n    /** Values of the root notes.*/\n    static get root_values() {\n        return [0, 2, 4, 5, 7, 9, 11];\n    }\n    /** Indices of the root notes.*/\n    static get root_indices() {\n        return {\n            c: 0,\n            d: 1,\n            e: 2,\n            f: 3,\n            g: 4,\n            a: 5,\n            b: 6,\n        };\n    }\n    /** Names of canonical notes ('c', 'c#', 'd',...). */\n    static get canonical_notes() {\n        return ['c', 'c#', 'd', 'd#', 'e', 'f', 'f#', 'g', 'g#', 'a', 'a#', 'b'];\n    }\n    /** Names of diatonic intervals ('unison', 'm2', 'M2',...). */\n    static get diatonic_intervals() {\n        return ['unison', 'm2', 'M2', 'm3', 'M3', 'p4', 'dim5', 'p5', 'm6', 'M6', 'b7', 'M7', 'octave'];\n    }\n    /** NoteAccidental associated to diatonic intervals. */\n    static get diatonic_accidentals() {\n        return {\n            unison: { note: 0, accidental: 0 },\n            m2: { note: 1, accidental: -1 },\n            M2: { note: 1, accidental: 0 },\n            m3: { note: 2, accidental: -1 },\n            M3: { note: 2, accidental: 0 },\n            p4: { note: 3, accidental: 0 },\n            dim5: { note: 4, accidental: -1 },\n            p5: { note: 4, accidental: 0 },\n            m6: { note: 5, accidental: -1 },\n            M6: { note: 5, accidental: 0 },\n            b7: { note: 6, accidental: -1 },\n            M7: { note: 6, accidental: 0 },\n            octave: { note: 7, accidental: 0 },\n        };\n    }\n    /** Semitones shift associated to intervals .*/\n    static get intervals() {\n        return {\n            u: 0,\n            unison: 0,\n            m2: 1,\n            b2: 1,\n            min2: 1,\n            S: 1,\n            H: 1,\n            2: 2,\n            M2: 2,\n            maj2: 2,\n            T: 2,\n            W: 2,\n            m3: 3,\n            b3: 3,\n            min3: 3,\n            M3: 4,\n            3: 4,\n            maj3: 4,\n            4: 5,\n            p4: 5,\n            '#4': 6,\n            b5: 6,\n            aug4: 6,\n            dim5: 6,\n            5: 7,\n            p5: 7,\n            '#5': 8,\n            b6: 8,\n            aug5: 8,\n            6: 9,\n            M6: 9,\n            maj6: 9,\n            b7: 10,\n            m7: 10,\n            min7: 10,\n            dom7: 10,\n            M7: 11,\n            maj7: 11,\n            8: 12,\n            octave: 12,\n        };\n    }\n    /** Semitones shifts associated with scales. */\n    static get scales() {\n        return {\n            major: [2, 2, 1, 2, 2, 2, 1],\n            minor: [2, 1, 2, 2, 1, 2, 2],\n            ionian: [2, 2, 1, 2, 2, 2, 1],\n            dorian: [2, 1, 2, 2, 2, 1, 2],\n            phyrgian: [1, 2, 2, 2, 1, 2, 2],\n            lydian: [2, 2, 2, 1, 2, 2, 1],\n            mixolydian: [2, 2, 1, 2, 2, 1, 2],\n            aeolian: [2, 1, 2, 2, 1, 2, 2],\n            locrian: [1, 2, 2, 1, 2, 2, 2],\n        };\n    }\n    /** Scales associated with m (minor) and M (major). */\n    static get scaleTypes() {\n        return {\n            M: Music.scales.major,\n            m: Music.scales.minor,\n        };\n    }\n    /** Accidentals abbreviations. */\n    static get accidentals() {\n        return ['bb', 'b', 'n', '#', '##'];\n    }\n    /** Note values. */\n    static get noteValues() {\n        return {\n            c: { root_index: 0, int_val: 0 },\n            cn: { root_index: 0, int_val: 0 },\n            'c#': { root_index: 0, int_val: 1 },\n            'c##': { root_index: 0, int_val: 2 },\n            cb: { root_index: 0, int_val: 11 },\n            cbb: { root_index: 0, int_val: 10 },\n            d: { root_index: 1, int_val: 2 },\n            dn: { root_index: 1, int_val: 2 },\n            'd#': { root_index: 1, int_val: 3 },\n            'd##': { root_index: 1, int_val: 4 },\n            db: { root_index: 1, int_val: 1 },\n            dbb: { root_index: 1, int_val: 0 },\n            e: { root_index: 2, int_val: 4 },\n            en: { root_index: 2, int_val: 4 },\n            'e#': { root_index: 2, int_val: 5 },\n            'e##': { root_index: 2, int_val: 6 },\n            eb: { root_index: 2, int_val: 3 },\n            ebb: { root_index: 2, int_val: 2 },\n            f: { root_index: 3, int_val: 5 },\n            fn: { root_index: 3, int_val: 5 },\n            'f#': { root_index: 3, int_val: 6 },\n            'f##': { root_index: 3, int_val: 7 },\n            fb: { root_index: 3, int_val: 4 },\n            fbb: { root_index: 3, int_val: 3 },\n            g: { root_index: 4, int_val: 7 },\n            gn: { root_index: 4, int_val: 7 },\n            'g#': { root_index: 4, int_val: 8 },\n            'g##': { root_index: 4, int_val: 9 },\n            gb: { root_index: 4, int_val: 6 },\n            gbb: { root_index: 4, int_val: 5 },\n            a: { root_index: 5, int_val: 9 },\n            an: { root_index: 5, int_val: 9 },\n            'a#': { root_index: 5, int_val: 10 },\n            'a##': { root_index: 5, int_val: 11 },\n            ab: { root_index: 5, int_val: 8 },\n            abb: { root_index: 5, int_val: 7 },\n            b: { root_index: 6, int_val: 11 },\n            bn: { root_index: 6, int_val: 11 },\n            'b#': { root_index: 6, int_val: 0 },\n            'b##': { root_index: 6, int_val: 1 },\n            bb: { root_index: 6, int_val: 10 },\n            bbb: { root_index: 6, int_val: 9 },\n        };\n    }\n    isValidNoteValue(note) {\n        return note >= 0 && note < Music.canonical_notes.length;\n    }\n    isValidIntervalValue(interval) {\n        return interval >= 0 && interval < Music.diatonic_intervals.length;\n    }\n    /** Return root and accidental associated to a note. */\n    getNoteParts(noteString) {\n        if (!noteString || noteString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        if (noteString.length > 3) {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n        const note = noteString.toLowerCase();\n        const regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n        const match = regex.exec(note);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            return {\n                root,\n                accidental,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', 'Invalid note name: ' + noteString);\n        }\n    }\n    /** Return root, accidental and type associated to a key. */\n    getKeyParts(keyString) {\n        if (!keyString || keyString.length < 1) {\n            throw new RuntimeError('BadArguments', 'Invalid key: ' + keyString);\n        }\n        const key = keyString.toLowerCase();\n        // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n        const regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n        const match = regex.exec(key);\n        if (match !== null) {\n            const root = match[1];\n            const accidental = match[2];\n            let type = match[3];\n            // Unspecified type implies major\n            if (!type)\n                type = 'M';\n            return {\n                root,\n                accidental,\n                type,\n            };\n        }\n        else {\n            throw new RuntimeError('BadArguments', `Invalid key: ${keyString}`);\n        }\n    }\n    /** Note value associated to a note name. */\n    getNoteValue(noteString) {\n        const value = Music.noteValues[noteString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid note name: ${noteString}`);\n        }\n        return value.int_val;\n    }\n    /** Interval value associated to an interval name. */\n    getIntervalValue(intervalString) {\n        const value = Music.intervals[intervalString];\n        if (value === undefined) {\n            throw new RuntimeError('BadArguments', `Invalid interval name: ${intervalString}`);\n        }\n        return value;\n    }\n    /** Canonical note name associated to a value. */\n    getCanonicalNoteName(noteValue) {\n        if (!this.isValidNoteValue(noteValue)) {\n            throw new RuntimeError('BadArguments', `Invalid note value: ${noteValue}`);\n        }\n        return Music.canonical_notes[noteValue];\n    }\n    /** Interval name associated to a value. */\n    getCanonicalIntervalName(intervalValue) {\n        if (!this.isValidIntervalValue(intervalValue)) {\n            throw new RuntimeError('BadArguments', `Invalid interval value: ${intervalValue}`);\n        }\n        return Music.diatonic_intervals[intervalValue];\n    }\n    /**\n     * Given a note, interval, and interval direction, produce the relative note.\n     */\n    getRelativeNoteValue(noteValue, intervalValue, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        let sum = (noteValue + direction * intervalValue) % Music.NUM_TONES;\n        if (sum < 0)\n            sum += Music.NUM_TONES;\n        return sum;\n    }\n    /**\n     * Given a root and note value, produce the relative note name.\n     */\n    getRelativeNoteName(root, noteValue) {\n        const parts = this.getNoteParts(root);\n        const rootValue = this.getNoteValue(parts.root);\n        let interval = noteValue - rootValue;\n        if (Math.abs(interval) > Music.NUM_TONES - 3) {\n            let multiplier = 1;\n            if (interval > 0)\n                multiplier = -1;\n            // Possibly wrap around. (Add +1 for modulo operator)\n            const reverse_interval = ((noteValue + 1 + (rootValue + 1)) % Music.NUM_TONES) * multiplier;\n            if (Math.abs(reverse_interval) > 2) {\n                throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n            }\n            else {\n                interval = reverse_interval;\n            }\n        }\n        if (Math.abs(interval) > 2) {\n            throw new RuntimeError('BadArguments', `Notes not related: ${root}, ${noteValue})`);\n        }\n        let relativeNoteName = parts.root;\n        if (interval > 0) {\n            for (let i = 1; i <= interval; ++i) {\n                relativeNoteName += '#';\n            }\n        }\n        else if (interval < 0) {\n            for (let i = -1; i >= interval; --i) {\n                relativeNoteName += 'b';\n            }\n        }\n        return relativeNoteName;\n    }\n    /**\n     * Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones(key, intervals) {\n        const tones = [key];\n        let nextNote = key;\n        for (let i = 0; i < intervals.length; i++) {\n            nextNote = this.getRelativeNoteValue(nextNote, intervals[i]);\n            if (nextNote !== key)\n                tones.push(nextNote);\n        }\n        return tones;\n    }\n    /**\n     * Return the interval of a note, given a diatonic scale.\n     * e.g., given the scale C, and the note E, returns M3.\n     */\n    getIntervalBetween(note1, note2, direction = 1) {\n        if (direction !== 1 && direction !== -1) {\n            throw new RuntimeError('BadArguments', `Invalid direction: ${direction}`);\n        }\n        if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2)) {\n            throw new RuntimeError('BadArguments', `Invalid notes: ${note1}, ${note2}`);\n        }\n        let difference = direction === 1 ? note2 - note1 : note1 - note2;\n        if (difference < 0)\n            difference += Music.NUM_TONES;\n        return difference;\n    }\n    /**\n     * Create a scale map that represents the pitch state for a\n     * `keySignature`. For example, passing a `G` to `keySignature` would\n     * return a scale map with every note naturalized except for `F` which\n     * has an `F#` state.\n     */\n    createScaleMap(keySignature) {\n        const keySigParts = this.getKeyParts(keySignature);\n        if (!keySigParts.type)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: undefined');\n        const scaleName = Music.scaleTypes[keySigParts.type];\n        let keySigString = keySigParts.root;\n        if (keySigParts.accidental)\n            keySigString += keySigParts.accidental;\n        if (!scaleName)\n            throw new RuntimeError('BadArguments', 'Unsupported key type: ' + keySignature);\n        const scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n        const noteLocation = Music.root_indices[keySigParts.root];\n        const scaleMap = {};\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            let noteName = this.getRelativeNoteName(rootName, scale[i]);\n            if (noteName.length === 1) {\n                noteName += 'n';\n            }\n            scaleMap[rootName] = noteName;\n        }\n        return scaleMap;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Mohit Cheppudira\n// @author Greg Ristow (modifications)\nimport { Fraction } from './fraction';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Music } from './music';\nimport { Tables } from './tables';\nimport { Category, isAccidental, isGraceNote, isGraceNoteGroup, isStaveNote } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Accidental.DEBUG)\n        log('Vex.Flow.Accidental', args);\n}\n/**\n * An `Accidental` inherits from `Modifier`, and is formatted within a\n * `ModifierContext`. Accidentals are modifiers that can be attached to\n * notes. Support is included for both western and microtonal accidentals.\n *\n * See `tests/accidental_tests.ts` for usage examples.\n */\nexport class Accidental extends Modifier {\n    /** Accidentals category string. */\n    static get CATEGORY() {\n        return Category.Accidental;\n    }\n    /** Arrange accidentals inside a ModifierContext. */\n    static format(accidentals, state) {\n        // If there are no accidentals, no need to format their positions.\n        if (!accidentals || accidentals.length === 0)\n            return;\n        const musicFont = Tables.currentMusicFont();\n        const noteheadAccidentalPadding = musicFont.lookupMetric('accidental.noteheadAccidentalPadding');\n        const leftShift = state.left_shift + noteheadAccidentalPadding;\n        const accidentalSpacing = musicFont.lookupMetric('accidental.accidentalSpacing');\n        const additionalPadding = musicFont.lookupMetric('accidental.leftPadding'); // padding to the left of all accidentals\n        const accidentalLinePositionsAndSpaceNeeds = [];\n        let prevNote = undefined;\n        let extraXSpaceNeededForLeftDisplacedNotehead = 0;\n        // First determine the accidentals' Y positions from the note.keys\n        for (let i = 0; i < accidentals.length; ++i) {\n            const acc = accidentals[i];\n            const note = acc.getNote();\n            const stave = note.getStave();\n            const index = acc.checkIndex();\n            const props = note.getKeyProps()[index];\n            if (note !== prevNote) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    // If the current extra left-space needed isn't as big as this note's,\n                    // then we need to use this note's.\n                    extraXSpaceNeededForLeftDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx() - note.getXShift(), extraXSpaceNeededForLeftDisplacedNotehead);\n                }\n                prevNote = note;\n            }\n            if (stave) {\n                const lineSpace = stave.getSpacingBetweenLines();\n                const y = stave.getYForLine(props.line);\n                const accLine = Math.round((y / lineSpace) * 2) / 2;\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    y,\n                    line: accLine,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    acc,\n                    spacingBetweenStaveLines: lineSpace,\n                });\n            }\n            else {\n                accidentalLinePositionsAndSpaceNeeds.push({\n                    line: props.line,\n                    extraXSpaceNeeded: extraXSpaceNeededForLeftDisplacedNotehead,\n                    acc,\n                });\n            }\n        }\n        // Sort accidentals by line number.\n        accidentalLinePositionsAndSpaceNeeds.sort((a, b) => b.line - a.line);\n        const staveLineAccidentalLayoutMetrics = [];\n        // amount by which all accidentals must be shifted right or left for\n        // stem flipping, notehead shifting concerns.\n        let maxExtraXSpaceNeeded = 0;\n        // Create an array of unique line numbers (staveLineAccidentalLayoutMetrics)\n        // from accidentalLinePositionsAndSpaceNeeds\n        for (let i = 0; i < accidentalLinePositionsAndSpaceNeeds.length; i++) {\n            const accidentalLinePositionAndSpaceNeeds = accidentalLinePositionsAndSpaceNeeds[i];\n            const priorLineMetric = staveLineAccidentalLayoutMetrics[staveLineAccidentalLayoutMetrics.length - 1];\n            let currentLineMetric;\n            // if this is the first line, or a new line, add a staveLineAccidentalLayoutMetric\n            if (!priorLineMetric || (priorLineMetric === null || priorLineMetric === void 0 ? void 0 : priorLineMetric.line) !== accidentalLinePositionAndSpaceNeeds.line) {\n                currentLineMetric = {\n                    line: accidentalLinePositionAndSpaceNeeds.line,\n                    flatLine: true,\n                    dblSharpLine: true,\n                    numAcc: 0,\n                    width: 0,\n                    column: 0,\n                };\n                staveLineAccidentalLayoutMetrics.push(currentLineMetric);\n            }\n            else {\n                currentLineMetric = priorLineMetric;\n            }\n            // if this accidental is not a flat, the accidental needs 3.0 lines lower\n            // clearance instead of 2.5 lines for b or bb.\n            if (accidentalLinePositionAndSpaceNeeds.acc.type !== 'b' &&\n                accidentalLinePositionAndSpaceNeeds.acc.type !== 'bb') {\n                currentLineMetric.flatLine = false;\n            }\n            // if this accidental is not a double sharp, the accidental needs 3.0 lines above\n            if (accidentalLinePositionAndSpaceNeeds.acc.type !== '##') {\n                currentLineMetric.dblSharpLine = false;\n            }\n            // Track how many accidentals are on this line:\n            currentLineMetric.numAcc++;\n            // Track the total x_offset needed for this line which will be needed\n            // for formatting lines w/ multiple accidentals:\n            // width = accidental width + universal spacing between accidentals\n            currentLineMetric.width += accidentalLinePositionAndSpaceNeeds.acc.getWidth() + accidentalSpacing;\n            // if this extraXSpaceNeeded is the largest so far, use it as the starting point for\n            // all accidental columns.\n            maxExtraXSpaceNeeded = Math.max(accidentalLinePositionAndSpaceNeeds.extraXSpaceNeeded, maxExtraXSpaceNeeded);\n        }\n        // ### Place Accidentals in Columns\n        //\n        // Default to a classic triangular layout (middle accidental farthest left),\n        // but follow exceptions as outlined in G. Read's _Music Notation_ and\n        // Elaine Gould's _Behind Bars_.\n        //\n        // Additionally, this implements different vertical collision rules for\n        // flats (only need 2.5 lines clearance below) and double sharps (only\n        // need 2.5 lines of clearance above or below).\n        //\n        // Classic layouts and exception patterns are found in the 'tables.js'\n        // in 'Tables.accidentalColumnsTable'\n        //\n        // Beyond 6 vertical accidentals, default to the parallel ascending lines approach,\n        // using as few columns as possible for the verticle structure.\n        //\n        // TODO (?): Allow column to be specified for an accidental at run-time?\n        let totalColumns = 0;\n        // establish the boundaries for a group of notes with clashing accidentals:\n        for (let i = 0; i < staveLineAccidentalLayoutMetrics.length; i++) {\n            let noFurtherConflicts = false;\n            const groupStart = i;\n            let groupEnd = i;\n            while (groupEnd + 1 < staveLineAccidentalLayoutMetrics.length && !noFurtherConflicts) {\n                // if this note conflicts with the next:\n                if (this.checkCollision(staveLineAccidentalLayoutMetrics[groupEnd], staveLineAccidentalLayoutMetrics[groupEnd + 1])) {\n                    // include the next note in the group:\n                    groupEnd++;\n                }\n                else {\n                    noFurtherConflicts = true;\n                }\n            }\n            // Gets an a line from the `lineList`, relative to the current group\n            const getGroupLine = (index) => staveLineAccidentalLayoutMetrics[groupStart + index];\n            const getGroupLines = (indexes) => indexes.map(getGroupLine);\n            const lineDifference = (indexA, indexB) => {\n                const [a, b] = getGroupLines([indexA, indexB]).map((item) => item.line);\n                return a - b;\n            };\n            const notColliding = (...indexPairs) => indexPairs.map(getGroupLines).every(([line1, line2]) => !this.checkCollision(line1, line2));\n            // Set columns for the lines in this group:\n            const groupLength = groupEnd - groupStart + 1;\n            // Set the accidental column for each line of the group\n            let endCase = this.checkCollision(staveLineAccidentalLayoutMetrics[groupStart], staveLineAccidentalLayoutMetrics[groupEnd])\n                ? 'a'\n                : 'b';\n            switch (groupLength) {\n                case 3:\n                    if (endCase === 'a' && lineDifference(1, 2) === 0.5 && lineDifference(0, 1) !== 0.5) {\n                        endCase = 'second_on_bottom';\n                    }\n                    break;\n                case 4:\n                    if (notColliding([0, 2], [1, 3])) {\n                        endCase = 'spaced_out_tetrachord';\n                    }\n                    break;\n                case 5:\n                    if (endCase === 'b' && notColliding([1, 3])) {\n                        endCase = 'spaced_out_pentachord';\n                        if (notColliding([0, 2], [2, 4])) {\n                            endCase = 'very_spaced_out_pentachord';\n                        }\n                    }\n                    break;\n                case 6:\n                    if (notColliding([0, 3], [1, 4], [2, 5])) {\n                        endCase = 'spaced_out_hexachord';\n                    }\n                    if (notColliding([0, 2], [2, 4], [1, 3], [3, 5])) {\n                        endCase = 'very_spaced_out_hexachord';\n                    }\n                    break;\n                default:\n                    break;\n            }\n            let groupMember;\n            let column;\n            // If the group contains seven members or more, use ascending parallel lines\n            // of accidentals, using as few columns as possible while avoiding collisions.\n            if (groupLength >= 7) {\n                // First, determine how many columns to use:\n                let patternLength = 2;\n                let collisionDetected = true;\n                while (collisionDetected === true) {\n                    collisionDetected = false;\n                    for (let line = 0; line + patternLength < staveLineAccidentalLayoutMetrics.length; line++) {\n                        if (this.checkCollision(staveLineAccidentalLayoutMetrics[line], staveLineAccidentalLayoutMetrics[line + patternLength])) {\n                            collisionDetected = true;\n                            patternLength++;\n                            break;\n                        }\n                    }\n                }\n                // Then, assign a column to each line of accidentals\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = ((groupMember - i) % patternLength) + 1;\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            else {\n                // If the group contains fewer than seven members, use the layouts from\n                // the Tables.accidentalColumnsTable (See: tables.ts).\n                for (groupMember = i; groupMember <= groupEnd; groupMember++) {\n                    column = Tables.accidentalColumnsTable[groupLength][endCase][groupMember - i];\n                    staveLineAccidentalLayoutMetrics[groupMember].column = column;\n                    totalColumns = totalColumns > column ? totalColumns : column;\n                }\n            }\n            // Increment i to the last note that was set, so that if a lower set of notes\n            // does not conflict at all with this group, it can have its own classic shape.\n            i = groupEnd;\n        }\n        // ### Convert Columns to x_offsets\n        //\n        // This keeps columns aligned, even if they have different accidentals within them\n        // which sometimes results in a larger x_offset than is an accidental might need\n        // to preserve the symmetry of the accidental shape.\n        //\n        // Neither A.C. Vinci nor G. Read address this, and it typically only happens in\n        // music with complex chord clusters.\n        //\n        // TODO (?): Optionally allow closer compression of accidentals, instead of forcing\n        // parallel columns.\n        // track each column's max width, which will be used as initial shift of later columns:\n        const columnWidths = [];\n        const columnXOffsets = [];\n        for (let i = 0; i <= totalColumns; i++) {\n            columnWidths[i] = 0;\n            columnXOffsets[i] = 0;\n        }\n        columnWidths[0] = leftShift + maxExtraXSpaceNeeded;\n        columnXOffsets[0] = leftShift;\n        // Fill columnWidths with widest needed x-space;\n        // this is what keeps the columns parallel.\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            if (line.width > columnWidths[line.column])\n                columnWidths[line.column] = line.width;\n        });\n        for (let i = 1; i < columnWidths.length; i++) {\n            // this column's offset = this column's width + previous column's offset\n            columnXOffsets[i] = columnWidths[i] + columnXOffsets[i - 1];\n        }\n        const totalShift = columnXOffsets[columnXOffsets.length - 1];\n        // Set the xShift for each accidental according to column offsets:\n        let accCount = 0;\n        staveLineAccidentalLayoutMetrics.forEach((line) => {\n            let lineWidth = 0;\n            const lastAccOnLine = accCount + line.numAcc;\n            // handle all of the accidentals on a given line:\n            for (accCount; accCount < lastAccOnLine; accCount++) {\n                const xShift = columnXOffsets[line.column - 1] + lineWidth + maxExtraXSpaceNeeded;\n                accidentalLinePositionsAndSpaceNeeds[accCount].acc.setXShift(xShift);\n                // keep track of the width of accidentals we've added so far, so that when\n                // we loop, we add space for them.\n                lineWidth += accidentalLinePositionsAndSpaceNeeds[accCount].acc.getWidth() + accidentalSpacing;\n                L('Line, accCount, shift: ', line.line, accCount, xShift);\n            }\n        });\n        // update the overall layout with the full width of the accidental shapes:\n        state.left_shift = totalShift + additionalPadding;\n    }\n    /** Helper function to determine whether two lines of accidentals collide vertically */\n    static checkCollision(line1, line2) {\n        let clearance = line2.line - line1.line;\n        let clearanceRequired = 3;\n        // But less clearance is required for certain accidentals: b, bb and ##.\n        if (clearance > 0) {\n            // then line 2 is on top\n            clearanceRequired = line2.flatLine || line2.dblSharpLine ? 2.5 : 3.0;\n            if (line1.dblSharpLine)\n                clearance -= 0.5;\n        }\n        else {\n            // line 1 is on top\n            clearanceRequired = line1.flatLine || line1.dblSharpLine ? 2.5 : 3.0;\n            if (line2.dblSharpLine)\n                clearance -= 0.5;\n        }\n        const collision = Math.abs(clearance) < clearanceRequired;\n        L('Line_1, Line_2, Collision: ', line1.line, line2.line, collision);\n        return collision;\n    }\n    /**\n     * Use this method to automatically apply accidentals to a set of `voices`.\n     * The accidentals will be remembered between all the voices provided.\n     * Optionally, you can also provide an initial `keySignature`.\n     */\n    static applyAccidentals(voices, keySignature) {\n        const tickPositions = [];\n        const tickNoteMap = {};\n        // Sort the tickables in each voice by their tick position in the voice.\n        voices.forEach((voice) => {\n            const tickPosition = new Fraction(0, 1);\n            const tickable = voice.getTickables();\n            tickable.forEach((t) => {\n                if (t.shouldIgnoreTicks())\n                    return;\n                const notesAtPosition = tickNoteMap[tickPosition.value()];\n                if (!notesAtPosition) {\n                    tickPositions.push(tickPosition.value());\n                    tickNoteMap[tickPosition.value()] = [t];\n                }\n                else {\n                    notesAtPosition.push(t);\n                }\n                tickPosition.add(t.getTicks());\n            });\n        });\n        const music = new Music();\n        // Default key signature is C major.\n        if (!keySignature)\n            keySignature = 'C';\n        // Get the scale map, which represents the current state of each pitch.\n        const scaleMapKey = music.createScaleMap(keySignature);\n        const scaleMap = {};\n        tickPositions.forEach((tickPos) => {\n            const tickables = tickNoteMap[tickPos];\n            // Array to store all pitches that modified accidental states\n            // at this tick position\n            const modifiedPitches = [];\n            const processNote = (t) => {\n                // Only StaveNote implements .addModifier(), which is used below.\n                if (!isStaveNote(t) || t.isRest() || t.shouldIgnoreTicks()) {\n                    return;\n                }\n                // Go through each key and determine if an accidental should be applied.\n                const staveNote = t;\n                staveNote.keys.forEach((keyString, keyIndex) => {\n                    const key = music.getNoteParts(keyString.split('/')[0]);\n                    const octave = keyString.split('/')[1];\n                    // Force a natural for every key without an accidental\n                    const accidentalString = key.accidental || 'n';\n                    const pitch = key.root + accidentalString;\n                    // Determine if the current pitch has the same accidental\n                    // as the scale state\n                    if (!scaleMap[key.root + octave])\n                        scaleMap[key.root + octave] = scaleMapKey[key.root];\n                    const sameAccidental = scaleMap[key.root + octave] === pitch;\n                    // Determine if an identical pitch in the chord already\n                    // modified the accidental state\n                    const previouslyModified = modifiedPitches.indexOf(keyString) > -1;\n                    // Remove accidentals\n                    staveNote.getModifiers().forEach((modifier, index) => {\n                        if (isAccidental(modifier) && modifier.type == accidentalString && modifier.getIndex() == keyIndex) {\n                            staveNote.getModifiers().splice(index, 1);\n                        }\n                    });\n                    // Add the accidental to the StaveNote\n                    if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                        // Modify the scale map so that the root pitch has an\n                        // updated state\n                        scaleMap[key.root + octave] = pitch;\n                        // Create the accidental\n                        const accidental = new Accidental(accidentalString);\n                        // Attach the accidental to the StaveNote\n                        staveNote.addModifier(accidental, keyIndex);\n                        // Add the pitch to list of pitches that modified accidentals\n                        modifiedPitches.push(keyString);\n                    }\n                });\n                // process grace notes\n                staveNote.getModifiers().forEach((modifier) => {\n                    if (isGraceNoteGroup(modifier)) {\n                        modifier.getGraceNotes().forEach(processNote);\n                    }\n                });\n            };\n            tickables.forEach(processNote);\n        });\n    }\n    /**\n     * Create accidental.\n     * @param type value from `Vex.Flow.accidentalCodes.accidentals` table in `tables.ts`.\n     * For example: `#`, `##`, `b`, `n`, etc.\n     */\n    constructor(type) {\n        super();\n        L('New accidental: ', type);\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            // Font size for glyphs\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            // Padding between accidental and parentheses on each side\n            parenLeftPadding: 2,\n            parenRightPadding: 2,\n        };\n        this.accidental = Tables.accidentalCodes(this.type);\n        defined(this.accidental, 'ArgumentError', `Unknown accidental type: ${type}`);\n        // Cautionary accidentals have parentheses around them\n        this.cautionary = false;\n        this.reset();\n    }\n    reset() {\n        const fontScale = this.render_options.font_scale;\n        this.glyph = new Glyph(this.accidental.code, fontScale);\n        this.glyph.setOriginX(1.0);\n        if (this.cautionary) {\n            this.parenLeft = new Glyph(Tables.accidentalCodes('{').code, fontScale);\n            this.parenRight = new Glyph(Tables.accidentalCodes('}').code, fontScale);\n            this.parenLeft.setOriginX(1.0);\n            this.parenRight.setOriginX(1.0);\n        }\n    }\n    /** Get width in pixels. */\n    getWidth() {\n        if (this.cautionary) {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            const parenWidth = parenLeft.getMetrics().width +\n                parenRight.getMetrics().width +\n                this.render_options.parenLeftPadding +\n                this.render_options.parenRightPadding;\n            return this.glyph.getMetrics().width + parenWidth;\n        }\n        else {\n            return this.glyph.getMetrics().width;\n        }\n    }\n    /** Attach this accidental to `note`, which must be a `StaveNote`. */\n    setNote(note) {\n        defined(note, 'ArgumentError', `Bad note value: ${note}`);\n        this.note = note;\n        // Accidentals attached to grace notes are rendered smaller.\n        if (isGraceNote(note)) {\n            this.render_options.font_scale = 25;\n            this.reset();\n        }\n        return this;\n    }\n    /** If called, draws parenthesis around accidental. */\n    setAsCautionary() {\n        this.cautionary = true;\n        this.render_options.font_scale = 28;\n        this.reset();\n        return this;\n    }\n    /** Render accidental onto canvas. */\n    draw() {\n        const { type, position, index, cautionary, x_shift, y_shift, glyph, render_options: { parenLeftPadding, parenRightPadding }, } = this;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // Figure out the start `x` and `y` coordinates for note and index.\n        const start = note.getModifierStartXY(position, index);\n        let accX = start.x + x_shift;\n        const accY = start.y + y_shift;\n        L('Rendering: ', type, accX, accY);\n        if (!cautionary) {\n            glyph.render(ctx, accX, accY);\n        }\n        else {\n            const parenLeft = defined(this.parenLeft);\n            const parenRight = defined(this.parenRight);\n            // Render the accidental in parentheses.\n            parenRight.render(ctx, accX, accY);\n            accX -= parenRight.getMetrics().width;\n            accX -= parenRightPadding;\n            accX -= this.accidental.parenRightPaddingAdjustment;\n            glyph.render(ctx, accX, accY);\n            accX -= glyph.getMetrics().width;\n            accX -= parenLeftPadding;\n            parenLeft.render(ctx, accX, accY);\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`. */\nAccidental.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Stem.DEBUG)\n        log('Vex.Flow.Stem', args);\n}\nexport class Stem extends Element {\n    static get CATEGORY() {\n        return Category.Stem;\n    }\n    // Stem directions\n    static get UP() {\n        return 1;\n    }\n    static get DOWN() {\n        return -1;\n    }\n    // Theme\n    static get WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static get HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    constructor(options) {\n        super();\n        this.stem_up_y_offset = 0;\n        this.stem_down_y_offset = 0;\n        this.stem_up_y_base_offset = 0;\n        this.stem_down_y_base_offset = 0;\n        // Default notehead x bounds\n        this.x_begin = (options === null || options === void 0 ? void 0 : options.x_begin) || 0;\n        this.x_end = (options === null || options === void 0 ? void 0 : options.x_end) || 0;\n        // Y bounds for top/bottom most notehead\n        this.y_top = (options === null || options === void 0 ? void 0 : options.y_top) || 0;\n        this.y_bottom = (options === null || options === void 0 ? void 0 : options.y_bottom) || 0;\n        // Stem top extension\n        this.stem_extension = (options === null || options === void 0 ? void 0 : options.stem_extension) || 0;\n        // Direction of the stem\n        this.stem_direction = (options === null || options === void 0 ? void 0 : options.stem_direction) || 0;\n        // Flag to override all draw calls\n        this.hide = (options === null || options === void 0 ? void 0 : options.hide) || false;\n        this.isStemlet = (options === null || options === void 0 ? void 0 : options.isStemlet) || false;\n        this.stemletHeight = (options === null || options === void 0 ? void 0 : options.stemletHeight) || 0;\n        // Use to adjust the rendered height without affecting\n        // the results of `.getExtents()`\n        this.renderHeightAdjustment = 0;\n        this.setOptions(options);\n    }\n    setOptions(options) {\n        // Changing where the stem meets the head\n        this.stem_up_y_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_offset) || 0;\n        this.stem_down_y_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_offset) || 0;\n        this.stem_up_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_up_y_base_offset) || 0;\n        this.stem_down_y_base_offset = (options === null || options === void 0 ? void 0 : options.stem_down_y_base_offset) || 0;\n    }\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds(x_begin, x_end) {\n        this.x_begin = x_begin;\n        this.x_end = x_end;\n        return this;\n    }\n    // Set the direction of the stem in relation to the noteheads\n    setDirection(direction) {\n        this.stem_direction = direction;\n    }\n    // Set the extension for the stem, generally for flags or beams\n    setExtension(ext) {\n        this.stem_extension = ext;\n    }\n    getExtension() {\n        return this.stem_extension;\n    }\n    // The the y bounds for the top and bottom noteheads\n    setYBounds(y_top, y_bottom) {\n        this.y_top = y_top;\n        this.y_bottom = y_bottom;\n    }\n    // Gets the entire height for the stem\n    getHeight() {\n        const y_offset = this.stem_direction === Stem.UP ? this.stem_up_y_offset : this.stem_down_y_offset;\n        const unsigned_height = this.y_bottom - this.y_top + (Stem.HEIGHT - y_offset + this.stem_extension); // parentheses just for grouping.\n        return unsigned_height * this.stem_direction;\n    }\n    getBoundingBox() {\n        throw new RuntimeError('NotImplemented', 'getBoundingBox() not implemented.');\n    }\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents() {\n        const isStemUp = this.stem_direction === Stem.UP;\n        const ys = [this.y_top, this.y_bottom];\n        const stemHeight = Stem.HEIGHT + this.stem_extension;\n        const innerMostNoteheadY = (isStemUp ? Math.min : Math.max)(...ys);\n        const outerMostNoteheadY = (isStemUp ? Math.max : Math.min)(...ys);\n        const stemTipY = innerMostNoteheadY + stemHeight * -this.stem_direction;\n        return { topY: stemTipY, baseY: outerMostNoteheadY };\n    }\n    setVisibility(isVisible) {\n        this.hide = !isVisible;\n        return this;\n    }\n    setStemlet(isStemlet, stemletHeight) {\n        this.isStemlet = isStemlet;\n        this.stemletHeight = stemletHeight;\n        return this;\n    }\n    adjustHeightForFlag() {\n        this.renderHeightAdjustment = Tables.currentMusicFont().lookupMetric('stem.heightAdjustmentForFlag', -3);\n    }\n    adjustHeightForBeam() {\n        this.renderHeightAdjustment = -Stem.WIDTH / 2;\n    }\n    // Render the stem onto the canvas\n    draw() {\n        this.setRendered();\n        if (this.hide)\n            return;\n        const ctx = this.checkContext();\n        let stem_x;\n        let stem_y;\n        const stem_direction = this.stem_direction;\n        let y_base_offset = 0;\n        if (stem_direction === Stem.DOWN) {\n            // Down stems are rendered to the left of the head.\n            stem_x = this.x_begin;\n            stem_y = this.y_top + this.stem_down_y_offset;\n            y_base_offset = this.stem_down_y_base_offset;\n        }\n        else {\n            // Up stems are rendered to the right of the head.\n            stem_x = this.x_end;\n            stem_y = this.y_bottom - this.stem_up_y_offset;\n            y_base_offset = this.stem_up_y_base_offset;\n        }\n        const stemHeight = this.getHeight();\n        L('Rendering stem - ', 'Top Y: ', this.y_top, 'Bottom Y: ', this.y_bottom);\n        // The offset from the stem's base which is required fo satisfy the stemlet height\n        const stemletYOffset = this.isStemlet ? stemHeight - this.stemletHeight * this.stem_direction : 0;\n        // Draw the stem\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('stem', this.getAttribute('id'), { pointerBBox: true });\n        ctx.beginPath();\n        ctx.setLineWidth(Stem.WIDTH);\n        ctx.moveTo(stem_x, stem_y - stemletYOffset + y_base_offset);\n        ctx.lineTo(stem_x, stem_y - stemHeight - this.renderHeightAdjustment * stem_direction);\n        ctx.stroke();\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`. */\nStem.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextFormatter.DEBUG)\n        log('Vex.Flow.TextFormatter', args);\n}\n/**\n * Text widths are stored in a cache, so we don't have to recompute widths\n * for the same font + string combination.\n *\n * The cache is first keyed by the font information. The key is of the form:\n *   `${family}-${size}-${weight}-${style}`\n * The second level key is the specific text to be measured.\n *\n * The stored value is the measured width in `em` units.\n *   textWidth == textWidthCache[cacheKey][textToMeasure]\n */\nconst textWidthCache = {};\nconst textHeightCache = {};\n/**\n * Applications may register additional fonts via `TextFormatter.registerInfo(info)`.\n * The metrics for those fonts will be made available to the application.\n */\nconst registry = {};\nexport class TextFormatter {\n    /**\n     * Return all registered font families.\n     */\n    static getFontFamilies() {\n        const registeredFonts = [];\n        for (const fontFamily in registry) {\n            const formatterInfo = registry[fontFamily];\n            registeredFonts.push(Object.assign({}, formatterInfo));\n        }\n        return registeredFonts;\n    }\n    /**\n     * Call `TextFormatter.registerInfo(info)` to register font information before using this method.\n     *\n     * This method creates a formatter for the font that most closely matches the requested font.\n     * We compare font family, bold, and italic attributes.\n     * This method will return a fallback formatter if there are no matches.\n     */\n    static create(requestedFont = {}) {\n        L('create: ', requestedFont);\n        if (!requestedFont.family) {\n            requestedFont.family = Font.SANS_SERIF;\n        }\n        // TODO: One potential (small) optimization is to cache the TextFormatter object\n        // returned for each font info. We would probably want to clear the cache if\n        // the registry is ever updated.\n        const candidates = [];\n        // The incoming font family is a string of comma-separated font family names.\n        // (e.g., `PetalumaScript, Arial, sans-serif`).\n        const requestedFamilies = requestedFont.family.split(/\\s*,\\s*/);\n        for (const requestedFamily of requestedFamilies) {\n            for (const fontFamily in registry) {\n                // Support cases where the registry contains 'Roboto Slab Medium',\n                // but the requestedFont.family is 'Roboto Slab'.\n                if (fontFamily.startsWith(requestedFamily)) {\n                    candidates.push(registry[fontFamily]);\n                }\n            }\n            if (candidates.length > 0) {\n                break;\n            }\n        }\n        let formatter;\n        if (candidates.length === 0) {\n            // No match, so return a fallback text formatter.\n            formatter = new TextFormatter(Object.values(registry)[0]);\n        }\n        else if (candidates.length === 1) {\n            formatter = new TextFormatter(candidates[0]);\n        }\n        else {\n            const bold = Font.isBold(requestedFont.weight);\n            const italic = Font.isItalic(requestedFont.style);\n            const perfectMatch = candidates.find((f) => f.bold === bold && f.italic === italic);\n            if (perfectMatch) {\n                formatter = new TextFormatter(perfectMatch);\n            }\n            else {\n                const partialMatch = candidates.find((f) => f.italic === italic || f.bold === bold);\n                if (partialMatch) {\n                    formatter = new TextFormatter(partialMatch);\n                }\n                else {\n                    formatter = new TextFormatter(candidates[0]);\n                }\n            }\n        }\n        const fontSize = requestedFont.size;\n        if (typeof fontSize !== 'undefined') {\n            const fontSizeInPt = Font.convertSizeToPointValue(fontSize);\n            formatter.setFontSize(fontSizeInPt);\n        }\n        return formatter;\n    }\n    /**\n     * @param fontFamily used as a key to the font registry.\n     * @returns the same info object that was passed in via `TextFormatter.registerInfo(info)`\n     */\n    static getInfo(fontFamily) {\n        return registry[fontFamily];\n    }\n    /**\n     * Apps may register their own fonts and metrics, and those metrics\n     * will be available to the app for formatting.\n     *\n     * Metrics can be generated from a font file using fontgen_text.js in the tools/fonts directory.\n     * @param info\n     * @param overwrite\n     */\n    static registerInfo(info, overwrite = false) {\n        L('registerInfo: ', info, overwrite);\n        const fontFamily = info.family;\n        const currFontInfo = registry[fontFamily];\n        if (currFontInfo === undefined || overwrite) {\n            registry[fontFamily] = info;\n        }\n    }\n    /**\n     * Use `TextFormatter.create(...)` to build an instance from information previously\n     * registered via `TextFormatter.registerInfo(info)`.\n     */\n    constructor(formatterInfo) {\n        /** Font family. */\n        this.family = '';\n        /** Specified in `pt` units. */\n        this.size = 14;\n        /** Font metrics are extracted at 1000 upem (units per em). */\n        this.resolution = 1000;\n        /**\n         * For text formatting, we do not require glyph outlines, but instead rely on glyph\n         * bounding box metrics such as:\n         * ```\n         * {\n         *    x_min: 48,\n         *    x_max: 235,\n         *    y_min: -17,\n         *    y_max: 734,\n         *    ha: 751,\n         *    leftSideBearing: 48,\n         *    advanceWidth: 286,\n         *  }\n         * ```\n         */\n        this.glyphs = {};\n        this.serifs = false;\n        this.monospaced = false;\n        this.italic = false;\n        this.bold = false;\n        this.superscriptOffset = 0;\n        this.subscriptOffset = 0;\n        this.maxSizeGlyph = '@';\n        // This is an internal key used to index the `textWidthCache`.\n        this.cacheKey = '';\n        this.updateParams(formatterInfo);\n    }\n    get localHeightCache() {\n        var _a;\n        if (textHeightCache[this.cacheKey] === undefined) {\n            textHeightCache[this.cacheKey] = {};\n        }\n        return (_a = textHeightCache[this.cacheKey]) !== null && _a !== void 0 ? _a : {};\n    }\n    updateParams(params) {\n        if (params.family)\n            this.family = params.family;\n        if (params.resolution)\n            this.resolution = params.resolution;\n        if (params.glyphs)\n            this.glyphs = params.glyphs;\n        if (params.serifs)\n            this.serifs = params.serifs;\n        if (params.monospaced)\n            this.monospaced = params.monospaced;\n        if (params.italic)\n            this.italic = params.italic;\n        if (params.bold)\n            this.bold = params.bold;\n        if (params.maxSizeGlyph)\n            this.maxSizeGlyph = params.maxSizeGlyph;\n        if (params.superscriptOffset)\n            this.superscriptOffset = params.superscriptOffset;\n        if (params.subscriptOffset)\n            this.subscriptOffset = params.subscriptOffset;\n        this.updateCacheKey();\n    }\n    /** Create a hash with the current font data, so we can cache computed widths. */\n    updateCacheKey() {\n        const family = this.family.replace(/\\s+/g, '_');\n        const size = this.size;\n        const weight = this.bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        const style = this.italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        // Use the same key format as SVGContext.\n        this.cacheKey = `${family}%${size}%${weight}%${style}`;\n    }\n    /**\n     * The glyphs table is indexed by the character (e.g., 'C', '@').\n     * See: robotoslab_glyphs.ts & petalumascript_glyphs.ts.\n     */\n    getGlyphMetrics(character) {\n        if (this.glyphs[character]) {\n            return this.glyphs[character];\n        }\n        else {\n            return this.glyphs[this.maxSizeGlyph];\n        }\n    }\n    get maxHeight() {\n        const metrics = this.getGlyphMetrics(this.maxSizeGlyph);\n        return (metrics.ha / this.resolution) * this.fontSizeInPixels;\n    }\n    /**\n     * Retrieve the character's advanceWidth as a fraction of an `em` unit.\n     * For the space character ' ' as defined in the:\n     *   petalumascript_glyphs.ts: 250 advanceWidth in the 1000 unitsPerEm font returns 0.25.\n     *   robotoslab_glyphs.ts:     509 advanceWidth in the 2048 unitsPerEm font returns 0.2485.\n     */\n    getWidthForCharacterInEm(c) {\n        var _a;\n        const metrics = this.getGlyphMetrics(c);\n        if (!metrics) {\n            // An arbitrary number, close to the `em` width of the '#' and '5' characters in PetalumaScript.\n            return 0.65;\n        }\n        else {\n            const advanceWidth = (_a = metrics.advanceWidth) !== null && _a !== void 0 ? _a : 0;\n            return advanceWidth / this.resolution;\n        }\n    }\n    /**\n     * Retrieve the character's y bounds (ymin, ymax) and height.\n     */\n    getYForCharacterInPx(c) {\n        const metrics = this.getGlyphMetrics(c);\n        const rv = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        if (!metrics) {\n            return rv;\n        }\n        else {\n            if (typeof metrics.y_min === 'number') {\n                rv.yMin = (metrics.y_min / this.resolution) * this.fontSizeInPixels;\n            }\n            if (typeof metrics.y_max === 'number') {\n                rv.yMax = (metrics.y_max / this.resolution) * this.fontSizeInPixels;\n            }\n            rv.height = rv.yMax - rv.yMin;\n            return rv;\n        }\n    }\n    getYForStringInPx(str) {\n        const entry = this.localHeightCache;\n        const extent = { yMin: 0, yMax: this.maxHeight, height: this.maxHeight };\n        const cache = entry[str];\n        if (cache !== undefined) {\n            return cache;\n        }\n        for (let i = 0; i < str.length; ++i) {\n            const curY = this.getYForCharacterInPx(str[i]);\n            extent.yMin = Math.min(extent.yMin, curY.yMin);\n            extent.yMax = Math.max(extent.yMax, curY.yMax);\n            extent.height = extent.yMax - extent.yMin;\n        }\n        entry[str] = extent;\n        return extent;\n    }\n    /**\n     * Retrieve the total width of `text` in `em` units.\n     */\n    getWidthForTextInEm(text) {\n        const key = this.cacheKey;\n        // Get the cache for this specific font family, size, weight, style combination.\n        // The cache contains previously computed widths for different `text` strings.\n        let cachedWidths = textWidthCache[key];\n        if (cachedWidths === undefined) {\n            cachedWidths = {};\n            textWidthCache[key] = cachedWidths;\n        }\n        let width = cachedWidths[text];\n        if (width === undefined) {\n            width = 0;\n            for (let i = 0; i < text.length; ++i) {\n                width += this.getWidthForCharacterInEm(text[i]);\n            }\n            cachedWidths[text] = width;\n        }\n        return width;\n    }\n    /** The width of the text (in `em`) is scaled by the font size (in `px`). */\n    getWidthForTextInPx(text) {\n        return this.getWidthForTextInEm(text) * this.fontSizeInPixels;\n    }\n    /**\n     * @param size in pt.\n     */\n    setFontSize(size) {\n        this.size = size;\n        // The width cache key depends on the current font size.\n        this.updateCacheKey();\n        return this;\n    }\n    /** `this.size` is specified in points. Convert to pixels. */\n    get fontSizeInPixels() {\n        return this.size * Font.scaleToPxFrom.pt;\n    }\n    getResolution() {\n        return this.resolution;\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextFormatter.DEBUG` to `true`. */\nTextFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote, isTabNote } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Annotation.DEBUG)\n        log('Vex.Flow.Annotation', args);\n}\nexport var AnnotationHorizontalJustify;\n(function (AnnotationHorizontalJustify) {\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    AnnotationHorizontalJustify[AnnotationHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationHorizontalJustify || (AnnotationHorizontalJustify = {}));\nexport var AnnotationVerticalJustify;\n(function (AnnotationVerticalJustify) {\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"BOTTOM\"] = 3] = \"BOTTOM\";\n    AnnotationVerticalJustify[AnnotationVerticalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(AnnotationVerticalJustify || (AnnotationVerticalJustify = {}));\n/**\n * Annotations are modifiers that can be attached to\n * notes.\n *\n * See `tests/annotation_tests.ts` for usage examples.\n */\nexport class Annotation extends Modifier {\n    /** Annotations category string. */\n    static get CATEGORY() {\n        return Category.Annotation;\n    }\n    // Use the same padding for annotations as note head so the\n    // words don't run into each other.\n    static get minAnnotationPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange annotations within a `ModifierContext` */\n    static format(annotations, state) {\n        if (!annotations || annotations.length === 0)\n            return false;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (let i = 0; i < annotations.length; ++i) {\n            const annotation = annotations[i];\n            const textFormatter = TextFormatter.create(annotation.textFont);\n            // Text height is expressed in fractional stave spaces.\n            const textLines = (2 + textFormatter.getYForStringInPx(annotation.text).height) / Tables.STAVE_LINE_DISTANCE;\n            let verticalSpaceNeeded = textLines;\n            const note = annotation.checkAttachedNote();\n            const glyphWidth = note.getGlyphProps().getWidth();\n            // Get the text width from the font metrics.\n            const textWidth = textFormatter.getWidthForTextInPx(annotation.text);\n            if (annotation.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n                maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                leftWidth = Math.max(leftWidth, textWidth) + Annotation.minAnnotationPadding;\n            }\n            else if (annotation.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n                maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                rightWidth = Math.max(rightWidth, textWidth);\n            }\n            else {\n                leftWidth = Math.max(leftWidth, textWidth / 2) + Annotation.minAnnotationPadding;\n                rightWidth = Math.max(rightWidth, textWidth / 2);\n                maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n            }\n            const stave = note.getStave();\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            let lines = 5;\n            if (isTabNote(note)) {\n                if (note.render_options.draw_stem) {\n                    const stem = note.getStem();\n                    if (stem) {\n                        stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                    }\n                }\n                else {\n                    stemHeight = 0;\n                }\n            }\n            else if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem && note.getNoteType() === 'n') {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (annotation.verticalJustification === this.VerticalJustify.TOP) {\n                let noteLine = note.getLineNumber(true);\n                if (isTabNote(note)) {\n                    noteLine = lines - (note.leastString() - 0.5);\n                }\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                const curTop = noteLine + state.top_text_line + 0.5;\n                if (curTop < lines) {\n                    annotation.setTextLine(lines - noteLine);\n                    verticalSpaceNeeded += lines - noteLine;\n                    state.top_text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.top_text_line);\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n            }\n            else if (annotation.verticalJustification === this.VerticalJustify.BOTTOM) {\n                let noteLine = lines - note.getLineNumber();\n                if (isTabNote(note)) {\n                    noteLine = note.greatestString() - 1;\n                }\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                const curBottom = noteLine + state.text_line + 1;\n                if (curBottom < lines) {\n                    annotation.setTextLine(lines - curBottom);\n                    verticalSpaceNeeded += lines - curBottom;\n                    state.text_line = verticalSpaceNeeded;\n                }\n                else {\n                    annotation.setTextLine(state.text_line);\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            else {\n                annotation.setTextLine(state.text_line);\n            }\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    /**\n     * Annotations inherit from `Modifier` and is positioned correctly when\n     * in a `ModifierContext`.\n     * Create a new `Annotation` with the string `text`.\n     */\n    constructor(text) {\n        super();\n        this.text = text;\n        this.horizontalJustification = AnnotationHorizontalJustify.CENTER;\n        // warning: the default in the constructor is TOP, but in the factory the default is BOTTOM.\n        // this is to support legacy application that may expect this.\n        this.verticalJustification = AnnotationVerticalJustify.TOP;\n        this.resetFont();\n        // The default width is calculated from the text.\n        this.setWidth(Tables.textWidth(text));\n    }\n    /**\n     * Set vertical position of text (above or below stave).\n     * @param just value in `AnnotationVerticalJustify`.\n     */\n    setVerticalJustification(just) {\n        this.verticalJustification = typeof just === 'string' ? Annotation.VerticalJustifyString[just] : just;\n        return this;\n    }\n    /**\n     * Get horizontal justification.\n     */\n    getJustification() {\n        return this.horizontalJustification;\n    }\n    /**\n     * Set horizontal justification.\n     * @param justification value in `Annotation.Justify`.\n     */\n    setJustification(just) {\n        this.horizontalJustification = typeof just === 'string' ? Annotation.HorizontalJustifyString[just] : just;\n        return this;\n    }\n    /** Render text beside the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        const textFormatter = TextFormatter.create(this.textFont);\n        const start = note.getModifierStartXY(ModifierPosition.ABOVE, this.index);\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        // Apply style might not save context, if this.style is undefined, so we\n        // still need to save context state just before this, since we will be\n        // changing ctx parameters below.\n        this.applyStyle();\n        ctx.openGroup('annotation', this.getAttribute('id'));\n        ctx.setFont(this.textFont);\n        const text_width = textFormatter.getWidthForTextInPx(this.text);\n        const text_height = textFormatter.getYForStringInPx(this.text).height;\n        let x;\n        let y;\n        if (this.horizontalJustification === AnnotationHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.RIGHT) {\n            x = start.x - text_width;\n        }\n        else if (this.horizontalJustification === AnnotationHorizontalJustify.CENTER) {\n            x = start.x - text_width / 2;\n        } /* CENTER_STEM */\n        else {\n            x = note.getStemX() - text_width / 2;\n        }\n        let stem_ext = {};\n        let spacing = 0;\n        const has_stem = note.hasStem();\n        const stave = note.checkStave();\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        if (has_stem) {\n            stem_ext = note.checkStem().getExtents();\n            spacing = stave.getSpacingBetweenLines();\n        }\n        if (this.verticalJustification === AnnotationVerticalJustify.BOTTOM) {\n            // Use the largest (lowest) Y value\n            const ys = note.getYs();\n            y = ys.reduce((a, b) => (a > b ? a : b));\n            y += (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE + text_height;\n            if (has_stem && stemDirection === Stem.DOWN) {\n                y = Math.max(y, stem_ext.topY + text_height + spacing * this.text_line);\n            }\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.CENTER) {\n            const yt = note.getYForTopText(this.text_line) - 1;\n            const yb = stave.getYForBottomText(this.text_line);\n            y = yt + (yb - yt) / 2 + text_height / 2;\n        }\n        else if (this.verticalJustification === AnnotationVerticalJustify.TOP) {\n            const topY = Math.min(...note.getYs());\n            y = topY - (this.text_line + 1) * Tables.STAVE_LINE_DISTANCE;\n            if (has_stem && stemDirection === Stem.UP) {\n                // If the stem is above the stave already, go with default line width vs. actual\n                // since the lines between don't really matter.\n                spacing = stem_ext.topY < stave.getTopLineTopY() ? Tables.STAVE_LINE_DISTANCE : spacing;\n                y = Math.min(y, stem_ext.topY - spacing * (this.text_line + 1));\n            }\n        } /* CENTER_STEM */\n        else {\n            const extents = note.getStemExtents();\n            y = extents.topY + (extents.baseY - extents.topY) / 2 + text_height / 2;\n        }\n        L('Rendering annotation: ', this.text, x, y);\n        ctx.fillText(this.text, x, y);\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`. */\nAnnotation.DEBUG = false;\nAnnotation.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n/** Text annotations can be positioned and justified relative to the note. */\nAnnotation.HorizontalJustify = AnnotationHorizontalJustify;\nAnnotation.HorizontalJustifyString = {\n    left: AnnotationHorizontalJustify.LEFT,\n    right: AnnotationHorizontalJustify.RIGHT,\n    center: AnnotationHorizontalJustify.CENTER,\n    centerStem: AnnotationHorizontalJustify.CENTER_STEM,\n};\nAnnotation.VerticalJustify = AnnotationVerticalJustify;\nAnnotation.VerticalJustifyString = {\n    above: AnnotationVerticalJustify.TOP,\n    top: AnnotationVerticalJustify.TOP,\n    below: AnnotationVerticalJustify.BOTTOM,\n    bottom: AnnotationVerticalJustify.BOTTOM,\n    center: AnnotationVerticalJustify.CENTER,\n    centerStem: AnnotationVerticalJustify.CENTER_STEM,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote, isStaveNote, isStemmableNote, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Articulation.DEBUG)\n        log('Vex.Flow.Articulation', args);\n}\nconst { ABOVE, BELOW } = Modifier.Position;\nfunction roundToNearestHalf(mathFn, value) {\n    return mathFn(value / 0.5) * 0.5;\n}\n// This includes both staff and ledger lines\nfunction isWithinLines(line, position) {\n    return position === ABOVE ? line <= 5 : line >= 1;\n}\nfunction getRoundingFunction(line, position) {\n    if (isWithinLines(line, position)) {\n        if (position === ABOVE) {\n            return Math.ceil;\n        }\n        else {\n            return Math.floor;\n        }\n    }\n    else {\n        return Math.round;\n    }\n}\nfunction snapLineToStaff(canSitBetweenLines, line, position, offsetDirection) {\n    // Initially, snap to nearest staff line or space\n    const snappedLine = roundToNearestHalf(getRoundingFunction(line, position), line);\n    const canSnapToStaffSpace = canSitBetweenLines && isWithinLines(snappedLine, position);\n    const onStaffLine = snappedLine % 1 === 0;\n    if (canSnapToStaffSpace && onStaffLine) {\n        const HALF_STAFF_SPACE = 0.5;\n        return snappedLine + HALF_STAFF_SPACE * -offsetDirection;\n    }\n    else {\n        return snappedLine;\n    }\n}\n// Helper function for checking if a Note object is either a StaveNote or a GraceNote.\nconst isStaveOrGraceNote = (note) => isStaveNote(note) || isGraceNote(note);\nfunction getTopY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return stemBaseY;\n            }\n        }\n        else {\n            return Math.min(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemTipY;\n            }\n            else {\n                return note.checkStave().getYForTopText(textLine);\n            }\n        }\n        else {\n            return note.checkStave().getYForTopText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\nfunction getBottomY(note, textLine) {\n    const stemDirection = note.getStemDirection();\n    const { topY: stemTipY, baseY: stemBaseY } = note.getStemExtents();\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return stemBaseY;\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return Math.max(...note.getYs());\n        }\n    }\n    else if (isTabNote(note)) {\n        if (note.hasStem()) {\n            if (stemDirection === Stem.UP) {\n                return note.checkStave().getYForBottomText(textLine);\n            }\n            else {\n                return stemTipY;\n            }\n        }\n        else {\n            return note.checkStave().getYForBottomText(textLine);\n        }\n    }\n    else {\n        throw new RuntimeError('UnknownCategory', 'Only can get the top and bottom ys of stavenotes and tabnotes');\n    }\n}\n/**\n * Get the initial offset of the articulation from the y value of the starting position.\n * This is required because the top/bottom text positions already have spacing applied to\n * provide a \"visually pleasant\" default position. However the y values provided from\n * the stavenote's top/bottom do *not* have any pre-applied spacing. This function\n * normalizes this asymmetry.\n * @param note\n * @param position\n * @returns\n */\nfunction getInitialOffset(note, position) {\n    const isOnStemTip = (position === ABOVE && note.getStemDirection() === Stem.UP) ||\n        (position === BELOW && note.getStemDirection() === Stem.DOWN);\n    if (isStaveOrGraceNote(note)) {\n        if (note.hasStem() && isOnStemTip) {\n            return 0.5;\n        }\n        else {\n            // this amount is larger than the stem-tip offset because we start from\n            // the center of the notehead\n            return 1;\n        }\n    }\n    else {\n        if (note.hasStem() && isOnStemTip) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\n/**\n * Articulations and Accents are modifiers that can be\n * attached to notes. The complete list of articulations is available in\n * `tables.ts` under `Vex.Flow.articulationCodes`.\n *\n * See `tests/articulation_tests.ts` for usage examples.\n */\nexport class Articulation extends Modifier {\n    /** Articulations category string. */\n    static get CATEGORY() {\n        return Category.Articulation;\n    }\n    /**\n     * FIXME:\n     * Most of the complex formatting logic (ie: snapping to space) is\n     * actually done in .render(). But that logic belongs in this method.\n     *\n     * Unfortunately, this isn't possible because, by this point, stem lengths\n     * have not yet been finalized. Finalized stem lengths are required to determine the\n     * initial position of any stem-side articulation.\n     *\n     * This indicates that all objects should have their stave set before being\n     * formatted. It can't be an optional if you want accurate vertical positioning.\n     * Consistently positioned articulations that play nice with other modifiers\n     * won't be possible until we stop relying on render-time formatting.\n     *\n     * Ideally, when this function has completed, the vertical articulation positions\n     * should be ready to render without further adjustment. But the current state\n     * is far from this ideal.\n     */\n    static format(articulations, state) {\n        if (!articulations || articulations.length === 0)\n            return false;\n        const margin = 0.5;\n        let maxGlyphWidth = 0;\n        const getIncrement = (articulation, line, position) => roundToNearestHalf(getRoundingFunction(line, position), defined(articulation.glyph.getMetrics().height) / 10 + margin);\n        articulations.forEach((articulation) => {\n            const note = articulation.checkAttachedNote();\n            maxGlyphWidth = Math.max(note.getGlyphProps().getWidth(), maxGlyphWidth);\n            let lines = 5;\n            const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n            let stemHeight = 0;\n            // Decide if we need to consider beam direction in placement.\n            if (isStemmableNote(note)) {\n                const stem = note.getStem();\n                if (stem) {\n                    stemHeight = Math.abs(stem.getHeight()) / Tables.STAVE_LINE_DISTANCE;\n                }\n            }\n            const stave = note.getStave();\n            if (stave) {\n                lines = stave.getNumLines();\n            }\n            if (articulation.getPosition() === ABOVE) {\n                let noteLine = note.getLineNumber(true);\n                if (stemDirection === Stem.UP) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.top_text_line, ABOVE);\n                const curTop = noteLine + state.top_text_line + 0.5;\n                // If articulation must be above stave, add lines between note and stave top\n                if (!articulation.articulation.between_lines && curTop < lines) {\n                    increment += lines - curTop;\n                }\n                articulation.setTextLine(state.top_text_line);\n                state.top_text_line += increment;\n            }\n            else if (articulation.getPosition() === BELOW) {\n                let noteLine = Math.max(lines - note.getLineNumber(), 0);\n                if (stemDirection === Stem.DOWN) {\n                    noteLine += stemHeight;\n                }\n                let increment = getIncrement(articulation, state.text_line, BELOW);\n                const curBottom = noteLine + state.text_line + 0.5;\n                // if articulation must be below stave, add lines from note to stave bottom\n                if (!articulation.articulation.between_lines && curBottom < lines) {\n                    increment += lines - curBottom;\n                }\n                articulation.setTextLine(state.text_line);\n                state.text_line += increment;\n            }\n        });\n        const width = articulations\n            .map((articulation) => articulation.getWidth())\n            .reduce((maxWidth, articWidth) => Math.max(articWidth, maxWidth));\n        const overlap = Math.min(Math.max(width - maxGlyphWidth, 0), Math.max(width - (state.left_shift + state.right_shift), 0));\n        state.left_shift += overlap / 2;\n        state.right_shift += overlap / 2;\n        return true;\n    }\n    static easyScoreHook({ articulations }, note, builder) {\n        if (!articulations)\n            return;\n        const articNameToCode = {\n            staccato: 'a.',\n            tenuto: 'a-',\n            accent: 'a>',\n        };\n        articulations\n            .split(',')\n            .map((articString) => articString.trim().split('.'))\n            .map(([name, position]) => {\n            const artic = { type: articNameToCode[name] };\n            if (position)\n                artic.position = Modifier.PositionString[position];\n            return builder.getFactory().Articulation(artic);\n        })\n            .map((artic) => note.addModifier(artic, 0));\n    }\n    /**\n     * Create a new articulation.\n     * @param type entry in `Vex.Flow.articulationCodes` in `tables.ts` or Glyph code.\n     *\n     * Notes (by default):\n     * - Glyph codes ending with 'Above' will be positioned ABOVE\n     * - Glyph codes ending with 'Below' will be positioned BELOW\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.position = ABOVE;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.reset();\n    }\n    reset() {\n        this.articulation = Tables.articulationCodes(this.type);\n        // Use type as glyph code, if not defined as articulation code\n        if (!this.articulation) {\n            this.articulation = { code: this.type, between_lines: false };\n            if (this.type.endsWith('Above'))\n                this.position = ABOVE;\n            if (this.type.endsWith('Below'))\n                this.position = BELOW;\n        }\n        const code = (this.position === ABOVE ? this.articulation.aboveCode : this.articulation.belowCode) || this.articulation.code;\n        this.glyph = new Glyph(code !== null && code !== void 0 ? code : '', this.render_options.font_scale);\n        defined(this.glyph, 'ArgumentError', `Articulation not found: ${this.type}`);\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /** Set if articulation should be rendered between lines. */\n    setBetweenLines(betweenLines = true) {\n        this.articulation.between_lines = betweenLines;\n        return this;\n    }\n    /** Render articulation in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const index = this.checkIndex();\n        const { position, glyph, text_line: textLine } = this;\n        const canSitBetweenLines = this.articulation.between_lines;\n        const stave = note.checkStave();\n        const staffSpace = stave.getSpacingBetweenLines();\n        const isTab = isTabNote(note);\n        // Articulations are centered over/under the note head.\n        const { x } = note.getModifierStartXY(position, index);\n        const shouldSitOutsideStaff = !canSitBetweenLines || isTab;\n        const initialOffset = getInitialOffset(note, position);\n        const padding = Tables.currentMusicFont().lookupMetric(`articulation.${glyph.getCode()}.padding`, 0);\n        let y = {\n            [ABOVE]: () => {\n                glyph.setOrigin(0.5, 1);\n                const y = getTopY(note, textLine) - (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.min(stave.getYForTopText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n            [BELOW]: () => {\n                glyph.setOrigin(0.5, 0);\n                const y = getBottomY(note, textLine) + (textLine + initialOffset) * staffSpace;\n                return shouldSitOutsideStaff ? Math.max(stave.getYForBottomText(Articulation.INITIAL_OFFSET), y) : y;\n            },\n        }[position]();\n        if (!isTab) {\n            const offsetDirection = position === ABOVE ? -1 : +1;\n            const noteLine = note.getKeyProps()[index].line;\n            const distanceFromNote = (note.getYs()[index] - y) / staffSpace;\n            const articLine = distanceFromNote + Number(noteLine);\n            const snappedLine = snapLineToStaff(canSitBetweenLines, articLine, position, offsetDirection);\n            if (isWithinLines(snappedLine, position))\n                glyph.setOrigin(0.5, 0.5);\n            y += Math.abs(snappedLine - articLine) * staffSpace * offsetDirection + padding * offsetDirection;\n        }\n        L(`Rendering articulation at (x: ${x}, y: ${y})`);\n        glyph.render(ctx, x, y);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`. */\nArticulation.DEBUG = false;\nArticulation.INITIAL_OFFSET = -0.5;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2021.\n// MIT License\nimport { Category } from './typeguard';\nexport class RenderContext {\n    static get CATEGORY() {\n        return Category.RenderContext;\n    }\n    set font(f) {\n        this.setFont(f);\n    }\n    get font() {\n        return this.getFont();\n    }\n    /**\n     * This is kept for backwards compatibility with 3.0.9.\n     * @deprecated use `setFont(...)` instead since it now supports CSS font shorthand.\n     */\n    setRawFont(f) {\n        this.setFont(f);\n        return this;\n    }\n}\n/**\n * Draw a tiny dot marker on the specified context. A great debugging aid.\n * @param ctx context\n * @param x dot x coordinate\n * @param y dot y coordinate\n * @param color\n */\nexport function drawDot(ctx, x, y, color = '#F55') {\n    ctx.save();\n    ctx.setFillStyle(color);\n    // draw a circle\n    ctx.beginPath();\n    ctx.arc(x, y, 3, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n    ctx.restore();\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Tickable represents a element that sit on a score and\n * has a duration, i.e., Tickables occupy space in the musical rendering dimension.\n */\nexport class Tickable extends Element {\n    static get CATEGORY() {\n        return Category.Tickable;\n    }\n    constructor() {\n        super();\n        this._preFormatted = false;\n        this._postFormatted = false;\n        // These properties represent the duration of\n        // this tickable element.\n        this.ticks = new Fraction(0, 1); // Fractional value of ticks\n        this.intrinsicTicks = 0; // Floating point value of ticks\n        this.tickMultiplier = new Fraction(1, 1);\n        // Formatter metrics\n        this.width = 0;\n        this.x_shift = 0; // Shift from tick context\n        this.modifiers = [];\n        this.tupletStack = [];\n        this.align_center = false;\n        this.center_x_shift = 0; // Shift from tick context if center aligned\n        // This flag tells the formatter to ignore this tickable during\n        // formatting and justification. It is set by tickables such as BarNote.\n        this.ignore_ticks = false;\n        // This is a space for an external formatting class or function to maintain\n        // metrics.\n        this.formatterMetrics = {\n            // The freedom of a tickable is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n            // The simplified rational duration of this tick as a string. It can be\n            // used as an index to a map or hashtable.\n            duration: '',\n            // The number of formatting iterations undergone.\n            iterations: 0,\n            // The space in pixels allocated by this formatter, along with the mean space\n            // for tickables of this duration, and the deviation from the mean.\n            space: {\n                used: 0,\n                mean: 0,\n                deviation: 0,\n            },\n        };\n    }\n    /** Reset the Tickable, this function will be overloaded. */\n    reset() {\n        return this;\n    }\n    /** Return the ticks. */\n    getTicks() {\n        return this.ticks;\n    }\n    /** Check if it ignores the ticks. */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Ignore the ticks. */\n    setIgnoreTicks(flag) {\n        this.ignore_ticks = flag;\n        return this;\n    }\n    /** Set width of note. Used by the formatter for positioning. */\n    setWidth(width) {\n        this.width = width;\n    }\n    /** Get width of note. Used by the formatter for positioning. */\n    getWidth() {\n        if (!this._preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetWidth on an unformatted note.\");\n        }\n        return this.width + (this.modifierContext ? this.modifierContext.getWidth() : 0);\n    }\n    /** Displace note by `x` pixels. Used by the formatter. */\n    setXShift(x) {\n        this.x_shift = x;\n        return this;\n    }\n    /** Get the `x` displaced pixels of the note. */\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Get `x` position of this tick context. */\n    getX() {\n        const tickContext = this.checkTickContext(`Can't getX() without a TickContext.`);\n        return tickContext.getX() + this.x_shift;\n    }\n    /** Return the formatterMetrics. */\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n    /** Return the center `x` shift. */\n    getCenterXShift() {\n        if (this.isCenterAligned()) {\n            return this.center_x_shift;\n        }\n        return 0;\n    }\n    /** Set the center `x` shift. */\n    setCenterXShift(centerXShift) {\n        this.center_x_shift = centerXShift;\n        return this;\n    }\n    // Check if tickable is center aligned. */\n    isCenterAligned() {\n        return this.align_center;\n    }\n    // Set/unset center alignment. */\n    setCenterAlignment(align_center) {\n        this.align_center = align_center;\n        return this;\n    }\n    /**\n     * Return the associated voice. Every tickable must be associated with a voice.\n     * This allows formatters and preFormatter to associate them with the right modifierContexts.\n     */\n    getVoice() {\n        return defined(this.voice, 'NoVoice', 'Tickable has no voice.');\n    }\n    /** Set the associated voice. */\n    setVoice(voice) {\n        this.voice = voice;\n    }\n    /** Get the tuplet. */\n    getTuplet() {\n        return this.tuplet;\n    }\n    /** Return a list of Tuplets. */\n    getTupletStack() {\n        return this.tupletStack;\n    }\n    /**\n     * Reset the specific Tuplet (if this is not provided, all tuplets are reset).\n     * Remove any prior tuplets from the tick calculation and\n     * reset the intrinsic tick value.\n     */\n    resetTuplet(tuplet) {\n        let noteCount;\n        let notesOccupied;\n        if (tuplet) {\n            const i = this.tupletStack.indexOf(tuplet);\n            if (i !== -1) {\n                this.tupletStack.splice(i, 1);\n                noteCount = tuplet.getNoteCount();\n                notesOccupied = tuplet.getNotesOccupied();\n                // Revert old multiplier by inverting numerator & denom.:\n                this.applyTickMultiplier(noteCount, notesOccupied);\n            }\n            return this;\n        }\n        while (this.tupletStack.length) {\n            tuplet = this.tupletStack.pop();\n            noteCount = tuplet.getNoteCount();\n            notesOccupied = tuplet.getNotesOccupied();\n            // Revert old multiplier by inverting numerator & denom.:\n            this.applyTickMultiplier(noteCount, notesOccupied);\n        }\n        return this;\n    }\n    /** Attach to new tuplet. */\n    setTuplet(tuplet) {\n        if (tuplet) {\n            this.tupletStack.push(tuplet);\n            const noteCount = tuplet.getNoteCount();\n            const notesOccupied = tuplet.getNotesOccupied();\n            this.applyTickMultiplier(notesOccupied, noteCount);\n        }\n        this.tuplet = tuplet;\n        return this;\n    }\n    /**\n     * Add self to the provided ModifierContext `mc`.\n     * If this tickable has modifiers, set modifierContext.\n     * @returns this\n     */\n    addToModifierContext(mc) {\n        this.modifierContext = mc;\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            this.modifierContext.addMember(this.modifiers[i]);\n        }\n        this.modifierContext.addMember(this);\n        this._preFormatted = false;\n        return this;\n    }\n    /**\n     * Optional, if tickable has modifiers, associate a Modifier.\n     * @param mod the modifier\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    addModifier(modifier, index = 0) {\n        this.modifiers.push(modifier);\n        this._preFormatted = false;\n        return this;\n    }\n    /** Get the list of associated modifiers. */\n    getModifiers() {\n        return this.modifiers;\n    }\n    /** Set the Tick Context. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this._preFormatted = false;\n    }\n    checkTickContext(message = 'Tickable has no tick context.') {\n        return defined(this.tickContext, 'NoTickContext', message);\n    }\n    /** Preformat the Tickable. */\n    preFormat() {\n        if (this._preFormatted)\n            return;\n        this.width = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            this.width += this.modifierContext.getWidth();\n        }\n    }\n    /** Set preformatted status. */\n    set preFormatted(value) {\n        this._preFormatted = value;\n    }\n    get preFormatted() {\n        return this._preFormatted;\n    }\n    /** Postformat the Tickable. */\n    postFormat() {\n        if (this._postFormatted)\n            return this;\n        this._postFormatted = true;\n        return this;\n    }\n    /** Set postformatted status. */\n    set postFormatted(value) {\n        this._postFormatted = value;\n    }\n    get postFormatted() {\n        return this._postFormatted;\n    }\n    /** Return the intrinsic ticks. */\n    getIntrinsicTicks() {\n        return this.intrinsicTicks;\n    }\n    /** Set the intrinsic ticks. */\n    setIntrinsicTicks(intrinsicTicks) {\n        this.intrinsicTicks = intrinsicTicks;\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Get the tick multiplier. */\n    getTickMultiplier() {\n        return this.tickMultiplier;\n    }\n    /** Apply a tick multiplier. */\n    applyTickMultiplier(numerator, denominator) {\n        this.tickMultiplier.multiply(numerator, denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    }\n    /** Set the duration. */\n    setDuration(duration) {\n        const ticks = duration.numerator * (Tables.RESOLUTION / duration.denominator);\n        this.ticks = this.tickMultiplier.clone().multiply(ticks);\n        this.intrinsicTicks = this.ticks.value();\n    }\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        return tickContext.getX();\n    }\n    /** Attach this note to a modifier context. */\n    setModifierContext(mc) {\n        this.modifierContext = mc;\n        return this;\n    }\n    /** Get `ModifierContext`. */\n    getModifierContext() {\n        return this.modifierContext;\n    }\n    /** Check and get `ModifierContext`. */\n    checkModifierContext() {\n        return defined(this.modifierContext, 'NoModifierContext', 'No modifier context attached to this tickable.');\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { drawDot } from './rendercontext';\nimport { Tables } from './tables';\nimport { Tickable } from './tickable';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\n/**\n * Note implements an abstract interface for notes and chords that\n * are rendered on a stave. Notes have some common properties: All of them\n * have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n *\n * Some notes have stems, heads, dots, etc. Most notational elements that\n * surround a note are called *modifiers*, and every note has an associated\n * array of them. All notes also have a rendering context and belong to a stave.\n */\nexport class Note extends Tickable {\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n    // STATIC MEMBERS\n    static get CATEGORY() {\n        return Category.Note;\n    }\n    /** Debug helper. Displays various note metrics for the given note. */\n    static plotMetrics(ctx, note, yPos) {\n        const metrics = note.getMetrics();\n        const xStart = note.getAbsoluteX() - metrics.modLeftPx - metrics.leftDisplacedHeadPx;\n        const xPre1 = note.getAbsoluteX() - metrics.leftDisplacedHeadPx;\n        const xAbs = note.getAbsoluteX();\n        const xPost1 = note.getAbsoluteX() + metrics.notePx;\n        const xPost2 = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx;\n        const xEnd = note.getAbsoluteX() + metrics.notePx + metrics.rightDisplacedHeadPx + metrics.modRightPx;\n        const xFreedomRight = xEnd + (note.getFormatterMetrics().freedom.right || 0);\n        const xWidth = xEnd - xStart;\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        ctx.fillText(Math.round(xWidth) + 'px', xStart + note.getXShift(), yPos);\n        const y = yPos + 7;\n        function stroke(x1, x2, color, yy = y) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(3);\n            ctx.moveTo(x1 + note.getXShift(), yy);\n            ctx.lineTo(x2 + note.getXShift(), yy);\n            ctx.stroke();\n        }\n        stroke(xStart, xPre1, 'red');\n        stroke(xPre1, xAbs, '#999');\n        stroke(xAbs, xPost1, 'green');\n        stroke(xPost1, xPost2, '#999');\n        stroke(xPost2, xEnd, 'red');\n        stroke(xEnd, xFreedomRight, '#DD0');\n        stroke(xStart - note.getXShift(), xStart, '#BBB'); // Shift\n        drawDot(ctx, xAbs + note.getXShift(), y, 'blue');\n        const formatterMetrics = note.getFormatterMetrics();\n        if (formatterMetrics.iterations > 0) {\n            const spaceDeviation = formatterMetrics.space.deviation;\n            const prefix = spaceDeviation >= 0 ? '+' : '';\n            ctx.setFillStyle('red');\n            ctx.fillText(prefix + Math.round(spaceDeviation), xAbs + note.getXShift(), yPos - 10);\n        }\n        ctx.restore();\n    }\n    static parseDuration(durationString) {\n        if (!durationString) {\n            return undefined;\n        }\n        const regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n        const result = regexp.exec(durationString);\n        if (!result) {\n            return undefined;\n        }\n        const duration = result[1];\n        const dots = result[2].length;\n        const type = result[3] || 'n';\n        return { duration, dots, type };\n    }\n    static parseNoteStruct(noteStruct) {\n        // Preserve backwards-compatibility\n        const durationProps = Note.parseDuration(noteStruct.duration);\n        if (!durationProps) {\n            return undefined;\n        }\n        // If specified type is invalid, return undefined.\n        let type = noteStruct.type;\n        if (type && !Tables.validTypes[type]) {\n            return undefined;\n        }\n        // If no type specified, check duration or custom types\n        const customTypes = [];\n        if (!type) {\n            type = durationProps.type || 'n';\n            // If we have keys, try and check if we've got a custom glyph\n            if (noteStruct.keys !== undefined) {\n                noteStruct.keys.forEach((k, i) => {\n                    const result = k.split('/');\n                    // We have a custom glyph specified after the note eg. /X2\n                    customTypes[i] = (result && result.length === 3 ? result[2] : type);\n                });\n            }\n        }\n        // Calculate the tick duration of the note\n        let ticks = Tables.durationToTicks(durationProps.duration);\n        if (!ticks) {\n            return undefined;\n        }\n        // Are there any dots?\n        const dots = noteStruct.dots ? noteStruct.dots : durationProps.dots;\n        if (typeof dots !== 'number') {\n            return undefined;\n        }\n        // Add ticks as necessary depending on the numbr of dots\n        let currentTicks = ticks;\n        for (let i = 0; i < dots; i++) {\n            if (currentTicks <= 1)\n                return undefined;\n            currentTicks = currentTicks / 2;\n            ticks += currentTicks;\n        }\n        return {\n            duration: durationProps.duration,\n            type,\n            customTypes,\n            dots,\n            ticks,\n        };\n    }\n    /**\n     * Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n     * positioning and layout.\n     *\n     * @param noteStruct To create a new note you need to provide a `noteStruct`.\n     */\n    constructor(noteStruct) {\n        super();\n        if (!noteStruct) {\n            throw new RuntimeError('BadArguments', 'Note must have valid initialization data to identify duration and type.');\n        }\n        /** Parses `noteStruct` and get note properties. */\n        const parsedNoteStruct = Note.parseNoteStruct(noteStruct);\n        if (!parsedNoteStruct) {\n            throw new RuntimeError('BadArguments', `Invalid note initialization object: ${JSON.stringify(noteStruct)}`);\n        }\n        // Set note properties from parameters.\n        this.keys = noteStruct.keys || [];\n        // per-pitch properties\n        this.keyProps = [];\n        this.duration = parsedNoteStruct.duration;\n        this.noteType = parsedNoteStruct.type;\n        this.customTypes = parsedNoteStruct.customTypes;\n        if (noteStruct.duration_override) {\n            // Custom duration\n            this.setDuration(noteStruct.duration_override);\n        }\n        else {\n            // Default duration\n            this.setIntrinsicTicks(parsedNoteStruct.ticks);\n        }\n        this.modifiers = [];\n        // Get the glyph code for this note from the font.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        this.customGlyphs = this.customTypes.map((t) => Tables.getGlyphProps(this.duration, t));\n        // Note to play for audio players.\n        this.playNote = undefined;\n        // Positioning contexts used by the Formatter.\n        this.ignore_ticks = false;\n        // Positioning variables\n        this.width = 0; // Width in pixels calculated after preFormat\n        this.leftDisplacedHeadPx = 0; // Extra room on left for displaced note head\n        this.rightDisplacedHeadPx = 0; // Extra room on right for displaced note head\n        this.x_shift = 0; // X shift from tick context X\n        this.ys = []; // list of y coordinates for each note\n        // we need to hold on to these for ties and beams.\n        if (noteStruct.align_center) {\n            this.setCenterAlignment(noteStruct.align_center);\n        }\n        // The render surface.\n        this.render_options = {\n            annotation_spacing: 5,\n            glyph_font_scale: 1,\n            stroke_px: 1,\n            scale: 1,\n            font: '',\n            y_shift: 0,\n        };\n    }\n    /**\n     * Get the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    getPlayNote() {\n        return this.playNote;\n    }\n    /**\n     * Set the play note, which is arbitrary data that can be used by an\n     * audio player.\n     */\n    setPlayNote(note) {\n        this.playNote = note;\n        return this;\n    }\n    /**\n     * @returns true if this note is a type of rest.\n     *\n     * Rests don't have pitches, but take up space in the score.\n     * Subclasses should override this default implementation.\n     */\n    isRest() {\n        return false;\n    }\n    /** Add stroke. */\n    addStroke(index, stroke) {\n        stroke.setNote(this);\n        stroke.setIndex(index);\n        this.modifiers.push(stroke);\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the target stave. */\n    getStave() {\n        return this.stave;\n    }\n    /** Check and get the target stave. */\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /** Set the target stave. */\n    setStave(stave) {\n        this.stave = stave;\n        this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n        this.setContext(this.stave.getContext());\n        return this;\n    }\n    /** Get spacing to the left of the notes. */\n    getLeftDisplacedHeadPx() {\n        return this.leftDisplacedHeadPx;\n    }\n    /** Get spacing to the right of the notes. */\n    getRightDisplacedHeadPx() {\n        return this.rightDisplacedHeadPx;\n    }\n    /** Set spacing to the left of the notes. */\n    setLeftDisplacedHeadPx(x) {\n        this.leftDisplacedHeadPx = x;\n        return this;\n    }\n    /** Set spacing to the right of the notes. */\n    setRightDisplacedHeadPx(x) {\n        this.rightDisplacedHeadPx = x;\n        return this;\n    }\n    /** True if this note has no duration (e.g., bar notes, spacers, etc.). */\n    shouldIgnoreTicks() {\n        return this.ignore_ticks;\n    }\n    /** Get the stave line number for the note. */\n    // eslint-disable-next-line\n    getLineNumber(isTopNote) {\n        return 0;\n    }\n    /** Get the stave line number for rest. */\n    getLineForRest() {\n        return 0;\n    }\n    /**\n     * @deprecated Use `getGlyphProps()` instead.\n     */\n    // eslint-disable-next-line\n    getGlyph() {\n        return this.glyphProps;\n    }\n    /** Get the glyph associated with this note. */\n    getGlyphProps() {\n        return this.glyphProps;\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyphProps.getWidth(this.render_options.glyph_font_scale);\n    }\n    /**\n     * Set Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    setYs(ys) {\n        this.ys = ys;\n        return this;\n    }\n    /**\n     * Get Y positions for this note. Each Y value is associated with\n     * an individual pitch/key within the note/chord.\n     */\n    getYs() {\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-values calculated for this note.');\n        }\n        return this.ys;\n    }\n    /**\n     * Get the Y position of the space above the stave onto which text can\n     * be rendered.\n     */\n    getYForTopText(text_line) {\n        return this.checkStave().getYForTopText(text_line);\n    }\n    /** Return the voice that this note belongs in. */\n    getVoice() {\n        if (!this.voice)\n            throw new RuntimeError('NoVoice', 'Note has no voice.');\n        return this.voice;\n    }\n    /** Attach this note to `voice`. */\n    setVoice(voice) {\n        this.voice = voice;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Get the `TickContext` for this note. */\n    getTickContext() {\n        return this.checkTickContext();\n    }\n    /** Set the `TickContext` for this note. */\n    setTickContext(tc) {\n        this.tickContext = tc;\n        this.preFormatted = false;\n        return this;\n    }\n    /** Accessor to duration. */\n    getDuration() {\n        return this.duration;\n    }\n    /** Accessor to isDotted. */\n    isDotted() {\n        return this.getModifiersByType(Category.Dot).length > 0;\n    }\n    /** Accessor to hasStem. */\n    hasStem() {\n        return false;\n    }\n    /** Accessor to note type. */\n    getNoteType() {\n        return this.noteType;\n    }\n    /** Get the beam. */\n    getBeam() {\n        return this.beam;\n    }\n    /** Check and get the beam. */\n    checkBeam() {\n        return defined(this.beam, 'NoBeam', 'No beam attached to instance');\n    }\n    /** Check it has a beam. */\n    hasBeam() {\n        return this.beam != undefined;\n    }\n    /** Set the beam. */\n    setBeam(beam) {\n        this.beam = beam;\n        return this;\n    }\n    /**\n     * Attach a modifier to this note.\n     * @param modifier the Modifier to add.\n     * @param index of the key to modify.\n     * @returns this\n     */\n    addModifier(modifier, index = 0) {\n        const signature = 'Note.addModifier(modifier: Modifier, index: number=0)';\n        // Backwards compatibility with 3.0.9.\n        if (typeof index === 'string') {\n            index = parseInt(index);\n            // eslint-disable-next-line\n            console.warn(signature + ' expected a number for `index`, but received a string.');\n        }\n        // Some versions of VexFlow had the two parameters reversed.\n        // Check here and throw an error if the argument types are not correct.\n        if (typeof modifier !== 'object' || typeof index !== 'number') {\n            throw new RuntimeError('WrongParams', 'Incorrect call signature. Use ' + signature + ' instead.');\n        }\n        modifier.setNote(this);\n        modifier.setIndex(index);\n        super.addModifier(modifier);\n        return this;\n    }\n    /** Get all modifiers of a specific type in `this.modifiers`. */\n    getModifiersByType(type) {\n        return this.modifiers.filter((modifier) => modifier.getCategory() === type);\n    }\n    /** Get the coordinates for where modifiers begin. */\n    // eslint-disable-next-line\n    getModifierStartXY(position, index, options) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        return {\n            x: this.getAbsoluteX(),\n            y: this.ys[0],\n        };\n    }\n    getRightParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getRightDisplacedHeadPx() : 0;\n    }\n    getLeftParenthesisPx(index) {\n        const props = this.getKeyProps()[index];\n        return props.displaced ? this.getLeftDisplacedHeadPx() - this.x_shift : -this.x_shift;\n    }\n    getFirstDotPx() {\n        let px = this.getRightDisplacedHeadPx();\n        if (this.checkModifierContext().getMembers('Parenthesis').length !== 0)\n            px += Tables.currentMusicFont().lookupMetric('parenthesis.default.width');\n        return px;\n    }\n    /** Get the metrics for this note. */\n    getMetrics() {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getMetrics on an unformatted note.\");\n        }\n        const modLeftPx = this.modifierContext ? this.modifierContext.getState().left_shift : 0;\n        const modRightPx = this.modifierContext ? this.modifierContext.getState().right_shift : 0;\n        const width = this.getWidth();\n        const glyphWidth = this.getGlyphWidth();\n        const notePx = width -\n            modLeftPx - // subtract left modifiers\n            modRightPx - // subtract right modifiers\n            this.leftDisplacedHeadPx - // subtract left displaced head\n            this.rightDisplacedHeadPx; // subtract right displaced head\n        // NOTE: If you change this, remember to update MockTickable.getMetrics() in the tests/ directory.\n        return {\n            width,\n            glyphWidth,\n            notePx,\n            // Modifier spacing.\n            modLeftPx,\n            modRightPx,\n            // Displaced note head on left or right.\n            leftDisplacedHeadPx: this.leftDisplacedHeadPx,\n            rightDisplacedHeadPx: this.rightDisplacedHeadPx,\n            glyphPx: 0,\n        };\n    }\n    /**\n     * Get the absolute `X` position of this note's tick context. This\n     * excludes x_shift, so you'll need to factor it in if you're\n     * looking for the post-formatted x-position.\n     */\n    getAbsoluteX() {\n        const tickContext = this.checkTickContext(`Can't getAbsoluteX() without a TickContext.`);\n        // Position note to left edge of tick context.\n        let x = tickContext.getX();\n        if (this.stave) {\n            x += this.stave.getNoteStartX() + Tables.currentMusicFont().lookupMetric('stave.padding');\n        }\n        if (this.isCenterAligned()) {\n            x += this.getCenterXShift();\n        }\n        return x;\n    }\n    /** Get point for notes. */\n    static getPoint(size) {\n        // for sizes other than 'default', note is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 5) * 3;\n    }\n    /** Get the direction of the stem. */\n    getStemDirection() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the top and bottom `y` values of the stem. */\n    getStemExtents() {\n        throw new RuntimeError('NoStem', 'No stem attached to this note.');\n    }\n    /** Get the `x` coordinate to the right of the note. */\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieStartX += note_glyph_width / 2;\n        tieStartX += -this.width / 2 + this.width + 2;\n        return tieStartX;\n    }\n    /** Get the `x` coordinate to the left of the note. */\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        const note_glyph_width = this.glyphProps.getWidth();\n        tieEndX += note_glyph_width / 2;\n        tieEndX -= this.width / 2 + 2;\n        return tieEndX;\n    }\n    // Get the pitches in the note\n    getKeys() {\n        return this.keys;\n    }\n    // Get the properties for all the keys in the note\n    getKeyProps() {\n        return this.keyProps;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A base class for stave modifiers (e.g. clefs, key signatures)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport var StaveModifierPosition;\n(function (StaveModifierPosition) {\n    StaveModifierPosition[StaveModifierPosition[\"CENTER\"] = 0] = \"CENTER\";\n    StaveModifierPosition[StaveModifierPosition[\"LEFT\"] = 1] = \"LEFT\";\n    StaveModifierPosition[StaveModifierPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n    StaveModifierPosition[StaveModifierPosition[\"ABOVE\"] = 3] = \"ABOVE\";\n    StaveModifierPosition[StaveModifierPosition[\"BELOW\"] = 4] = \"BELOW\";\n    StaveModifierPosition[StaveModifierPosition[\"BEGIN\"] = 5] = \"BEGIN\";\n    StaveModifierPosition[StaveModifierPosition[\"END\"] = 6] = \"END\";\n})(StaveModifierPosition || (StaveModifierPosition = {}));\nexport class StaveModifier extends Element {\n    static get CATEGORY() {\n        return Category.StaveModifier;\n    }\n    static get Position() {\n        return StaveModifierPosition;\n    }\n    constructor() {\n        super();\n        this.width = 0;\n        this.x = 0;\n        this.padding = 10;\n        this.position = StaveModifierPosition.ABOVE;\n    }\n    getPosition() {\n        return this.position;\n    }\n    setPosition(position) {\n        this.position = position;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /**\n     * Runs setYShift() for the Glyph object so that it matches the position of line for\n     * the Stave provided.  A `customShift` can also be given (measured in the same units\n     * as `setYShift` not in lines) and this will be added after all other positions are\n     * calculated from the Stave.\n     *\n     * Note that this routine only sets the yShift; it does not actually \"place\" (meaning\n     * draw) the Glyph on the Stave.  Call .draw() afterwards to do that.\n     */\n    placeGlyphOnLine(glyph, stave, line, customShift = 0) {\n        glyph.setYShift(stave.getYForLine(line !== null && line !== void 0 ? line : 0) - stave.getYForGlyphs() + customShift);\n    }\n    getPadding(index) {\n        return index !== undefined && index < 2 ? 0 : this.padding;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    setLayoutMetrics(layoutMetrics) {\n        this.layoutMetrics = layoutMetrics;\n        return this;\n    }\n    getLayoutMetrics() {\n        return this.layoutMetrics;\n    }\n    // eslint-disable-next-line\n    draw(...args) {\n        // DO NOTHING.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author Larry Kuhns 2011\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport var BarlineType;\n(function (BarlineType) {\n    BarlineType[BarlineType[\"SINGLE\"] = 1] = \"SINGLE\";\n    BarlineType[BarlineType[\"DOUBLE\"] = 2] = \"DOUBLE\";\n    BarlineType[BarlineType[\"END\"] = 3] = \"END\";\n    BarlineType[BarlineType[\"REPEAT_BEGIN\"] = 4] = \"REPEAT_BEGIN\";\n    BarlineType[BarlineType[\"REPEAT_END\"] = 5] = \"REPEAT_END\";\n    BarlineType[BarlineType[\"REPEAT_BOTH\"] = 6] = \"REPEAT_BOTH\";\n    BarlineType[BarlineType[\"NONE\"] = 7] = \"NONE\";\n})(BarlineType || (BarlineType = {}));\nexport class Barline extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Barline;\n    }\n    static get type() {\n        return BarlineType;\n    }\n    static get typeString() {\n        return {\n            single: BarlineType.SINGLE,\n            double: BarlineType.DOUBLE,\n            end: BarlineType.END,\n            repeatBegin: BarlineType.REPEAT_BEGIN,\n            repeatEnd: BarlineType.REPEAT_END,\n            repeatBoth: BarlineType.REPEAT_BOTH,\n            none: BarlineType.NONE,\n        };\n    }\n    constructor(type) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        const TYPE = BarlineType;\n        this.widths = {};\n        this.widths[TYPE.SINGLE] = 5;\n        this.widths[TYPE.DOUBLE] = 5;\n        this.widths[TYPE.END] = 5;\n        this.widths[TYPE.REPEAT_BEGIN] = 5;\n        this.widths[TYPE.REPEAT_END] = 5;\n        this.widths[TYPE.REPEAT_BOTH] = 5;\n        this.widths[TYPE.NONE] = 5;\n        this.paddings = {};\n        this.paddings[TYPE.SINGLE] = 0;\n        this.paddings[TYPE.DOUBLE] = 0;\n        this.paddings[TYPE.END] = 0;\n        this.paddings[TYPE.REPEAT_BEGIN] = 15;\n        this.paddings[TYPE.REPEAT_END] = 15;\n        this.paddings[TYPE.REPEAT_BOTH] = 15;\n        this.paddings[TYPE.NONE] = 0;\n        this.layoutMetricsMap = {};\n        this.layoutMetricsMap[TYPE.SINGLE] = {\n            xMin: 0,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.DOUBLE] = {\n            xMin: -3,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.END] = {\n            xMin: -5,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_END] = {\n            xMin: -10,\n            xMax: 1,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BEGIN] = {\n            xMin: -2,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.REPEAT_BOTH] = {\n            xMin: -10,\n            xMax: 10,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.layoutMetricsMap[TYPE.NONE] = {\n            xMin: 0,\n            xMax: 0,\n            paddingLeft: 5,\n            paddingRight: 5,\n        };\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type);\n    }\n    getType() {\n        return this.type;\n    }\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        this.setWidth(this.widths[this.type]);\n        this.setPadding(this.paddings[this.type]);\n        this.setLayoutMetrics(this.layoutMetricsMap[this.type]);\n        return this;\n    }\n    // Draw barlines\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('stavebarline', this.getAttribute('id'));\n        switch (this.type) {\n            case BarlineType.SINGLE:\n                this.drawVerticalBar(stave, this.x, false);\n                break;\n            case BarlineType.DOUBLE:\n                this.drawVerticalBar(stave, this.x, true);\n                break;\n            case BarlineType.END:\n                this.drawVerticalEndBar(stave, this.x);\n                break;\n            case BarlineType.REPEAT_BEGIN:\n                // If the barline is shifted over (in front of clef/time/key)\n                // Draw vertical bar at the beginning.\n                this.drawRepeatBar(stave, this.x, true);\n                if (stave.getX() !== this.x) {\n                    this.drawVerticalBar(stave, stave.getX());\n                }\n                break;\n            case BarlineType.REPEAT_END:\n                this.drawRepeatBar(stave, this.x, false);\n                break;\n            case BarlineType.REPEAT_BOTH:\n                this.drawRepeatBar(stave, this.x, false);\n                this.drawRepeatBar(stave, this.x, true);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n    drawVerticalBar(stave, x, double_bar) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        if (double_bar) {\n            staveCtx.fillRect(x - 3, topY, 1, botY - topY);\n        }\n        staveCtx.fillRect(x, topY, 1, botY - topY);\n    }\n    drawVerticalEndBar(stave, x) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        staveCtx.fillRect(x - 5, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n    }\n    drawRepeatBar(stave, x, begin) {\n        const staveCtx = stave.checkContext();\n        const topY = stave.getTopLineTopY();\n        const botY = stave.getBottomLineBottomY();\n        let x_shift = 3;\n        if (!begin) {\n            x_shift = -5;\n        }\n        staveCtx.fillRect(x + x_shift, topY, 1, botY - topY);\n        staveCtx.fillRect(x - 2, topY, 3, botY - topY);\n        const dot_radius = 2;\n        // Shift dots left or right\n        if (begin) {\n            x_shift += 4;\n        }\n        else {\n            x_shift -= 4;\n        }\n        const dot_x = x + x_shift + dot_radius / 2;\n        // calculate the y offset based on number of stave lines\n        let y_offset = (stave.getNumLines() - 1) * stave.getSpacingBetweenLines();\n        y_offset = y_offset / 2 - stave.getSpacingBetweenLines() / 2;\n        let dot_y = topY + y_offset + dot_radius / 2;\n        // draw the top repeat dot\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n        // draw the bottom repeat dot\n        dot_y += stave.getSpacingBetweenLines();\n        staveCtx.beginPath();\n        staveCtx.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n        staveCtx.fill();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Author: Aaron (@AaronDavidNewman)\n//\n// This implements chord symbols above/below a chord.\n// Chord symbols are modifiers that can be attached to notes.\n// They can contain multiple 'blocks' which represent text or\n// glyphs with various positioning options.\n//\n// See `tests/chordsymbol_tests.ts` for usage examples.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category, isStemmableNote } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.ChordSymbol.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ChordSymbol.DEBUG)\n        log('Vex.Flow.ChordSymbol', args);\n}\nexport var ChordSymbolHorizontalJustify;\n(function (ChordSymbolHorizontalJustify) {\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"LEFT\"] = 1] = \"LEFT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER\"] = 2] = \"CENTER\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"RIGHT\"] = 3] = \"RIGHT\";\n    ChordSymbolHorizontalJustify[ChordSymbolHorizontalJustify[\"CENTER_STEM\"] = 4] = \"CENTER_STEM\";\n})(ChordSymbolHorizontalJustify || (ChordSymbolHorizontalJustify = {}));\nexport var ChordSymbolVerticalJustify;\n(function (ChordSymbolVerticalJustify) {\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"TOP\"] = 1] = \"TOP\";\n    ChordSymbolVerticalJustify[ChordSymbolVerticalJustify[\"BOTTOM\"] = 2] = \"BOTTOM\";\n})(ChordSymbolVerticalJustify || (ChordSymbolVerticalJustify = {}));\nexport var SymbolTypes;\n(function (SymbolTypes) {\n    SymbolTypes[SymbolTypes[\"GLYPH\"] = 1] = \"GLYPH\";\n    SymbolTypes[SymbolTypes[\"TEXT\"] = 2] = \"TEXT\";\n    SymbolTypes[SymbolTypes[\"LINE\"] = 3] = \"LINE\";\n})(SymbolTypes || (SymbolTypes = {}));\nexport var SymbolModifiers;\n(function (SymbolModifiers) {\n    SymbolModifiers[SymbolModifiers[\"NONE\"] = 1] = \"NONE\";\n    SymbolModifiers[SymbolModifiers[\"SUBSCRIPT\"] = 2] = \"SUBSCRIPT\";\n    SymbolModifiers[SymbolModifiers[\"SUPERSCRIPT\"] = 3] = \"SUPERSCRIPT\";\n})(SymbolModifiers || (SymbolModifiers = {}));\n/**\n * ChordSymbol is a modifier that creates a chord symbol above/below a chord.\n * As a modifier, it is attached to an existing note.\n */\nexport class ChordSymbol extends Modifier {\n    static get CATEGORY() {\n        return Category.ChordSymbol;\n    }\n    static get superSubRatio() {\n        return ChordSymbol.metrics.global.superSubRatio;\n    }\n    /** Currently unused: Globally turn off text formatting, if the built-in formatting does not work for your font. */\n    static set NO_TEXT_FORMAT(val) {\n        ChordSymbol.noFormat = val;\n    }\n    static get NO_TEXT_FORMAT() {\n        return ChordSymbol.noFormat;\n    }\n    static getMetricForGlyph(glyphCode) {\n        if (ChordSymbol.metrics.glyphs[glyphCode]) {\n            return ChordSymbol.metrics.glyphs[glyphCode];\n        }\n        return undefined;\n    }\n    static get engravingFontResolution() {\n        return Tables.currentMusicFont().getResolution();\n    }\n    static get spacingBetweenBlocks() {\n        return ChordSymbol.metrics.global.spacing / ChordSymbol.engravingFontResolution;\n    }\n    static getWidthForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0.65; // probably should do something here.\n        }\n        return metric.advanceWidth / ChordSymbol.engravingFontResolution;\n    }\n    static getYShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return metric.yOffset / ChordSymbol.engravingFontResolution;\n    }\n    static getXShiftForGlyph(glyph) {\n        const metric = ChordSymbol.getMetricForGlyph(glyph.code);\n        if (!metric) {\n            return 0;\n        }\n        return (-1 * metric.leftSideBearing) / ChordSymbol.engravingFontResolution;\n    }\n    static get superscriptOffset() {\n        return ChordSymbol.metrics.global.superscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get subscriptOffset() {\n        return ChordSymbol.metrics.global.subscriptOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get kerningOffset() {\n        return ChordSymbol.metrics.global.kerningOffset / ChordSymbol.engravingFontResolution;\n    }\n    static get metrics() {\n        const chordSymbol = Tables.currentMusicFont().getMetrics().chordSymbol;\n        if (!chordSymbol)\n            throw new RuntimeError('BadMetrics', `chordSymbol missing`);\n        return chordSymbol;\n    }\n    static get lowerKerningText() {\n        // For example, see: `bravura_metrics.ts`\n        // BravuraMetrics.glyphs.chordSymbol.global.lowerKerningText, which returns an array of letters.\n        // ['D', 'F', 'P', 'T', 'V', 'Y']\n        return ChordSymbol.metrics.global.lowerKerningText;\n    }\n    static get upperKerningText() {\n        return ChordSymbol.metrics.global.upperKerningText;\n    }\n    static isSuperscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUPERSCRIPT;\n    }\n    static isSubscript(block) {\n        return block.symbolModifier !== undefined && block.symbolModifier === SymbolModifiers.SUBSCRIPT;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /**\n     * Estimate the width of the whole chord symbol, based on the sum of the widths of the individual blocks.\n     * Estimate how many lines above/below the staff we need.\n     */\n    static format(symbols, state) {\n        var _a;\n        if (!symbols || symbols.length === 0)\n            return false;\n        let width = 0;\n        let nonSuperWidth = 0;\n        let leftWidth = 0;\n        let rightWidth = 0;\n        let maxLeftGlyphWidth = 0;\n        let maxRightGlyphWidth = 0;\n        for (const symbol of symbols) {\n            const fontSize = Font.convertSizeToPointValue((_a = symbol.textFont) === null || _a === void 0 ? void 0 : _a.size);\n            const fontAdj = Font.scaleSize(fontSize, 0.05);\n            const glyphAdj = fontAdj * 2;\n            const note = symbol.checkAttachedNote();\n            let symbolWidth = 0;\n            let lineSpaces = 1;\n            let vAlign = false;\n            for (let j = 0; j < symbol.symbolBlocks.length; ++j) {\n                const block = symbol.symbolBlocks[j];\n                const sup = ChordSymbol.isSuperscript(block);\n                const sub = ChordSymbol.isSubscript(block);\n                const superSubScale = sup || sub ? ChordSymbol.superSubRatio : 1;\n                const adj = block.symbolType === SymbolTypes.GLYPH ? glyphAdj * superSubScale : fontAdj * superSubScale;\n                // If there are super/subscripts, they extend beyond the line so\n                // assume they take up 2 lines\n                if (sup || sub) {\n                    lineSpaces = 2;\n                }\n                // If there is a symbol-specific offset, add it but consider font\n                // size since font and glyphs will be interspersed.\n                const fontSize = symbol.textFormatter.fontSizeInPixels;\n                const superSubFontSize = fontSize * superSubScale;\n                if (block.symbolType === SymbolTypes.GLYPH && block.glyph !== undefined) {\n                    block.width = ChordSymbol.getWidthForGlyph(block.glyph) * superSubFontSize;\n                    block.yShift += ChordSymbol.getYShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.xShift += ChordSymbol.getXShiftForGlyph(block.glyph) * superSubFontSize;\n                    block.glyph.scale = block.glyph.scale * adj;\n                }\n                else if (block.symbolType === SymbolTypes.TEXT) {\n                    block.width = block.width * superSubFontSize;\n                    block.yShift += symbol.getYOffsetForText(block.text) * adj;\n                }\n                if (block.symbolType === SymbolTypes.GLYPH &&\n                    block.glyph !== undefined &&\n                    block.glyph.code === ChordSymbol.glyphs.over.code) {\n                    lineSpaces = 2;\n                }\n                block.width += ChordSymbol.spacingBetweenBlocks * fontSize * superSubScale;\n                // If a subscript immediately  follows a superscript block, try to\n                // overlay them.\n                if (sup && j > 0) {\n                    const prev = symbol.symbolBlocks[j - 1];\n                    if (!ChordSymbol.isSuperscript(prev)) {\n                        nonSuperWidth = width;\n                    }\n                }\n                if (sub && nonSuperWidth > 0) {\n                    vAlign = true;\n                    // slide the symbol over so it lines up with superscript\n                    block.xShift = block.xShift + (nonSuperWidth - width);\n                    width = nonSuperWidth;\n                    nonSuperWidth = 0;\n                    // If we have vertically lined up, turn kerning off.\n                    symbol.setEnableKerning(false);\n                }\n                if (!sup && !sub) {\n                    nonSuperWidth = 0;\n                }\n                block.vAlign = vAlign;\n                width += block.width;\n                symbolWidth = width;\n            }\n            // make kerning adjustments after computing super/subscripts\n            symbol.updateKerningAdjustments();\n            symbol.updateOverBarAdjustments();\n            if (symbol.getVertical() === ChordSymbolVerticalJustify.TOP) {\n                symbol.setTextLine(state.top_text_line);\n                state.top_text_line += lineSpaces;\n            }\n            else {\n                symbol.setTextLine(state.text_line + 1);\n                state.text_line += lineSpaces + 1;\n            }\n            if (symbol.getReportWidth() && isStemmableNote(note)) {\n                const glyphWidth = note.getGlyphProps().getWidth();\n                if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.LEFT) {\n                    maxLeftGlyphWidth = Math.max(glyphWidth, maxLeftGlyphWidth);\n                    leftWidth = Math.max(leftWidth, symbolWidth) + ChordSymbol.minPadding;\n                }\n                else if (symbol.getHorizontal() === ChordSymbolHorizontalJustify.RIGHT) {\n                    maxRightGlyphWidth = Math.max(glyphWidth, maxRightGlyphWidth);\n                    rightWidth = Math.max(rightWidth, symbolWidth);\n                }\n                else {\n                    leftWidth = Math.max(leftWidth, symbolWidth / 2) + ChordSymbol.minPadding;\n                    rightWidth = Math.max(rightWidth, symbolWidth / 2);\n                    maxLeftGlyphWidth = Math.max(glyphWidth / 2, maxLeftGlyphWidth);\n                    maxRightGlyphWidth = Math.max(glyphWidth / 2, maxRightGlyphWidth);\n                }\n            }\n            width = 0; // reset symbol width\n        }\n        const rightOverlap = Math.min(Math.max(rightWidth - maxRightGlyphWidth, 0), Math.max(rightWidth - state.right_shift, 0));\n        const leftOverlap = Math.min(Math.max(leftWidth - maxLeftGlyphWidth, 0), Math.max(leftWidth - state.left_shift, 0));\n        state.left_shift += leftOverlap;\n        state.right_shift += rightOverlap;\n        return true;\n    }\n    constructor() {\n        super();\n        this.symbolBlocks = [];\n        this.horizontal = ChordSymbolHorizontalJustify.LEFT;\n        this.vertical = ChordSymbolVerticalJustify.TOP;\n        this.useKerning = true;\n        this.reportWidth = true;\n        this.resetFont();\n    }\n    /**\n     * Default text font.\n     * Choose a font family that works well with the current music engraving font.\n     * @override `Element.TEXT_FONT`.\n     */\n    static get TEXT_FONT() {\n        let family = 'Roboto Slab, Times, serif';\n        if (Tables.currentMusicFont().getName() === 'Petaluma') {\n            // Fixes Issue #1180\n            family = 'PetalumaScript, Arial, sans-serif';\n        }\n        return {\n            family,\n            size: 12,\n            weight: FontWeight.NORMAL,\n            style: FontStyle.NORMAL,\n        };\n    }\n    /**\n     * The offset is specified in `em`. Scale this value by the font size in pixels.\n     */\n    get superscriptOffset() {\n        return ChordSymbol.superscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    get subscriptOffset() {\n        return ChordSymbol.subscriptOffset * this.textFormatter.fontSizeInPixels;\n    }\n    setReportWidth(value) {\n        this.reportWidth = value;\n        return this;\n    }\n    getReportWidth() {\n        return this.reportWidth;\n    }\n    updateOverBarAdjustments() {\n        const barIndex = this.symbolBlocks.findIndex(({ symbolType, glyph }) => symbolType === SymbolTypes.GLYPH && glyph !== undefined && glyph.code === 'csymDiagonalArrangementSlash');\n        if (barIndex < 0) {\n            return;\n        }\n        const bar = this.symbolBlocks[barIndex];\n        const xoff = bar.width / 4;\n        const yoff = 0.25 * this.textFormatter.fontSizeInPixels;\n        let symIndex = 0;\n        for (symIndex === 0; symIndex < barIndex; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift + xoff;\n            symbol.yShift = symbol.yShift - yoff;\n        }\n        for (symIndex = barIndex + 1; symIndex < this.symbolBlocks.length; ++symIndex) {\n            const symbol = this.symbolBlocks[symIndex];\n            symbol.xShift = symbol.xShift - xoff;\n            symbol.yShift = symbol.yShift + yoff;\n        }\n    }\n    updateKerningAdjustments() {\n        let accum = 0;\n        for (let j = 0; j < this.symbolBlocks.length; ++j) {\n            const symbol = this.symbolBlocks[j];\n            accum += this.getKerningAdjustment(j);\n            symbol.xShift += accum;\n        }\n    }\n    /** Do some basic kerning so that letter chords like 'A' don't have the extensions hanging off to the right. */\n    getKerningAdjustment(j) {\n        if (!this.useKerning) {\n            return 0;\n        }\n        const currSymbol = this.symbolBlocks[j];\n        const prevSymbol = j > 0 ? this.symbolBlocks[j - 1] : undefined;\n        let adjustment = 0;\n        // Move things into the '/' over bar\n        if (currSymbol.symbolType === SymbolTypes.GLYPH &&\n            currSymbol.glyph !== undefined &&\n            currSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += currSymbol.glyph.metrics.x_shift;\n        }\n        if (prevSymbol !== undefined &&\n            prevSymbol.symbolType === SymbolTypes.GLYPH &&\n            prevSymbol.glyph !== undefined &&\n            prevSymbol.glyph.code === ChordSymbol.glyphs.over.code) {\n            adjustment += prevSymbol.glyph.metrics.x_shift;\n        }\n        // For superscripts that follow a letter without much top part, move it to the left slightly\n        let preKernUpper = false;\n        let preKernLower = false;\n        if (prevSymbol !== undefined && prevSymbol.symbolType === SymbolTypes.TEXT) {\n            preKernUpper = ChordSymbol.upperKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n            preKernLower = ChordSymbol.lowerKerningText.some((xx) => xx === prevSymbol.text[prevSymbol.text.length - 1]);\n        }\n        const kerningOffsetPixels = ChordSymbol.kerningOffset * this.textFormatter.fontSizeInPixels;\n        // TODO: adjust kern for font size.\n        // Where should this constant live?\n        if (preKernUpper && currSymbol.symbolModifier === SymbolModifiers.SUPERSCRIPT) {\n            adjustment += kerningOffsetPixels;\n        }\n        if (preKernLower && currSymbol.symbolType === SymbolTypes.TEXT) {\n            if (currSymbol.text[0] >= 'a' && currSymbol.text[0] <= 'z') {\n                adjustment += kerningOffsetPixels / 2;\n            }\n            if (ChordSymbol.upperKerningText.some((xx) => xx === (prevSymbol === null || prevSymbol === void 0 ? void 0 : prevSymbol.text[prevSymbol.text.length - 1]))) {\n                adjustment += kerningOffsetPixels / 2;\n            }\n        }\n        return adjustment;\n    }\n    /**\n     * ChordSymbol allows multiple blocks so we can mix glyphs and font text.\n     * Each block can have its own vertical orientation.\n     */\n    // eslint-disable-next-line\n    getSymbolBlock(params = {}) {\n        var _a, _b, _c;\n        const symbolType = (_a = params.symbolType) !== null && _a !== void 0 ? _a : SymbolTypes.TEXT;\n        const symbolBlock = {\n            text: (_b = params.text) !== null && _b !== void 0 ? _b : '',\n            symbolType,\n            symbolModifier: (_c = params.symbolModifier) !== null && _c !== void 0 ? _c : SymbolModifiers.NONE,\n            xShift: 0,\n            yShift: 0,\n            vAlign: false,\n            width: 0,\n        };\n        // Note: symbol widths are resolution and font-independent.\n        // We convert to pixel values when we know what the font is.\n        if (symbolType === SymbolTypes.GLYPH && typeof params.glyph === 'string') {\n            const glyphArgs = ChordSymbol.glyphs[params.glyph];\n            const glyphPoints = 20;\n            symbolBlock.glyph = new Glyph(glyphArgs.code, glyphPoints, { category: 'chordSymbol' });\n        }\n        else if (symbolType === SymbolTypes.TEXT) {\n            symbolBlock.width = this.textFormatter.getWidthForTextInEm(symbolBlock.text);\n        }\n        else if (symbolType === SymbolTypes.LINE) {\n            symbolBlock.width = params.width;\n        }\n        return symbolBlock;\n    }\n    /** Add a symbol to this chord, could be text, glyph or line. */\n    // eslint-disable-next-line\n    addSymbolBlock(parameters) {\n        this.symbolBlocks.push(this.getSymbolBlock(parameters));\n        return this;\n    }\n    // ### Convenience functions for creating different types of chord symbol parts.\n    /** Add a text block. */\n    // eslint-disable-next-line\n    addText(text, parameters = {}) {\n        const symbolType = SymbolTypes.TEXT;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, parameters), { text, symbolType }));\n    }\n    /** Add a text block with superscript modifier. */\n    addTextSuperscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a text block with subscript modifier. */\n    addTextSubscript(text) {\n        const symbolType = SymbolTypes.TEXT;\n        const symbolModifier = SymbolModifiers.SUBSCRIPT;\n        return this.addSymbolBlock({ text, symbolType, symbolModifier });\n    }\n    /** Add a glyph block with superscript modifier. */\n    addGlyphSuperscript(glyph) {\n        const symbolType = SymbolTypes.GLYPH;\n        const symbolModifier = SymbolModifiers.SUPERSCRIPT;\n        return this.addSymbolBlock({ glyph, symbolType, symbolModifier });\n    }\n    /** Add a glyph block. */\n    // eslint-disable-next-line\n    addGlyph(glyph, params = {}) {\n        const symbolType = SymbolTypes.GLYPH;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { glyph, symbolType }));\n    }\n    /**\n     * Add a glyph for each character in 'text'. If the glyph is not available, use text from the font.\n     * e.g. `addGlyphOrText('(+5#11)')` will use text for the '5' and '11', and glyphs for everything else.\n     */\n    // eslint-disable-next-line\n    addGlyphOrText(text, params = {}) {\n        let str = '';\n        for (let i = 0; i < text.length; ++i) {\n            const char = text[i];\n            if (ChordSymbol.glyphs[char]) {\n                if (str.length > 0) {\n                    this.addText(str, params);\n                    str = '';\n                }\n                this.addGlyph(char, params);\n            }\n            else {\n                // Collect consecutive characters with no glyphs.\n                str += char;\n            }\n        }\n        if (str.length > 0) {\n            this.addText(str, params);\n        }\n        return this;\n    }\n    /** Add a line of the given width, used as a continuation of the previous symbol in analysis, or lyrics, etc. */\n    // eslint-disable-next-line\n    addLine(width, params = {}) {\n        const symbolType = SymbolTypes.LINE;\n        return this.addSymbolBlock(Object.assign(Object.assign({}, params), { symbolType, width }));\n    }\n    /**\n     * Set the chord symbol's font family, size, weight, style (e.g., `Arial`, `10pt`, `bold`, `italic`).\n     *\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     *\n     * @override See: Element.\n     */\n    setFont(f, size, weight, style) {\n        super.setFont(f, size, weight, style);\n        this.textFormatter = TextFormatter.create(this.textFont);\n        return this;\n    }\n    setEnableKerning(val) {\n        this.useKerning = val;\n        return this;\n    }\n    /** Set vertical position of text (above or below stave). */\n    setVertical(vj) {\n        this.vertical = typeof vj === 'string' ? ChordSymbol.VerticalJustifyString[vj] : vj;\n        return this;\n    }\n    getVertical() {\n        return this.vertical;\n    }\n    /** Set horizontal justification. */\n    setHorizontal(hj) {\n        this.horizontal = typeof hj === 'string' ? ChordSymbol.HorizontalJustifyString[hj] : hj;\n        return this;\n    }\n    getHorizontal() {\n        return this.horizontal;\n    }\n    getWidth() {\n        let width = 0;\n        this.symbolBlocks.forEach((symbol) => {\n            width += symbol.vAlign ? 0 : symbol.width;\n        });\n        return width;\n    }\n    getYOffsetForText(text) {\n        var _a;\n        let acc = 0;\n        let i = 0;\n        for (i = 0; i < text.length; ++i) {\n            const metrics = this.textFormatter.getGlyphMetrics(text[i]);\n            if (metrics) {\n                const yMax = (_a = metrics.y_max) !== null && _a !== void 0 ? _a : 0;\n                acc = yMax < acc ? yMax : acc;\n            }\n        }\n        const resolution = this.textFormatter.getResolution();\n        return i > 0 ? -1 * (acc / resolution) : 0;\n    }\n    /** Render text and glyphs above/below the note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        // We're changing context parameters. Save current state.\n        ctx.save();\n        this.applyStyle();\n        ctx.openGroup('chordsymbol', this.getAttribute('id'));\n        const start = note.getModifierStartXY(Modifier.Position.ABOVE, this.index);\n        ctx.setFont(this.textFont);\n        let y;\n        // The position of the text varies based on whether or not the note\n        // has a stem.\n        const hasStem = note.hasStem();\n        const stave = note.checkStave();\n        if (this.vertical === ChordSymbolVerticalJustify.BOTTOM) {\n            // HACK: We need to compensate for the text's height since its origin is bottom-right.\n            y = stave.getYForBottomText(this.text_line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                const stem_base = note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY;\n                y = Math.max(y, stem_base + spacing * (this.text_line + 2));\n            }\n        }\n        else {\n            // (this.vertical === VerticalJustify.TOP)\n            const topY = Math.min(...note.getYs());\n            y = Math.min(stave.getYForTopText(this.text_line), topY - 10);\n            if (hasStem) {\n                const stem_ext = note.checkStem().getExtents();\n                const spacing = stave.getSpacingBetweenLines();\n                y = Math.min(y, stem_ext.topY - 5 - spacing * this.text_line);\n            }\n        }\n        let x = start.x;\n        if (this.horizontal === ChordSymbolHorizontalJustify.LEFT) {\n            x = start.x;\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.RIGHT) {\n            x = start.x + this.getWidth();\n        }\n        else if (this.horizontal === ChordSymbolHorizontalJustify.CENTER) {\n            x = start.x - this.getWidth() / 2;\n        }\n        else {\n            // HorizontalJustify.CENTER_STEM\n            x = note.getStemX() - this.getWidth() / 2;\n        }\n        L('Rendering ChordSymbol: ', this.textFormatter, x, y);\n        this.symbolBlocks.forEach((symbol) => {\n            const isSuper = ChordSymbol.isSuperscript(symbol);\n            const isSub = ChordSymbol.isSubscript(symbol);\n            let curY = y;\n            L('shift was ', symbol.xShift, symbol.yShift);\n            L('curY pre sub ', curY);\n            if (isSuper) {\n                curY += this.superscriptOffset;\n            }\n            if (isSub) {\n                curY += this.subscriptOffset;\n            }\n            L('curY sup/sub ', curY);\n            if (symbol.symbolType === SymbolTypes.TEXT) {\n                if (isSuper || isSub) {\n                    ctx.save();\n                    if (this.textFont) {\n                        const { family, size, weight, style } = this.textFont;\n                        const smallerFontSize = Font.scaleSize(size, ChordSymbol.superSubRatio);\n                        ctx.setFont(family, smallerFontSize, weight, style);\n                    }\n                }\n                // TODO???\n                // We estimate the text width, fill it in with the empirical value so the formatting is even.\n                // const textDim = ctx.measureText(symbol.text);\n                // symbol.width = textDim.width;\n                L('Rendering Text: ', symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                ctx.fillText(symbol.text, x + symbol.xShift, curY + symbol.yShift);\n                if (isSuper || isSub) {\n                    ctx.restore();\n                }\n            }\n            else if (symbol.symbolType === SymbolTypes.GLYPH && symbol.glyph) {\n                curY += symbol.yShift;\n                L('Rendering Glyph: ', symbol.glyph.code, x + symbol.xShift, curY);\n                symbol.glyph.render(ctx, x + symbol.xShift, curY);\n            }\n            else if (symbol.symbolType === SymbolTypes.LINE) {\n                L('Rendering Line : ', symbol.width, x, curY);\n                ctx.beginPath();\n                ctx.setLineWidth(1); // ?\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + symbol.width, curY);\n                ctx.stroke();\n            }\n            x += symbol.width;\n            if (symbol.vAlign) {\n                x += symbol.xShift;\n            }\n        });\n        ctx.closeGroup();\n        this.restoreStyle();\n        ctx.restore();\n    }\n}\nChordSymbol.DEBUG = false;\n// Chord symbols can be positioned and justified relative to the note.\nChordSymbol.HorizontalJustify = ChordSymbolHorizontalJustify;\nChordSymbol.HorizontalJustifyString = {\n    left: ChordSymbolHorizontalJustify.LEFT,\n    right: ChordSymbolHorizontalJustify.RIGHT,\n    center: ChordSymbolHorizontalJustify.CENTER,\n    centerStem: ChordSymbolHorizontalJustify.CENTER_STEM,\n};\nChordSymbol.VerticalJustify = ChordSymbolVerticalJustify;\nChordSymbol.VerticalJustifyString = {\n    top: ChordSymbolVerticalJustify.TOP,\n    above: ChordSymbolVerticalJustify.TOP,\n    below: ChordSymbolVerticalJustify.BOTTOM,\n    bottom: ChordSymbolVerticalJustify.BOTTOM,\n};\n// Glyph data\nChordSymbol.glyphs = {\n    diminished: {\n        code: 'csymDiminished',\n    },\n    dim: {\n        code: 'csymDiminished',\n    },\n    halfDiminished: {\n        code: 'csymHalfDiminished',\n    },\n    '+': {\n        code: 'csymAugmented',\n    },\n    augmented: {\n        code: 'csymAugmented',\n    },\n    majorSeventh: {\n        code: 'csymMajorSeventh',\n    },\n    minor: {\n        code: 'csymMinor',\n    },\n    '-': {\n        code: 'csymMinor',\n    },\n    '(': {\n        code: 'csymParensLeftTall',\n    },\n    leftParen: {\n        code: 'csymParensLeftTall',\n    },\n    ')': {\n        code: 'csymParensRightTall',\n    },\n    rightParen: {\n        code: 'csymParensRightTall',\n    },\n    leftBracket: {\n        code: 'csymBracketLeftTall',\n    },\n    rightBracket: {\n        code: 'csymBracketRightTall',\n    },\n    leftParenTall: {\n        code: 'csymParensLeftVeryTall',\n    },\n    rightParenTall: {\n        code: 'csymParensRightVeryTall',\n    },\n    '/': {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    over: {\n        code: 'csymDiagonalArrangementSlash',\n    },\n    '#': {\n        code: 'accidentalSharp',\n    },\n    b: {\n        code: 'accidentalFlat',\n    },\n};\nChordSymbol.symbolTypes = SymbolTypes;\nChordSymbol.symbolModifiers = SymbolModifiers;\n/** Currently unused. */\nChordSymbol.noFormat = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Note } from './note';\nimport { Barline, BarlineType } from './stavebarline';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (BarNote.DEBUG)\n        log('Vex.Flow.BarNote', args);\n}\n/**\n * A `BarNote` is used to render bar lines (from `barline.ts`). `BarNote`s can\n * be added to a voice and rendered in the middle of a stave. Since it has no\n * duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n *\n * See `tests/barnote_tests.ts` for usage examples.\n */\nexport class BarNote extends Note {\n    static get CATEGORY() {\n        return Category.BarNote;\n    }\n    constructor(type = BarlineType.SINGLE) {\n        super({ duration: 'b' });\n        this.metrics = {\n            widths: {},\n        };\n        const TYPE = BarlineType;\n        this.metrics.widths = {\n            [TYPE.SINGLE]: 8,\n            [TYPE.DOUBLE]: 12,\n            [TYPE.END]: 15,\n            [TYPE.REPEAT_BEGIN]: 14,\n            [TYPE.REPEAT_END]: 14,\n            [TYPE.REPEAT_BOTH]: 18,\n            [TYPE.NONE]: 0,\n        };\n        // Tell the formatter that bar notes have no duration.\n        this.ignore_ticks = true;\n        this.setType(type);\n        this.barline = new Barline(type);\n    }\n    /** Get the type of bar note.*/\n    getType() {\n        return this.type;\n    }\n    /** Set the type of bar note. */\n    setType(type) {\n        this.type = typeof type === 'string' ? Barline.typeString[type] : type;\n        // Set width to width of relevant `Barline`.\n        this.setWidth(this.metrics.widths[this.type]);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    /** Overridden to ignore. */\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render note to stave. */\n    draw() {\n        const ctx = this.checkContext();\n        L('Rendering bar line at: ', this.getAbsoluteX());\n        this.applyStyle(ctx);\n        ctx.openGroup('barnote', this.getAttribute('id'));\n        this.barline.setType(this.type);\n        this.barline.setX(this.getAbsoluteX());\n        this.barline.draw(this.checkStave());\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n        this.setRendered();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`. */\nBarNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { TextFormatter } from './textformatter';\nimport { Category, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\n/** Bend implements tablature bends. */\nexport class Bend extends Modifier {\n    static get CATEGORY() {\n        return Category.Bend;\n    }\n    static get UP() {\n        return 0;\n    }\n    static get DOWN() {\n        return 1;\n    }\n    // Arrange bends in `ModifierContext`\n    static format(bends, state) {\n        if (!bends || bends.length === 0)\n            return false;\n        let last_width = 0;\n        // Format Bends\n        for (let i = 0; i < bends.length; ++i) {\n            const bend = bends[i];\n            const note = bend.checkAttachedNote();\n            if (isTabNote(note)) {\n                const stringPos = note.leastString() - 1;\n                if (state.top_text_line < stringPos) {\n                    state.top_text_line = stringPos;\n                }\n            }\n            bend.setXShift(last_width);\n            last_width = bend.getWidth();\n            bend.setTextLine(state.top_text_line);\n        }\n        state.right_shift += last_width;\n        state.top_text_line += 1;\n        return true;\n    }\n    /**\n     * Example of a phrase:\n     * ```\n     *    [{\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"half\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: UP,\n     *     text: \"whole\"\n     *     width: 8;\n     *   },\n     *   {\n     *     type: DOWN,\n     *     text: \"1 1/2\"\n     *     width: 8;\n     *   }]\n     * ```\n     * @param text text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n     * @param release if true, render a release. (DEPRECATED)\n     * @param phrase if set, ignore \"text\" and \"release\", and use the more sophisticated phrase specified\n     */\n    constructor(text, release = false, phrase) {\n        super();\n        this.text = text;\n        this.x_shift = 0;\n        this.release = release;\n        this.tap = '';\n        this.resetFont();\n        this.render_options = {\n            line_width: 1.5,\n            line_style: '#777777',\n            bend_width: 8,\n            release_width: 8,\n        };\n        if (phrase) {\n            this.phrase = phrase;\n        }\n        else {\n            // Backward compatibility\n            this.phrase = [{ type: Bend.UP, text: this.text }];\n            if (this.release)\n                this.phrase.push({ type: Bend.DOWN, text: '' });\n        }\n        this.updateWidth();\n    }\n    /** Set horizontal shift in pixels. */\n    setXShift(value) {\n        this.x_shift = value;\n        this.updateWidth();\n        return this;\n    }\n    setTap(value) {\n        this.tap = value;\n        return this;\n    }\n    /** Get text provided in the constructor. */\n    getText() {\n        return this.text;\n    }\n    getTextHeight() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        return textFormatter.maxHeight;\n    }\n    /** Recalculate width. */\n    updateWidth() {\n        const textFormatter = TextFormatter.create(this.textFont);\n        const measureText = (text) => {\n            return textFormatter.getWidthForTextInPx(text);\n        };\n        let totalWidth = 0;\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (bend.width !== undefined) {\n                totalWidth += bend.width;\n            }\n            else {\n                const additional_width = bend.type === Bend.UP ? this.render_options.bend_width : this.render_options.release_width;\n                bend.width = Math.max(additional_width, measureText(bend.text)) + 3;\n                bend.draw_width = bend.width / 2;\n                totalWidth += bend.width;\n            }\n        }\n        this.setWidth(totalWidth + this.x_shift);\n        return this;\n    }\n    /** Draw the bend on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        start.x += 3;\n        start.y += 0.5;\n        const x_shift = this.x_shift;\n        const stave = note.checkStave();\n        const spacing = stave.getSpacingBetweenLines();\n        const lowestY = note.getYs().reduce((a, b) => (a < b ? a : b));\n        // this.text_line is relative to top string in the group.\n        const bend_height = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) + 3;\n        const annotation_y = start.y - ((this.text_line + 1) * spacing + start.y - lowestY) - 1;\n        const renderBend = (x, y, width, height) => {\n            const cp_x = x + width;\n            const cp_y = y;\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, y);\n            ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderRelease = (x, y, width, height) => {\n            ctx.save();\n            ctx.beginPath();\n            ctx.setLineWidth(this.render_options.line_width);\n            ctx.setStrokeStyle(this.render_options.line_style);\n            ctx.setFillStyle(this.render_options.line_style);\n            ctx.moveTo(x, height);\n            ctx.quadraticCurveTo(x + width, height, x + width, y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        const renderArrowHead = (x, y, direction) => {\n            const width = 4;\n            const yBase = y + width * direction;\n            ctx.beginPath();\n            ctx.moveTo(x, y); // tip of the arrow\n            ctx.lineTo(x - width, yBase);\n            ctx.lineTo(x + width, yBase);\n            ctx.closePath();\n            ctx.fill();\n        };\n        const renderText = (x, text) => {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const render_x = x - ctx.measureText(text).width / 2;\n            ctx.fillText(text, render_x, annotation_y);\n            ctx.restore();\n        };\n        let last_bend = undefined;\n        let last_bend_draw_width = 0;\n        let last_drawn_width = 0;\n        if ((_a = this.tap) === null || _a === void 0 ? void 0 : _a.length) {\n            const tapStart = note.getModifierStartXY(Modifier.Position.CENTER, this.index);\n            renderText(tapStart.x, this.tap);\n        }\n        for (let i = 0; i < this.phrase.length; ++i) {\n            const bend = this.phrase[i];\n            if (!bend.draw_width)\n                bend.draw_width = 0;\n            if (i === 0)\n                bend.draw_width += x_shift;\n            last_drawn_width = bend.draw_width + last_bend_draw_width - (i === 1 ? x_shift : 0);\n            if (bend.type === Bend.UP) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderArrowHead(start.x, bend_height, +1);\n                }\n                renderBend(start.x, start.y, last_drawn_width, bend_height);\n            }\n            if (bend.type === Bend.DOWN) {\n                if (last_bend && last_bend.type === Bend.UP) {\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (last_bend && last_bend.type === Bend.DOWN) {\n                    renderArrowHead(start.x, start.y, -1);\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n                if (!last_bend) {\n                    last_drawn_width = bend.draw_width;\n                    renderRelease(start.x, start.y, last_drawn_width, bend_height);\n                }\n            }\n            renderText(start.x + last_drawn_width, bend.text);\n            last_bend = bend;\n            last_bend_draw_width = bend.draw_width;\n            last_bend.x = start.x;\n            start.x += last_drawn_width;\n        }\n        if (!last_bend || last_bend.x == undefined) {\n            throw new RuntimeError('NoLastBendForBend', 'Internal error.');\n        }\n        // Final arrowhead and text\n        if (last_bend.type === Bend.UP) {\n            renderArrowHead(last_bend.x + last_drawn_width, bend_height, +1);\n        }\n        else if (last_bend.type === Bend.DOWN) {\n            renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n        }\n    }\n}\n/** Default text font. */\nBend.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\nimport { Modifier } from './modifier';\nimport { Category, isGraceNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Dot extends Modifier {\n    static get CATEGORY() {\n        return Category.Dot;\n    }\n    /** Returns the dots associated to a Note. */\n    static getDots(note) {\n        return note.getModifiersByType(Dot.CATEGORY);\n    }\n    /** Add a dot on the specified keys to the notes. */\n    static buildAndAttach(notes, options) {\n        for (const note of notes) {\n            if (options === null || options === void 0 ? void 0 : options.all) {\n                for (let i = 0; i < note.keys.length; i++) {\n                    const dot = new Dot();\n                    dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                    note.addModifier(dot, i);\n                }\n            }\n            else if ((options === null || options === void 0 ? void 0 : options.index) != undefined) {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, options === null || options === void 0 ? void 0 : options.index);\n            }\n            else {\n                const dot = new Dot();\n                dot.setDotShiftY(note.glyphProps.dot_shiftY);\n                note.addModifier(dot, 0);\n            }\n        }\n    }\n    // Arrange dots inside a ModifierContext.\n    static format(dots, state) {\n        const right_shift = state.right_shift;\n        const dot_spacing = 1;\n        if (!dots || dots.length === 0)\n            return false;\n        const dot_list = [];\n        const max_shift_map = {};\n        for (let i = 0; i < dots.length; ++i) {\n            const dot = dots[i];\n            const note = dot.getNote();\n            let props;\n            let shift;\n            if (isStaveNote(note)) {\n                const index = dot.checkIndex();\n                props = note.getKeyProps()[index];\n                // consider right displaced head with no previous modifier\n                shift = note.getFirstDotPx();\n            }\n            else if (isTabNote(note)) {\n                props = { line: 0.5 }; // Shim key props for dot placement\n                shift = right_shift;\n            }\n            else {\n                // note object is not StaveNote or TabNote.\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n            const note_id = note.getAttribute('id');\n            dot_list.push({ line: props.line, note, note_id, dot });\n            max_shift_map[note_id] = Math.max(max_shift_map[note_id] || shift, shift);\n        }\n        // Sort dots by line number.\n        dot_list.sort((a, b) => b.line - a.line);\n        let dot_shift = right_shift;\n        let x_width = 0;\n        let last_line = null;\n        let last_note = null;\n        let prev_dotted_space = null;\n        let half_shiftY = 0;\n        for (let i = 0; i < dot_list.length; ++i) {\n            const { dot, note, note_id, line } = dot_list[i];\n            // Reset the position of the dot every line.\n            if (line !== last_line || note !== last_note) {\n                dot_shift = max_shift_map[note_id];\n            }\n            if (!note.isRest() && line !== last_line) {\n                if (Math.abs(line % 1) === 0.5) {\n                    // note is on a space, so no dot shift\n                    half_shiftY = 0;\n                }\n                else {\n                    // note is on a line, so shift dot to space above the line\n                    half_shiftY = 0.5;\n                    if (last_note != null && !last_note.isRest() && last_line != null && last_line - line === 0.5) {\n                        // previous note on a space, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                    else if (line + half_shiftY === prev_dotted_space) {\n                        // previous space is dotted, so shift dot to space below the line\n                        half_shiftY = -0.5;\n                    }\n                }\n            }\n            // convert half_shiftY to a multiplier for dots.draw()\n            if (note.isRest()) {\n                dot.dot_shiftY += -half_shiftY;\n            }\n            else {\n                dot.dot_shiftY = -half_shiftY;\n            }\n            prev_dotted_space = line + half_shiftY;\n            dot.setXShift(dot_shift);\n            dot_shift += dot.getWidth() + dot_spacing; // spacing\n            x_width = dot_shift > x_width ? dot_shift : x_width;\n            last_line = line;\n            last_note = note;\n        }\n        // Update state.\n        state.right_shift += x_width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.radius = 2;\n        this.setWidth(5);\n        this.dot_shiftY = 0;\n    }\n    setNote(note) {\n        this.note = note;\n        if (isGraceNote(note)) {\n            this.radius *= 0.5;\n            this.setWidth(3);\n        }\n        return this;\n    }\n    setDotShiftY(y) {\n        this.dot_shiftY = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stave = note.checkStave();\n        const lineSpace = stave.getSpacingBetweenLines();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        // Set the starting y coordinate to the base of the stem for TabNotes.\n        if (isTabNote(note)) {\n            start.y = note.getStemExtents().baseY;\n        }\n        const x = start.x + this.x_shift + this.width - this.radius;\n        const y = start.y + this.y_shift + this.dot_shiftY * lineSpace;\n        ctx.beginPath();\n        ctx.arc(x, y, this.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class FretHandFinger extends Modifier {\n    static get CATEGORY() {\n        return Category.FretHandFinger;\n    }\n    // Arrange fingerings inside a ModifierContext.\n    static format(nums, state) {\n        const { left_shift, right_shift } = state;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let shiftLeft = 0;\n        let shiftRight = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const textFormatter = TextFormatter.create(num.textFont);\n            const textHeight = textFormatter.maxHeight;\n            if (num.position === ModifierPosition.ABOVE) {\n                state.top_text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (num.position === ModifierPosition.BELOW) {\n                state.text_line += textHeight / Tables.STAVE_LINE_DISTANCE + 0.5;\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (left_shift === 0) {\n                        shiftLeft = Math.max(note.getLeftDisplacedHeadPx(), shiftLeft);\n                    }\n                    if (right_shift === 0) {\n                        shiftRight = Math.max(note.getRightDisplacedHeadPx(), shiftRight);\n                    }\n                }\n                prev_note = note;\n            }\n            nums_list.push({\n                note,\n                num,\n                pos,\n                line: props.line,\n                shiftL: shiftLeft,\n                shiftR: shiftRight,\n            });\n        }\n        // Sort fingernumbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let numShiftL = 0;\n        let numShiftR = 0;\n        let xWidthL = 0;\n        let xWidthR = 0;\n        let lastLine = null;\n        let lastNote = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            let num_shift = 0;\n            const { note, pos, num, line, shiftL, shiftR } = nums_list[i];\n            // Reset the position of the string number every line.\n            if (line !== lastLine || note !== lastNote) {\n                numShiftL = left_shift + shiftL;\n                numShiftR = right_shift + shiftR;\n            }\n            const numWidth = num.getWidth() + num_spacing;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + numShiftL);\n                num_shift = left_shift + numWidth; // spacing\n                xWidthL = num_shift > xWidthL ? num_shift : xWidthL;\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(numShiftR);\n                num_shift = shiftRight + numWidth; // spacing\n                xWidthR = num_shift > xWidthR ? num_shift : xWidthR;\n            }\n            lastLine = line;\n            lastNote = note;\n        }\n        state.left_shift += xWidthL;\n        state.right_shift += xWidthR;\n        return true;\n    }\n    static easyScoreHook({ fingerings } = {}, note, builder) {\n        fingerings === null || fingerings === void 0 ? void 0 : fingerings.split(',').map((fingeringString) => {\n            const split = fingeringString.trim().split('.');\n            const params = { number: split[0] };\n            if (split[1])\n                params.position = split[1];\n            return builder.getFactory().Fingering(params);\n        }).map((fingering, index) => note.addModifier(fingering, index));\n    }\n    constructor(finger) {\n        super();\n        this.finger = finger;\n        this.width = 7;\n        this.position = Modifier.Position.LEFT; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.resetFont();\n    }\n    setFretHandFinger(finger) {\n        this.finger = finger;\n        return this;\n    }\n    getFretHandFinger() {\n        return this.finger;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let dot_y = start.y + this.y_shift + this.y_offset + 5;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                dot_x -= 4;\n                dot_y -= 12;\n                break;\n            case Modifier.Position.BELOW:\n                dot_x -= 2;\n                dot_y += 10;\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.width;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += 1;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} does not exist`);\n        }\n        ctx.save();\n        ctx.setFont(this.textFont);\n        ctx.fillText('' + this.finger, dot_x, dot_y);\n        ctx.restore();\n    }\n}\nFretHandFinger.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (NoteHead.DEBUG)\n        log('Vex.Flow.NoteHead', args);\n}\n/**\n * Draw slashnote head manually. No glyph exists for this.\n * @param ctx the Canvas context\n * @param duration the duration of the note. ex: \"4\"\n * @param x the x coordinate to draw at\n * @param y the y coordinate to draw at\n * @param stem_direction the direction of the stem\n */\nfunction drawSlashNoteHead(ctx, duration, x, y, stem_direction, staveSpace) {\n    const width = Tables.SLASH_NOTEHEAD_WIDTH;\n    ctx.save();\n    ctx.setLineWidth(Tables.STEM_WIDTH);\n    let fill = false;\n    if (Tables.durationToNumber(duration) > 2) {\n        fill = true;\n    }\n    if (!fill)\n        x -= (Tables.STEM_WIDTH / 2) * stem_direction;\n    ctx.beginPath();\n    ctx.moveTo(x, y + staveSpace);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - staveSpace);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + staveSpace);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    else {\n        ctx.stroke();\n    }\n    if (Tables.durationToFraction(duration).equals(0.5)) {\n        const breve_lines = [-3, -1, width + 1, width + 3];\n        for (let i = 0; i < breve_lines.length; i++) {\n            ctx.beginPath();\n            ctx.moveTo(x + breve_lines[i], y - 10);\n            ctx.lineTo(x + breve_lines[i], y + 11);\n            ctx.stroke();\n        }\n    }\n    ctx.restore();\n}\n/**\n * `NoteHeads` are typically not manipulated\n * directly, but used internally in `StaveNote`.\n *\n * See `tests/notehead_tests.ts` for usage examples.\n */\nexport class NoteHead extends Note {\n    static get CATEGORY() {\n        return Category.NoteHead;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.custom_glyph = false;\n        this.stem_up_x_offset = 0;\n        this.stem_down_x_offset = 0;\n        this.index = noteStruct.index;\n        this.x = noteStruct.x || 0;\n        this.y = noteStruct.y || 0;\n        if (noteStruct.note_type)\n            this.noteType = noteStruct.note_type;\n        this.displaced = noteStruct.displaced || false;\n        this.stem_direction = noteStruct.stem_direction || Stem.UP;\n        this.line = noteStruct.line || 0;\n        // Get glyph code based on duration and note type. This could be\n        // regular notes, rests, or other custom codes.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // Swap out the glyph with ledger lines\n        if ((this.line > 5 || this.line < 0) && this.glyphProps.ledger_code_head) {\n            this.glyphProps.code_head = this.glyphProps.ledger_code_head;\n        }\n        this.glyph_code = this.glyphProps.code_head;\n        this.x_shift = noteStruct.x_shift || 0;\n        if (noteStruct.custom_glyph_code) {\n            this.custom_glyph = true;\n            this.glyph_code = noteStruct.custom_glyph_code;\n            this.stem_up_x_offset = noteStruct.stem_up_x_offset || 0;\n            this.stem_down_x_offset = noteStruct.stem_down_x_offset || 0;\n        }\n        this.setStyle(noteStruct.style);\n        this.slashed = noteStruct.slashed || false;\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE });\n        this.setWidth(this.custom_glyph &&\n            !this.glyph_code.startsWith('noteheadSlashed') &&\n            !this.glyph_code.startsWith('noteheadCircled')\n            ? Glyph.getWidth(this.glyph_code, this.render_options.glyph_font_scale)\n            : this.glyphProps.getWidth(this.render_options.glyph_font_scale));\n    }\n    /** Get the width of the notehead. */\n    getWidth() {\n        return this.width;\n    }\n    /** Determine if the notehead is displaced. */\n    isDisplaced() {\n        return this.displaced === true;\n    }\n    /** Set the X coordinate. */\n    setX(x) {\n        this.x = x;\n        return this;\n    }\n    /** Get the Y coordinate. */\n    getY() {\n        return this.y;\n    }\n    /** Set the Y coordinate. */\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    /** Get the stave line the notehead is placed on. */\n    getLine() {\n        return this.line;\n    }\n    /** Set the stave line the notehead is placed on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Get the canvas `x` coordinate position of the notehead. */\n    getAbsoluteX() {\n        // If the note has not been preformatted, then get the static x value\n        // Otherwise, it's been formatted and we should use it's x value relative\n        // to its tick context\n        const x = !this.preFormatted ? this.x : super.getAbsoluteX();\n        // For a more natural displaced notehead, we adjust the displacement amount\n        // by half the stem width in order to maintain a slight overlap with the stem\n        const displacementStemAdjustment = Stem.WIDTH / 2;\n        const musicFont = Tables.currentMusicFont();\n        const fontShift = musicFont.lookupMetric('notehead.shiftX', 0) * this.stem_direction;\n        const displacedFontShift = musicFont.lookupMetric('noteHead.displacedShiftX', 0) * this.stem_direction;\n        return (x +\n            fontShift +\n            (this.displaced ? (this.width - displacementStemAdjustment) * this.stem_direction + displacedFontShift : 0));\n    }\n    /** Get the `BoundingBox` for the `NoteHead`. */\n    getBoundingBox() {\n        const spacing = this.checkStave().getSpacingBetweenLines();\n        const half_spacing = spacing / 2;\n        const min_y = this.y - half_spacing;\n        return new BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    }\n    /** Set notehead to a provided `stave`. */\n    setStave(stave) {\n        const line = this.getLine();\n        this.stave = stave;\n        if (this.stave) {\n            this.setY(this.stave.getYForNote(line));\n            this.setContext(this.stave.getContext());\n        }\n        return this;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const width = this.getWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx;\n        this.setWidth(width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the notehead. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let head_x = this.getAbsoluteX();\n        if (this.custom_glyph) {\n            // head_x += this.x_shift;\n            head_x +=\n                this.stem_direction === Stem.UP\n                    ? this.stem_up_x_offset +\n                        (this.glyphProps.stem ? this.glyphProps.getWidth(this.render_options.glyph_font_scale) - this.width : 0)\n                    : this.stem_down_x_offset;\n        }\n        const y = this.y;\n        L(\"Drawing note head '\", this.noteType, this.duration, \"' at\", head_x, y);\n        // Begin and end positions for head.\n        const stem_direction = this.stem_direction;\n        const glyph_font_scale = this.render_options.glyph_font_scale;\n        const categorySuffix = `${this.glyph_code}Stem${stem_direction === Stem.UP ? 'Up' : 'Down'}`;\n        if (this.noteType === 's') {\n            const staveSpace = this.checkStave().getSpacingBetweenLines();\n            drawSlashNoteHead(ctx, this.duration, head_x, y, stem_direction, staveSpace);\n        }\n        else {\n            Glyph.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code, {\n                category: `noteHead.${categorySuffix}`,\n            });\n        }\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`. */\nNoteHead.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StemmableNote extends Note {\n    static get CATEGORY() {\n        return Category.StemmableNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n    }\n    // Get and set the note's `Stem`\n    getStem() {\n        return this.stem;\n    }\n    checkStem() {\n        if (!this.stem) {\n            throw new RuntimeError('NoStem', 'No stem attached to instance');\n        }\n        return this.stem;\n    }\n    setStem(stem) {\n        this.stem = stem;\n        this.addChildElement(stem);\n        return this;\n    }\n    // Builds and sets a new stem\n    buildStem() {\n        const stem = new Stem();\n        this.setStem(stem);\n        return this;\n    }\n    buildFlag(category = 'flag') {\n        const { glyphProps } = this;\n        if (this.hasFlag()) {\n            const flagCode = this.getStemDirection() === Stem.DOWN ? glyphProps.code_flag_downstem : glyphProps.code_flag_upstem;\n            if (flagCode)\n                this.flag = new Glyph(flagCode, this.render_options.glyph_font_scale, { category });\n        }\n    }\n    // Get the custom glyph associated with the outer note head on the base of the stem.\n    getBaseCustomNoteHeadGlyphProps() {\n        if (this.getStemDirection() === Stem.DOWN) {\n            return this.customGlyphs[this.customGlyphs.length - 1];\n        }\n        else {\n            return this.customGlyphs[0];\n        }\n    }\n    // Get the full length of stem\n    getStemLength() {\n        return Stem.HEIGHT + this.getStemExtension();\n    }\n    // Get the number of beams for this duration\n    getBeamCount() {\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            return glyphProps.beam_count;\n        }\n        else {\n            return 0;\n        }\n    }\n    // Get the minimum length of stem\n    getStemMinimumLength() {\n        const frac = Tables.durationToFraction(this.duration);\n        let length = frac.value() <= 1 ? 0 : 20;\n        // if note is flagged, cannot shorten beam\n        switch (this.duration) {\n            case '8':\n                if (this.beam == undefined)\n                    length = 35;\n                break;\n            case '16':\n                length = this.beam == undefined ? 35 : 25;\n                break;\n            case '32':\n                length = this.beam == undefined ? 45 : 35;\n                break;\n            case '64':\n                length = this.beam == undefined ? 50 : 40;\n                break;\n            case '128':\n                length = this.beam == undefined ? 55 : 45;\n                break;\n            default:\n                break;\n        }\n        return length;\n    }\n    // Get/set the direction of the stem\n    getStemDirection() {\n        if (!this.stem_direction)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem_direction;\n    }\n    setStemDirection(direction) {\n        if (!direction)\n            direction = Stem.UP;\n        if (direction !== Stem.UP && direction !== Stem.DOWN) {\n            throw new RuntimeError('BadArgument', `Invalid stem direction: ${direction}`);\n        }\n        this.stem_direction = direction;\n        // Reset and reformat everything. Flag has to be built before calling getStemExtension.\n        this.reset();\n        if (this.hasFlag()) {\n            this.buildFlag();\n        }\n        this.beam = undefined;\n        if (this.stem) {\n            this.stem.setDirection(direction);\n            this.stem.setExtension(this.getStemExtension());\n            // Lookup the base custom notehead (closest to the base of the stem) to extend or shorten\n            // the stem appropriately. If there's no custom note head, lookup the standard notehead.\n            const glyphProps = this.getBaseCustomNoteHeadGlyphProps() || this.getGlyphProps();\n            // Get the font-specific customizations for the note heads.\n            const offsets = Tables.currentMusicFont().lookupMetric(`stem.noteHead.${glyphProps.code_head}`, {\n                offsetYBaseStemUp: 0,\n                offsetYTopStemUp: 0,\n                offsetYBaseStemDown: 0,\n                offsetYTopStemDown: 0,\n            });\n            // Configure the stem to use these offsets.\n            this.stem.setOptions({\n                stem_up_y_offset: offsets.offsetYTopStemUp,\n                stem_down_y_offset: offsets.offsetYTopStemDown,\n                stem_up_y_base_offset: offsets.offsetYBaseStemUp,\n                stem_down_y_base_offset: offsets.offsetYBaseStemDown, // glyph.stem_down_y_base_offset,\n            });\n        }\n        if (this.preFormatted) {\n            this.preFormat();\n        }\n        return this;\n    }\n    // Get the `x` coordinate of the stem\n    getStemX() {\n        const x_begin = this.getAbsoluteX() + this.x_shift;\n        const x_end = this.getAbsoluteX() + this.x_shift + this.getGlyphWidth();\n        const stem_x = this.stem_direction === Stem.DOWN ? x_begin : x_end;\n        return stem_x;\n    }\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX() {\n        return this.getAbsoluteX() + this.x_shift + this.getGlyphWidth() / 2;\n    }\n    // Get the stem extension for the current duration\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != undefined) {\n            return this.stem_extension_override;\n        }\n        // Use stem_beam_extension with beams\n        if (this.beam) {\n            return glyphProps.stem_beam_extension;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP ? glyphProps.stem_up_extension : glyphProps.stem_down_extension;\n        }\n        return 0;\n    }\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength(height) {\n        this.stem_extension_override = height - Stem.HEIGHT;\n        return this;\n    }\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents() {\n        if (!this.stem)\n            throw new RuntimeError('NoStem', 'No stem attached to this note.');\n        return this.stem.getExtents();\n    }\n    /** Gets the `y` value for the top modifiers at a specific `textLine`. */\n    getYForTopText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.min(stave.getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n        }\n        else {\n            return stave.getYForTopText(textLine);\n        }\n    }\n    /** Gets the `y` value for the bottom modifiers at a specific `textLine`. */\n    getYForBottomText(textLine) {\n        const stave = this.checkStave();\n        if (this.hasStem()) {\n            const extents = this.getStemExtents();\n            if (!extents)\n                throw new RuntimeError('InvalidState', 'Stem does not have extents.');\n            return Math.max(stave.getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n        }\n        else {\n            return stave.getYForBottomText(textLine);\n        }\n    }\n    hasFlag() {\n        return Tables.getGlyphProps(this.duration).flag == true && !this.beam;\n    }\n    /** Post formats the note. */\n    postFormat() {\n        var _a;\n        (_a = this.beam) === null || _a === void 0 ? void 0 : _a.postFormat();\n        this.postFormatted = true;\n        return this;\n    }\n    /** Renders the stem onto the canvas. */\n    drawStem(stemOptions) {\n        var _a;\n        this.checkContext();\n        this.setRendered();\n        this.setStem(new Stem(stemOptions));\n        (_a = this.stem) === null || _a === void 0 ? void 0 : _a.setContext(this.getContext()).draw();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.\n//\n// See `tests/stavenote_tests.ts` for usage examples.\nimport { BoundingBox } from './boundingbox';\nimport { Modifier } from './modifier';\nimport { NoteHead } from './notehead';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, midLine, RuntimeError } from './util';\nfunction showDeprecationWarningForNoteHeads() {\n    // eslint-disable-next-line\n    console.warn('StaveNote.note_heads is deprecated. Use StaveNote.noteHeads instead.', 'This accessor will be removed in VexFlow 5.0.');\n}\n// To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (StaveNote.DEBUG)\n        log('Vex.Flow.StaveNote', args);\n}\nconst isInnerNoteIndex = (note, index) => index === (note.getStemDirection() === Stem.UP ? note.keyProps.length - 1 : 0);\n// Helper methods for rest positioning in ModifierContext.\nfunction shiftRestVertical(rest, note, dir) {\n    const delta = dir;\n    rest.line += delta;\n    rest.maxLine += delta;\n    rest.minLine += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + delta);\n}\n// Called from formatNotes :: center a rest between two notes\nfunction centerRest(rest, noteU, noteL) {\n    const delta = rest.line - midLine(noteU.minLine, noteL.maxLine);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.maxLine -= delta;\n    rest.minLine -= delta;\n}\nexport class StaveNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.StaveNote;\n    }\n    /**\n     * @deprecated Use Stem.UP.\n     */\n    static get STEM_UP() {\n        return Stem.UP;\n    }\n    /**\n     * @deprecated Use Stem.DOWN.\n     */\n    static get STEM_DOWN() {\n        return Stem.DOWN;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 3;\n    }\n    static get minNoteheadPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Format notes inside a ModifierContext. */\n    static format(notes, state) {\n        var _a, _b;\n        if (!notes || notes.length < 2)\n            return false;\n        const notesList = [];\n        for (let i = 0; i < notes.length; i++) {\n            // Formatting uses sortedKeyProps to calculate line and minL.\n            const props = notes[i].sortedKeyProps;\n            const line = props[0].keyProps.line;\n            let minL = props[props.length - 1].keyProps.line;\n            const stemDirection = notes[i].getStemDirection();\n            const stemMax = notes[i].getStemLength() / 10;\n            const stemMin = notes[i].getStemMinimumLength() / 10;\n            let maxL;\n            if (notes[i].isRest()) {\n                maxL = line + notes[i].glyphProps.line_above;\n                minL = line - notes[i].glyphProps.line_below;\n            }\n            else {\n                maxL =\n                    stemDirection === 1 ? props[props.length - 1].keyProps.line + stemMax : props[props.length - 1].keyProps.line;\n                minL = stemDirection === 1 ? props[0].keyProps.line : props[0].keyProps.line - stemMax;\n            }\n            notesList.push({\n                line: props[0].keyProps.line,\n                maxLine: maxL,\n                minLine: minL,\n                isrest: notes[i].isRest(),\n                stemDirection: stemDirection,\n                stemMax,\n                stemMin,\n                voice_shift: notes[i].getVoiceShiftWidth(),\n                is_displaced: notes[i].isDisplaced(),\n                note: notes[i],\n            });\n        }\n        let voices = 0;\n        let noteU = undefined;\n        let noteM = undefined;\n        let noteL = undefined;\n        const draw = [false, false, false];\n        for (let i = 0; i < notesList.length; i++) {\n            draw[i] = notesList[i].note.render_options.draw == false ? false : true;\n        }\n        if (draw[0] && draw[1] && draw[2]) {\n            // Three visible notes\n            voices = 3;\n            noteU = notesList[0];\n            noteM = notesList[1];\n            noteL = notesList[2];\n        }\n        else if (draw[0] && draw[1]) {\n            // Two visible notes, 0 & 1\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[1];\n        }\n        else if (draw[0] && draw[2]) {\n            // Two visible notes, 0 & 2\n            voices = 2;\n            noteU = notesList[0];\n            noteL = notesList[2];\n        }\n        else if (draw[1] && draw[2]) {\n            // Two visible notes, 1 & 2\n            voices = 2;\n            noteU = notesList[1];\n            noteL = notesList[2];\n        }\n        else {\n            // No shift required for less than 2 visible notes\n            return true;\n        }\n        // for two voice backward compatibility, ensure upper voice is stems up\n        // for three voices, the voices must be in order (upper, middle, lower)\n        if (voices === 2 && noteU.stemDirection === -1 && noteL.stemDirection === 1) {\n            noteU = notesList[1];\n            noteL = notesList[0];\n        }\n        const voiceXShift = Math.max(noteU.voice_shift, noteL.voice_shift);\n        let xShift = 0;\n        // Test for two voice note intersection\n        if (voices === 2) {\n            const lineSpacing = noteU.note.hasStem() && noteL.note.hasStem() && noteU.stemDirection === noteL.stemDirection ? 0.0 : 0.5;\n            if (noteL.isrest && noteU.isrest && noteU.note.duration === noteL.note.duration) {\n                noteL.note.render_options.draw = false;\n            }\n            else if (noteU.minLine <= noteL.maxLine + lineSpacing) {\n                if (noteU.isrest) {\n                    // shift rest up\n                    shiftRestVertical(noteU, noteL, 1);\n                }\n                else if (noteL.isrest) {\n                    // shift rest down\n                    shiftRestVertical(noteL, noteU, -1);\n                }\n                else {\n                    //Instead of shifting notes, remove the appropriate flag\n                    //If we are sharing a line, switch one notes stem direction.\n                    //If we are sharing a line and in the same voice, only then offset one note\n                    const lineDiff = Math.abs(noteU.line - noteL.line);\n                    if (noteU.note.hasStem() && noteL.note.hasStem()) {\n                        const noteUHead = Tables.codeNoteHead((_a = noteU.note.sortedKeyProps[0].keyProps.code) !== null && _a !== void 0 ? _a : 'N', noteU.note.duration);\n                        const noteLHead = Tables.codeNoteHead((_b = noteL.note.sortedKeyProps[noteL.note.sortedKeyProps.length - 1].keyProps.code) !== null && _b !== void 0 ? _b : 'N', noteL.note.duration);\n                        if (\n                        // If unison is not configured, shift\n                        !Tables.UNISON ||\n                            // If we have different noteheads, shift\n                            noteUHead !== noteLHead ||\n                            // If we have different dot values, shift\n                            noteU.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                .length !==\n                                noteL.note.getModifiers().filter((item) => item.getCategory() === Category.Dot && item.getIndex() === 0)\n                                    .length ||\n                            // If the notes are quite close but not on the same line, shift\n                            (lineDiff < 1 && lineDiff > 0) ||\n                            // If styles are different, shift\n                            JSON.stringify(noteU.note.getStyle()) !== JSON.stringify(noteL.note.getStyle())) {\n                            xShift = voiceXShift + 2;\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                // upper voice is middle voice, so shift it right\n                                noteU.note.setXShift(xShift);\n                            }\n                            else {\n                                // shift lower voice right\n                                noteL.note.setXShift(xShift);\n                            }\n                        }\n                        else if (noteU.note.voice !== noteL.note.voice) {\n                            //If we are not in the same voice\n                            if (noteU.stemDirection === noteL.stemDirection) {\n                                if (noteU.line != noteL.line) {\n                                    xShift = voiceXShift + 2;\n                                    noteU.note.setXShift(xShift);\n                                }\n                                else {\n                                    //same line, swap stem direction for one note\n                                    if (noteL.stemDirection === 1) {\n                                        noteL.stemDirection = -1;\n                                        noteL.note.setStemDirection(-1);\n                                    }\n                                }\n                            }\n                        } //Very close whole notes\n                    }\n                    else if (lineDiff < 1) {\n                        xShift = voiceXShift + 2;\n                        if (noteU.note.duration < noteL.note.duration) {\n                            // upper voice is shorter, so shift it right\n                            noteU.note.setXShift(xShift);\n                        }\n                        else {\n                            // shift lower voice right\n                            noteL.note.setXShift(xShift);\n                        }\n                    }\n                    else if (noteU.note.hasStem()) {\n                        noteU.stemDirection = -noteU.note.getStemDirection();\n                        noteU.note.setStemDirection(noteU.stemDirection);\n                    }\n                    else if (noteL.note.hasStem()) {\n                        noteL.stemDirection = -noteL.note.getStemDirection();\n                        noteL.note.setStemDirection(noteL.stemDirection);\n                    }\n                }\n            }\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        if (!noteM)\n            throw new RuntimeError('InvalidState', 'noteM not defined.');\n        // For three voices, test if rests can be repositioned\n        //\n        // Special case 1 :: middle voice rest between two notes\n        //\n        if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n            if (noteU.minLine <= noteM.maxLine || noteM.minLine <= noteL.maxLine) {\n                const restHeight = noteM.maxLine - noteM.minLine;\n                const space = noteU.minLine - noteL.maxLine;\n                if (restHeight < space) {\n                    // center middle voice rest between the upper and lower voices\n                    centerRest(noteM, noteU, noteL);\n                }\n                else {\n                    xShift = voiceXShift + 2; // shift middle rest right\n                    noteM.note.setXShift(xShift);\n                    if (noteL.note.hasBeam() === false) {\n                        noteL.stemDirection = -1;\n                        noteL.note.setStemDirection(-1);\n                    }\n                    if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                        noteU.stemDirection = 1;\n                        noteU.note.setStemDirection(1);\n                    }\n                }\n                // format complete\n                state.right_shift += xShift;\n                return true;\n            }\n        }\n        // Special case 2 :: all voices are rests\n        if (noteU.isrest && noteM.isrest && noteL.isrest) {\n            // Hide upper voice rest\n            noteU.note.render_options.draw = false;\n            // Hide lower voice rest\n            noteL.note.render_options.draw = false;\n            // format complete\n            state.right_shift += xShift;\n            return true;\n        }\n        // Test if any other rests can be repositioned\n        if (noteM.isrest && noteU.isrest && noteM.minLine <= noteL.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteM.isrest && noteL.isrest && noteU.minLine <= noteM.maxLine) {\n            // Hide middle voice rest\n            noteM.note.render_options.draw = false;\n        }\n        if (noteU.isrest && noteU.minLine <= noteM.maxLine) {\n            // shift upper voice rest up;\n            shiftRestVertical(noteU, noteM, 1);\n        }\n        if (noteL.isrest && noteM.minLine <= noteL.maxLine) {\n            // shift lower voice rest down\n            shiftRestVertical(noteL, noteM, -1);\n        }\n        // If middle voice intersects upper or lower voice\n        if (noteU.minLine <= noteM.maxLine + 0.5 || noteM.minLine <= noteL.maxLine) {\n            // shift middle note right\n            xShift = voiceXShift + 2;\n            noteM.note.setXShift(xShift);\n            if (noteL.note.hasBeam() === false) {\n                noteL.stemDirection = -1;\n                noteL.note.setStemDirection(-1);\n            }\n            if (noteU.minLine <= noteL.maxLine && noteU.note.hasBeam() === false) {\n                noteU.stemDirection = 1;\n                noteU.note.setStemDirection(1);\n            }\n        }\n        state.right_shift += xShift;\n        return true;\n    }\n    static postFormat(notes) {\n        if (!notes)\n            return false;\n        notes.forEach((note) => note.postFormat());\n        return true;\n    }\n    constructor(noteStruct) {\n        var _a, _b, _c;\n        super(noteStruct);\n        //////////////////////////////////////////////////////////////////////////////////////////////////\n        // INSTANCE MEMBERS\n        this.minLine = 0;\n        this.maxLine = 0;\n        // Sorted variant of keyProps used internally\n        this.sortedKeyProps = [];\n        this.ledgerLineStyle = {};\n        this.clef = (_a = noteStruct.clef) !== null && _a !== void 0 ? _a : 'treble';\n        this.octave_shift = (_b = noteStruct.octave_shift) !== null && _b !== void 0 ? _b : 0;\n        // Pull note rendering properties.\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        // if true, displace note to right\n        this.displaced = false;\n        this.dot_shiftY = 0;\n        // for displaced ledger lines\n        this.use_default_head_x = false;\n        // Drawing\n        this._noteHeads = [];\n        this.modifiers = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: noteStruct.glyph_font_scale || Tables.NOTATION_FONT_SCALE, \n            // number of stroke px to the left and right of head\n            stroke_px: noteStruct.stroke_px || StaveNote.LEDGER_LINE_OFFSET });\n        this.calculateKeyProps();\n        this.buildStem();\n        // Set the stem direction\n        if (noteStruct.auto_stem) {\n            this.autoStem();\n        }\n        else {\n            this.setStemDirection((_c = noteStruct.stem_direction) !== null && _c !== void 0 ? _c : Stem.UP);\n        }\n        this.reset();\n        this.buildFlag();\n    }\n    reset() {\n        super.reset();\n        // Save prior noteHead styles & reapply them after making new noteheads.\n        const noteHeadStyles = this._noteHeads.map((noteHead) => noteHead.getStyle());\n        this.buildNoteHeads();\n        this._noteHeads.forEach((noteHead, index) => {\n            const noteHeadStyle = noteHeadStyles[index];\n            if (noteHeadStyle)\n                noteHead.setStyle(noteHeadStyle);\n        });\n        const stave = this.stave;\n        if (stave) {\n            this.setStave(stave);\n        }\n        this.calcNoteDisplacements();\n        return this;\n    }\n    setBeam(beam) {\n        this.beam = beam;\n        this.calcNoteDisplacements();\n        // Update stem extension if a beam is assigned.\n        if (this.stem) {\n            this.stem.setExtension(this.getStemExtension());\n        }\n        return this;\n    }\n    // Builds a `Stem` for the note\n    buildStem() {\n        this.setStem(new Stem({ hide: !!this.isRest() }));\n        return this;\n    }\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads() {\n        this._noteHeads = [];\n        const stemDirection = this.getStemDirection();\n        const keys = this.getKeys();\n        let lastLine = undefined;\n        let lineDiff = undefined;\n        let displaced = false;\n        // Draw notes from bottom to top.\n        // For down-stem notes, we draw from top to bottom.\n        let start;\n        let end;\n        let step;\n        if (stemDirection === Stem.UP) {\n            start = 0;\n            end = keys.length;\n            step = 1;\n        }\n        else {\n            start = keys.length - 1;\n            end = -1;\n            step = -1;\n        }\n        for (let i = start; i !== end; i += step) {\n            // Building noteheads rely on sortedKeNotes in order to calculate the displacements\n            const noteProps = this.sortedKeyProps[i].keyProps;\n            const line = noteProps.line;\n            // Keep track of last line with a note head, so that consecutive heads\n            // are correctly displaced.\n            if (lastLine === undefined) {\n                lastLine = line;\n            }\n            else {\n                lineDiff = Math.abs(lastLine - line);\n                if (lineDiff === 0 || lineDiff === 0.5) {\n                    displaced = !displaced;\n                }\n                else {\n                    displaced = false;\n                    this.use_default_head_x = true;\n                }\n            }\n            lastLine = line;\n            const notehead = new NoteHead({\n                duration: this.duration,\n                note_type: this.noteType,\n                displaced,\n                stem_direction: stemDirection,\n                custom_glyph_code: noteProps.code,\n                glyph_font_scale: this.render_options.glyph_font_scale,\n                x_shift: noteProps.shift_right,\n                stem_up_x_offset: noteProps.stem_up_x_offset,\n                stem_down_x_offset: noteProps.stem_down_x_offset,\n                line: noteProps.line,\n            });\n            this.addChildElement(notehead);\n            this._noteHeads[this.sortedKeyProps[i].index] = notehead;\n        }\n        return this._noteHeads;\n    }\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem() {\n        this.setStemDirection(this.calculateOptimalStemDirection());\n    }\n    calculateOptimalStemDirection() {\n        // Figure out optimal stem direction based on given notes\n        // minLine & maxLine rely on sortedKeyProps\n        this.minLine = this.sortedKeyProps[0].keyProps.line;\n        this.maxLine = this.sortedKeyProps[this.keyProps.length - 1].keyProps.line;\n        const MIDDLE_LINE = 3;\n        const decider = (this.minLine + this.maxLine) / 2;\n        const stemDirection = decider < MIDDLE_LINE ? Stem.UP : Stem.DOWN;\n        return stemDirection;\n    }\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps() {\n        let lastLine;\n        for (let i = 0; i < this.keys.length; ++i) {\n            const key = this.keys[i];\n            // All rests use the same position on the line.\n            // if (this.glyph.rest) key = this.glyph.position;\n            if (this.glyphProps.rest)\n                this.glyphProps.position = key;\n            const options = { octave_shift: this.octave_shift || 0, duration: this.duration };\n            const props = Tables.keyProperties(key, this.clef, options);\n            if (!props) {\n                throw new RuntimeError('BadArguments', `Invalid key for note properties: ${key}`);\n            }\n            // Override line placement for default rests\n            if (props.key === 'R') {\n                if (this.duration === '1' || this.duration === 'w') {\n                    props.line = 4;\n                }\n                else {\n                    props.line = 3;\n                }\n            }\n            // Calculate displacement of this note\n            const line = props.line;\n            if (lastLine == undefined) {\n                lastLine = line;\n            }\n            else {\n                if (Math.abs(lastLine - line) === 0.5) {\n                    this.displaced = true;\n                    props.displaced = true;\n                    // Have to mark the previous note as\n                    // displaced as well, for modifier placement\n                    if (this.keyProps.length > 0) {\n                        this.keyProps[i - 1].displaced = true;\n                    }\n                }\n            }\n            lastLine = line;\n            this.keyProps.push(props);\n        }\n        // Sort the notes from lowest line to highest line in sortedKeyProps\n        // Warn no longer required as keyProps remains unsorted\n        this.keyProps.forEach((keyProps, index) => {\n            this.sortedKeyProps.push({ keyProps, index });\n        });\n        this.sortedKeyProps.sort((a, b) => a.keyProps.line - b.keyProps.line);\n    }\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox() {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call getBoundingBox on an unformatted note.\");\n        }\n        const { width: w, modLeftPx, leftDisplacedHeadPx } = this.getMetrics();\n        const x = this.getAbsoluteX() - modLeftPx - leftDisplacedHeadPx;\n        let minY = 0;\n        let maxY = 0;\n        const halfLineSpacing = ((_b = (_a = this.getStave()) === null || _a === void 0 ? void 0 : _a.getSpacingBetweenLines()) !== null && _b !== void 0 ? _b : 0) / 2;\n        const lineSpacing = halfLineSpacing * 2;\n        if (this.isRest()) {\n            const y = this.ys[0];\n            const frac = Tables.durationToFraction(this.duration);\n            if (frac.equals(1) || frac.equals(2)) {\n                minY = y - halfLineSpacing;\n                maxY = y + halfLineSpacing;\n            }\n            else {\n                minY = y - this.glyphProps.line_above * lineSpacing;\n                maxY = y + this.glyphProps.line_below * lineSpacing;\n            }\n        }\n        else if (this.glyphProps.stem) {\n            const ys = this.getStemExtents();\n            ys.baseY += halfLineSpacing * this.getStemDirection();\n            minY = Math.min(ys.topY, ys.baseY);\n            maxY = Math.max(ys.topY, ys.baseY);\n        }\n        else {\n            minY = 0;\n            maxY = 0;\n            for (let i = 0; i < this.ys.length; ++i) {\n                const yy = this.ys[i];\n                if (i === 0) {\n                    minY = yy;\n                    maxY = yy;\n                }\n                else {\n                    minY = Math.min(yy, minY);\n                    maxY = Math.max(yy, maxY);\n                }\n            }\n            minY -= halfLineSpacing;\n            maxY += halfLineSpacing;\n        }\n        return new BoundingBox(x, minY, w, maxY - minY);\n    }\n    // Gets the line number of the bottom note in the chord.\n    // If `isTopNote` is `true` then get the top note's line number instead\n    getLineNumber(isTopNote) {\n        if (!this.keyProps.length) {\n            throw new RuntimeError('NoKeyProps', \"Can't get bottom note line, because note is not initialized properly.\");\n        }\n        let resultLine = this.keyProps[0].line;\n        // No precondition assumed for sortedness of keyProps array\n        for (let i = 0; i < this.keyProps.length; i++) {\n            const thisLine = this.keyProps[i].line;\n            if (isTopNote) {\n                if (thisLine > resultLine)\n                    resultLine = thisLine;\n            }\n            else {\n                if (thisLine < resultLine)\n                    resultLine = thisLine;\n            }\n        }\n        return resultLine;\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return this.glyphProps.rest;\n    }\n    // Determine if the current note is a chord\n    isChord() {\n        return !this.isRest() && this.keys.length > 1;\n    }\n    // Determine if the `StaveNote` has a stem\n    hasStem() {\n        return this.glyphProps.stem;\n    }\n    hasFlag() {\n        return super.hasFlag() && !this.isRest();\n    }\n    getStemX() {\n        if (this.noteType === 'r') {\n            return this.getCenterGlyphX();\n        }\n        else {\n            // We adjust the origin of the stem because we want the stem left-aligned\n            // with the notehead if stemmed-down, and right-aligned if stemmed-up\n            return super.getStemX() + (this.stem_direction ? Stem.WIDTH / (2 * -this.stem_direction) : 0);\n        }\n    }\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.min(this.checkStave().getYForTopText(textLine), extents.topY - this.render_options.annotation_spacing * (textLine + 1));\n    }\n    getYForBottomText(textLine) {\n        const extents = this.getStemExtents();\n        return Math.max(this.checkStave().getYForTopText(textLine), extents.baseY + this.render_options.annotation_spacing * textLine);\n    }\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave(stave) {\n        super.setStave(stave);\n        const ys = this._noteHeads.map((notehead) => {\n            notehead.setStave(stave);\n            return notehead.getY();\n        });\n        this.setYs(ys);\n        if (this.stem) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            this.stem.setYBounds(y_top, y_bottom);\n        }\n        return this;\n    }\n    // Check if note is shifted to the right\n    isDisplaced() {\n        return this.displaced;\n    }\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced(displaced) {\n        this.displaced = displaced;\n        return this;\n    }\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX() {\n        let tieStartX = this.getAbsoluteX();\n        tieStartX += this.getGlyphWidth() + this.x_shift + this.rightDisplacedHeadPx;\n        if (this.modifierContext)\n            tieStartX += this.modifierContext.getRightShift();\n        return tieStartX;\n    }\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX() {\n        let tieEndX = this.getAbsoluteX();\n        tieEndX += this.x_shift - this.leftDisplacedHeadPx;\n        return tieEndX;\n    }\n    // Get the stave line on which to place a rest\n    getLineForRest() {\n        let restLine = this.keyProps[0].line;\n        if (this.keyProps.length > 1) {\n            const lastLine = this.keyProps[this.keyProps.length - 1].line;\n            const top = Math.max(restLine, lastLine);\n            const bot = Math.min(restLine, lastLine);\n            restLine = midLine(top, bot);\n        }\n        return restLine;\n    }\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY(position, index, options = {}) {\n        var _a, _b;\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        const { ABOVE, BELOW, LEFT, RIGHT } = Modifier.Position;\n        let x = 0;\n        if (position === LEFT) {\n            // FIXME: Left modifier padding, move to font file\n            x = -1 * 2;\n        }\n        else if (position === RIGHT) {\n            // FIXME: Right modifier padding, move to font file\n            x = this.getGlyphWidth() + this.x_shift + 2;\n            if (this.stem_direction === Stem.UP &&\n                this.hasFlag() &&\n                (options.forceFlagRight || isInnerNoteIndex(this, index))) {\n                x += (_b = (_a = this === null || this === void 0 ? void 0 : this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().width) !== null && _b !== void 0 ? _b : 0;\n            }\n        }\n        else if (position === BELOW || position === ABOVE) {\n            x = this.getGlyphWidth() / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Sets the style of the complete StaveNote, including all keys\n    // and the stem.\n    setStyle(style) {\n        return super.setGroupStyle(style);\n    }\n    setStemStyle(style) {\n        const stem = this.getStem();\n        if (stem)\n            stem.setStyle(style);\n        return this;\n    }\n    getStemStyle() {\n        var _a;\n        return (_a = this.stem) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    setLedgerLineStyle(style) {\n        this.ledgerLineStyle = style;\n    }\n    getLedgerLineStyle() {\n        return this.ledgerLineStyle;\n    }\n    setFlagStyle(style) {\n        var _a;\n        (_a = this.flag) === null || _a === void 0 ? void 0 : _a.setStyle(style);\n    }\n    getFlagStyle() {\n        var _a;\n        return (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getStyle();\n    }\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle(index, style) {\n        this._noteHeads[index].setStyle(style);\n        return this;\n    }\n    setKeyLine(index, line) {\n        this.keyProps[index].line = line;\n        this.reset();\n        return this;\n    }\n    getKeyLine(index) {\n        return this.keyProps[index].line;\n    }\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth() {\n        // TODO: may need to accommodate for dot here.\n        return this.getGlyphWidth() * (this.displaced ? 2 : 1);\n    }\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced.\n    calcNoteDisplacements() {\n        this.setLeftDisplacedHeadPx(this.displaced && this.stem_direction === Stem.DOWN ? this.getGlyphWidth() : 0);\n        // For upstems with flags, the extra space is unnecessary, since it's taken\n        // up by the flag.\n        this.setRightDisplacedHeadPx(!this.hasFlag() && this.displaced && this.stem_direction === Stem.UP ? this.getGlyphWidth() : 0);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        let noteHeadPadding = 0;\n        if (this.modifierContext) {\n            this.modifierContext.preFormat();\n            // If there are no modifiers on this note, make sure there is adequate padding\n            // between the notes.\n            if (this.modifierContext.getWidth() === 0) {\n                noteHeadPadding = StaveNote.minNoteheadPadding;\n            }\n        }\n        let width = this.getGlyphWidth() + this.leftDisplacedHeadPx + this.rightDisplacedHeadPx + noteHeadPadding;\n        // For upward flagged notes, the width of the flag needs to be added\n        if (this.shouldDrawFlag() && this.stem_direction === Stem.UP) {\n            width += this.getGlyphWidth();\n            // TODO: Add flag width as a separate metric\n        }\n        this.setWidth(width);\n        this.preFormatted = true;\n    }\n    /**\n     * @typedef {Object} noteHeadBounds\n     * @property {number} y_top the highest notehead bound\n     * @property {number} y_bottom the lowest notehead bound\n     * @property {number|Null} displaced_x the starting x for displaced noteheads\n     * @property {number|Null} non_displaced_x the starting x for non-displaced noteheads\n     * @property {number} highest_line the highest notehead line in traditional music line\n     *  numbering (bottom line = 1, top line = 5)\n     * @property {number} lowest_line the lowest notehead line\n     * @property {number|false} highest_displaced_line the highest staff line number\n     *   for a displaced notehead\n     * @property {number|false} lowest_displaced_line\n     * @property {number} highest_non_displaced_line\n     * @property {number} lowest_non_displaced_line\n     */\n    /**\n     * Get the staff line and y value for the highest & lowest noteheads\n     * @returns {noteHeadBounds}\n     */\n    getNoteHeadBounds() {\n        // Top and bottom Y values for stem.\n        let yTop = +Infinity;\n        let yBottom = -Infinity;\n        let nonDisplacedX;\n        let displacedX;\n        let highestLine = this.checkStave().getNumLines();\n        let lowestLine = 1;\n        let highestDisplacedLine;\n        let lowestDisplacedLine;\n        let highestNonDisplacedLine = highestLine;\n        let lowestNonDisplacedLine = lowestLine;\n        this._noteHeads.forEach((notehead) => {\n            const line = notehead.getLine();\n            const y = notehead.getY();\n            yTop = Math.min(y, yTop);\n            yBottom = Math.max(y, yBottom);\n            if (displacedX === undefined && notehead.isDisplaced()) {\n                displacedX = notehead.getAbsoluteX();\n            }\n            if (nonDisplacedX === undefined && !notehead.isDisplaced()) {\n                nonDisplacedX = notehead.getAbsoluteX();\n            }\n            highestLine = Math.max(line, highestLine);\n            lowestLine = Math.min(line, lowestLine);\n            if (notehead.isDisplaced()) {\n                highestDisplacedLine = highestDisplacedLine === undefined ? line : Math.max(line, highestDisplacedLine);\n                lowestDisplacedLine = lowestDisplacedLine === undefined ? line : Math.min(line, lowestDisplacedLine);\n            }\n            else {\n                highestNonDisplacedLine = Math.max(line, highestNonDisplacedLine);\n                lowestNonDisplacedLine = Math.min(line, lowestNonDisplacedLine);\n            }\n        }, this);\n        return {\n            y_top: yTop,\n            y_bottom: yBottom,\n            displaced_x: displacedX,\n            non_displaced_x: nonDisplacedX,\n            highest_line: highestLine,\n            lowest_line: lowestLine,\n            highest_displaced_line: highestDisplacedLine,\n            lowest_displaced_line: lowestDisplacedLine,\n            highest_non_displaced_line: highestNonDisplacedLine,\n            lowest_non_displaced_line: lowestNonDisplacedLine,\n        };\n    }\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX() {\n        return this.getAbsoluteX() + this.x_shift;\n    }\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX() {\n        const xBegin = this.getNoteHeadBeginX();\n        return xBegin + this.getGlyphWidth();\n    }\n    get noteHeads() {\n        return this._noteHeads.slice();\n    }\n    /** @deprecated use StaveNote.noteHeads instead. */\n    get note_heads() {\n        showDeprecationWarningForNoteHeads();\n        return this.noteHeads;\n    }\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines() {\n        const stave = this.checkStave();\n        const { glyphProps, render_options: { stroke_px }, } = this;\n        const ctx = this.checkContext();\n        const width = glyphProps.getWidth() + stroke_px * 2;\n        const doubleWidth = 2 * (glyphProps.getWidth() + stroke_px) - Stem.WIDTH / 2;\n        if (this.isRest())\n            return;\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        const { highest_line, lowest_line, highest_displaced_line, highest_non_displaced_line, lowest_displaced_line, lowest_non_displaced_line, displaced_x, non_displaced_x, } = this.getNoteHeadBounds();\n        // Early out if there are no ledger lines to draw.\n        if (highest_line < 6 && lowest_line > 0)\n            return;\n        const min_x = Math.min(displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0, non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0);\n        const drawLedgerLine = (y, normal, displaced) => {\n            let x;\n            if (displaced && normal)\n                x = min_x - stroke_px;\n            else if (normal)\n                x = (non_displaced_x !== null && non_displaced_x !== void 0 ? non_displaced_x : 0) - stroke_px;\n            else\n                x = (displaced_x !== null && displaced_x !== void 0 ? displaced_x : 0) - stroke_px;\n            const ledgerWidth = normal && displaced ? doubleWidth : width;\n            ctx.beginPath();\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + ledgerWidth, y);\n            ctx.stroke();\n        };\n        const style = Object.assign(Object.assign({}, stave.getDefaultLedgerLineStyle()), this.getLedgerLineStyle());\n        this.applyStyle(ctx, style);\n        // Draw ledger lines below the staff:\n        for (let line = 6; line <= highest_line; ++line) {\n            const normal = non_displaced_x !== undefined && line <= highest_non_displaced_line;\n            const displaced = highest_displaced_line !== undefined && line <= highest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        // Draw ledger lines above the staff:\n        for (let line = 0; line >= lowest_line; --line) {\n            const normal = non_displaced_x !== undefined && line >= lowest_non_displaced_line;\n            const displaced = lowest_displaced_line !== undefined && line >= lowest_displaced_line;\n            drawLedgerLine(stave.getYForNote(line), normal, displaced);\n        }\n        this.restoreStyle(ctx, style);\n    }\n    // Draw all key modifiers\n    drawModifiers(noteheadParam) {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            const index = modifier.checkIndex();\n            const notehead = this._noteHeads[index];\n            if (notehead == noteheadParam) {\n                const noteheadStyle = notehead.getStyle();\n                notehead.applyStyle(ctx, noteheadStyle);\n                modifier.setContext(ctx);\n                modifier.drawWithStyle();\n                notehead.restoreStyle(ctx, noteheadStyle);\n            }\n        }\n    }\n    shouldDrawFlag() {\n        const hasStem = this.stem !== undefined;\n        const hasFlag = this.glyphProps.flag == true;\n        const hasNoBeam = this.beam === undefined;\n        return hasStem && hasFlag && hasNoBeam;\n    }\n    // Draw the flag for the note\n    drawFlag() {\n        var _a, _b, _c, _d, _e;\n        const ctx = this.checkContext();\n        if (!ctx) {\n            throw new RuntimeError('NoCanvasContext', \"Can't draw without a canvas context.\");\n        }\n        if (this.shouldDrawFlag()) {\n            const { y_top, y_bottom } = this.getNoteHeadBounds();\n            // eslint-disable-next-line\n            const noteStemHeight = this.stem.getHeight();\n            const flagX = this.getStemX();\n            // What's with the magic +/- 2\n            // ANSWER: a corner of the note stem pokes out beyond the tip of the flag.\n            // The extra +/- 2 pushes the flag glyph outward so it covers the stem entirely.\n            // Alternatively, we could shorten the stem.\n            const flagY = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    y_top -\n                        noteStemHeight +\n                        2 -\n                        (this.glyphProps ? this.glyphProps.stem_down_extension : 0) * this.getStaveNoteScale() -\n                        ((_b = (_a = this.flag) === null || _a === void 0 ? void 0 : _a.getMetrics().y_shift) !== null && _b !== void 0 ? _b : 0) * (1 - this.getStaveNoteScale())\n                : // Up stems are above the note head and have flags on the right.\n                    y_bottom -\n                        noteStemHeight -\n                        2 +\n                        (this.glyphProps ? this.glyphProps.stem_up_extension : 0) * this.getStaveNoteScale() -\n                        ((_d = (_c = this.flag) === null || _c === void 0 ? void 0 : _c.getMetrics().y_shift) !== null && _d !== void 0 ? _d : 0) * (1 - this.getStaveNoteScale());\n            // Draw the Flag\n            (_e = this.flag) === null || _e === void 0 ? void 0 : _e.render(ctx, flagX, flagY);\n        }\n    }\n    // Draw the NoteHeads\n    drawNoteHeads() {\n        const ctx = this.checkContext();\n        this._noteHeads.forEach((notehead) => {\n            notehead.applyStyle(ctx);\n            ctx.openGroup('notehead', notehead.getAttribute('id'), { pointerBBox: true });\n            notehead.setContext(ctx).draw();\n            this.drawModifiers(notehead);\n            ctx.closeGroup();\n            notehead.restoreStyle(ctx);\n        });\n    }\n    drawStem(stemOptions) {\n        // GCR TODO: I can't find any context in which this is called with the stemStruct\n        // argument in the codebase or tests. Nor can I find a case where super.drawStem\n        // is called at all. Perhaps these should be removed?\n        const ctx = this.checkContext();\n        if (stemOptions) {\n            this.setStem(new Stem(stemOptions));\n        }\n        // If we will render a flag, we shorten the stem so that the tip\n        // does not poke through the flag.\n        if (this.shouldDrawFlag() && this.stem) {\n            this.stem.adjustHeightForFlag();\n        }\n        if (this.stem) {\n            this.stem.setContext(ctx).draw();\n        }\n    }\n    /** Primarily used as the scaling factor for grace notes, GraceNote will return the required scale. */\n    getStaveNoteScale() {\n        return 1.0;\n    }\n    /**\n     * Override stemmablenote stem extension to adjust for distance from middle line.\n     */\n    getStemExtension() {\n        const super_stem_extension = super.getStemExtension();\n        if (!this.glyphProps.stem) {\n            return super_stem_extension;\n        }\n        const stem_direction = this.getStemDirection();\n        if (stem_direction !== this.calculateOptimalStemDirection()) {\n            return super_stem_extension; // no adjustment for manually set stem direction.\n        }\n        let mid_line_distance;\n        const MIDDLE_LINE = 3;\n        if (stem_direction === Stem.UP) {\n            // Note that the use of maxLine here instead of minLine might\n            // seem counterintuitive, but in the case of (say) treble clef\n            // chord(F2, E4) stem up, we do not want to extend the stem because\n            // of F2, when a normal octave-length stem above E4 is fine.\n            //\n            // maxLine and minLine are set in calculateOptimalStemDirection() so\n            // will be known.\n            mid_line_distance = MIDDLE_LINE - this.maxLine;\n        }\n        else {\n            mid_line_distance = this.minLine - MIDDLE_LINE;\n        }\n        // how many lines more than an octave is the relevant notehead?\n        const lines_over_octave_from_mid_line = mid_line_distance - 3.5;\n        if (lines_over_octave_from_mid_line <= 0) {\n            return super_stem_extension;\n        }\n        const stave = this.getStave();\n        let spacing_between_lines = 10;\n        if (stave != undefined) {\n            spacing_between_lines = stave.getSpacingBetweenLines();\n        }\n        return super_stem_extension + lines_over_octave_from_mid_line * spacing_between_lines;\n    }\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw() {\n        if (this.render_options.draw === false)\n            return;\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        const ctx = this.checkContext();\n        const xBegin = this.getNoteHeadBeginX();\n        const shouldRenderStem = this.hasStem() && !this.beam;\n        // Format note head x positions\n        this._noteHeads.forEach((notehead) => notehead.setX(xBegin));\n        if (this.stem) {\n            // Format stem x positions\n            const stemX = this.getStemX();\n            this.stem.setNoteHeadXBounds(stemX, stemX);\n        }\n        L('Rendering ', this.isChord() ? 'chord :' : 'note :', this.keys);\n        // Apply the overall style -- may be contradicted by local settings:\n        this.applyStyle();\n        ctx.openGroup('stavenote', this.getAttribute('id'));\n        this.drawLedgerLines();\n        if (shouldRenderStem)\n            this.drawStem();\n        this.drawNoteHeads();\n        this.drawFlag();\n        ctx.closeGroup();\n        this.restoreStyle();\n        this.setRendered();\n    }\n}\nStaveNote.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveTie extends Element {\n    static get CATEGORY() {\n        return Category.StaveTie;\n    }\n    /**\n     * @param notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super();\n        this.setNotes(notes);\n        this.text = text;\n        this.render_options = {\n            cp1: 8,\n            cp2: 12,\n            text_shift_x: 0,\n            first_x_shift: 0,\n            last_x_shift: 0,\n            y_shift: 7,\n            tie_spacing: 0,\n        };\n        this.resetFont();\n    }\n    setDirection(direction) {\n        this.direction = direction;\n        return this;\n    }\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Tie needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices) {\n            notes.first_indices = [0];\n        }\n        if (!notes.last_indices) {\n            notes.last_indices = [0];\n        }\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Tied notes must have same number of indices.');\n        }\n        this.notes = notes;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.notes.first_note || !this.notes.last_note;\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        let cp1 = this.render_options.cp1;\n        let cp2 = this.render_options.cp2;\n        if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n            cp1 = 2;\n            cp2 = 8;\n        }\n        const first_x_shift = this.render_options.first_x_shift;\n        const last_x_shift = this.render_options.last_x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        // setNotes(...) verified that first_indices and last_indices are not undefined.\n        // As a result, we use the ! non-null assertion operator here.\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        // eslint-disable-next-line\n        const last_indices = this.notes.last_indices;\n        this.applyStyle();\n        ctx.openGroup('stavetie', this.getAttribute('id'));\n        for (let i = 0; i < first_indices.length; ++i) {\n            const cp_x = (params.last_x_px + last_x_shift + (params.first_x_px + first_x_shift)) / 2;\n            const first_y_px = params.first_ys[first_indices[i]] + y_shift;\n            const last_y_px = params.last_ys[last_indices[i]] + y_shift;\n            if (isNaN(first_y_px) || isNaN(last_y_px)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for tie rendering.');\n            }\n            const top_cp_y = (first_y_px + last_y_px) / 2 + cp1 * params.direction;\n            const bottom_cp_y = (first_y_px + last_y_px) / 2 + cp2 * params.direction;\n            ctx.beginPath();\n            ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n            ctx.quadraticCurveTo(cp_x, top_cp_y, params.last_x_px + last_x_shift, last_y_px);\n            ctx.quadraticCurveTo(cp_x, bottom_cp_y, params.first_x_px + first_x_shift, first_y_px);\n            ctx.closePath();\n            ctx.fill();\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n    renderText(first_x_px, last_x_px) {\n        var _a, _b, _c;\n        if (!this.text)\n            return;\n        const ctx = this.checkContext();\n        let center_x = (first_x_px + last_x_px) / 2;\n        center_x -= ctx.measureText(this.text).width / 2;\n        const stave = (_b = (_a = this.notes.first_note) === null || _a === void 0 ? void 0 : _a.checkStave()) !== null && _b !== void 0 ? _b : (_c = this.notes.last_note) === null || _c === void 0 ? void 0 : _c.checkStave();\n        if (stave) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, center_x + this.render_options.text_shift_x, stave.getYForTopText() - 1);\n            ctx.restore();\n        }\n    }\n    /**\n     * Returns the TieNotes structure of the first and last note this tie connects.\n     */\n    getNotes() {\n        return this.notes;\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.notes.first_note;\n        const last_note = this.notes.last_note;\n        // Provide some default values so the compiler doesn't complain.\n        let first_x_px = 0;\n        let last_x_px = 0;\n        let first_ys = [0];\n        let last_ys = [0];\n        let stem_direction = 0;\n        if (first_note) {\n            first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n            stem_direction = first_note.getStemDirection();\n            first_ys = first_note.getYs();\n        }\n        else if (last_note) {\n            const stave = last_note.checkStave();\n            first_x_px = stave.getTieStartX();\n            first_ys = last_note.getYs();\n            this.notes.first_indices = this.notes.last_indices;\n        }\n        if (last_note) {\n            last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n            stem_direction = last_note.getStemDirection();\n            last_ys = last_note.getYs();\n        }\n        else if (first_note) {\n            const stave = first_note.checkStave();\n            last_x_px = stave.getTieEndX();\n            last_ys = first_note.getYs();\n            this.notes.last_indices = this.notes.first_indices;\n        }\n        if (this.direction) {\n            stem_direction = this.direction;\n        }\n        this.renderTie({\n            first_x_px,\n            last_x_px,\n            first_ys,\n            last_ys,\n            direction: stem_direction,\n        });\n        this.renderText(first_x_px, last_x_px);\n        return true;\n    }\n}\n/** Default text font. */\nStaveTie.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// / [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { StaveTie } from './stavetie';\nimport { Category } from './typeguard';\nexport class TabTie extends StaveTie {\n    static get CATEGORY() {\n        return Category.TabTie;\n    }\n    static createHammeron(notes) {\n        return new TabTie(notes, 'H');\n    }\n    static createPulloff(notes) {\n        return new TabTie(notes, 'P');\n    }\n    /**\n     * @param notes is a struct that has:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     *\n     * @param text\n     */\n    constructor(notes, text) {\n        super(notes, text);\n        this.render_options.cp1 = 9;\n        this.render_options.cp2 = 11;\n        this.render_options.y_shift = 3;\n        this.direction = -1; // Tab tie's are always face up.\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError, sumArray } from './util';\nexport var VoiceMode;\n(function (VoiceMode) {\n    VoiceMode[VoiceMode[\"STRICT\"] = 1] = \"STRICT\";\n    VoiceMode[VoiceMode[\"SOFT\"] = 2] = \"SOFT\";\n    VoiceMode[VoiceMode[\"FULL\"] = 3] = \"FULL\";\n})(VoiceMode || (VoiceMode = {}));\n/**\n * `Voice` is mainly a container object to group `Tickables` for formatting.\n */\nexport class Voice extends Element {\n    static get CATEGORY() {\n        return Category.Voice;\n    }\n    /**\n     * Modes allow the addition of ticks in three different ways:\n     * - STRICT: This is the default. Ticks must fill the voice.\n     * - SOFT: Ticks can be added without restrictions.\n     * - FULL: Ticks do not need to fill the voice, but can't exceed the maximum tick length.\n     */\n    static get Mode() {\n        return VoiceMode;\n    }\n    constructor(time) {\n        super();\n        this.resolutionMultiplier = 1;\n        this.mode = VoiceMode.STRICT;\n        this.preFormatted = false;\n        this.ticksUsed = new Fraction(0, 1);\n        this.largestTickWidth = 0;\n        this.tickables = [];\n        this.options = {\n            softmaxFactor: Tables.SOFTMAX_FACTOR,\n        };\n        // Convert the `time` string into a VoiceTime object if necessary.\n        let voiceTime;\n        if (typeof time === 'string') {\n            // Time signature shortcut: \"4/4\", \"3/8\", etc.\n            const match = time.match(/(\\d+)\\/(\\d+)/);\n            if (match) {\n                voiceTime = {\n                    num_beats: parseInt(match[1]),\n                    beat_value: parseInt(match[2]),\n                };\n            }\n        }\n        else {\n            voiceTime = time;\n        }\n        // Default time signature is 4/4.\n        this.time = Object.assign({ num_beats: 4, beat_value: 4, resolution: Tables.RESOLUTION }, voiceTime);\n        // Recalculate total ticks.\n        this.totalTicks = new Fraction(this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n        // until tickables are added, the smallestTickCount is the same as the stated totalTicks duration.\n        this.smallestTickCount = this.totalTicks.clone();\n    }\n    /** Get the total ticks in the voice. */\n    getTotalTicks() {\n        return this.totalTicks;\n    }\n    /** Get the total ticks used in the voice by all the tickables. */\n    getTicksUsed() {\n        return this.ticksUsed;\n    }\n    /** Get the largest width of all the tickables. */\n    getLargestTickWidth() {\n        return this.largestTickWidth;\n    }\n    /** Get the tick count for the shortest tickable */\n    getSmallestTickCount() {\n        return this.smallestTickCount;\n    }\n    /** Get the tickables in the voice. */\n    getTickables() {\n        return this.tickables;\n    }\n    /** Get the voice mode (Voice.Mode.SOFT, STRICT, or FULL) */\n    getMode() {\n        return this.mode;\n    }\n    /**\n     * Set the voice mode.\n     * @param mode value from `VoiceMode` or Voice.Mode\n     */\n    setMode(mode) {\n        this.mode = mode;\n        return this;\n    }\n    /** Get the resolution multiplier for the voice. */\n    getResolutionMultiplier() {\n        return this.resolutionMultiplier;\n    }\n    /** Get the actual tick resolution for the voice. */\n    getActualResolution() {\n        return this.resolutionMultiplier * this.time.resolution;\n    }\n    /** Set the voice's stave. */\n    setStave(stave) {\n        this.stave = stave;\n        // Reset the bounding box so we can reformat.\n        this.boundingBox = undefined;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    /** Get the bounding box for the voice. */\n    getBoundingBox() {\n        if (!this.boundingBox) {\n            const stave = this.checkStave();\n            let boundingBox = undefined;\n            for (let i = 0; i < this.tickables.length; ++i) {\n                const tickable = this.tickables[i];\n                if (!tickable.getStave())\n                    tickable.setStave(stave);\n                const bb = tickable.getBoundingBox();\n                if (bb) {\n                    boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n                }\n            }\n            this.boundingBox = boundingBox;\n        }\n        return this.boundingBox;\n    }\n    /** Set the voice mode to strict or soft. */\n    setStrict(strict) {\n        this.mode = strict ? VoiceMode.STRICT : VoiceMode.SOFT;\n        return this;\n    }\n    /** Determine if the voice is complete according to the voice mode. */\n    isComplete() {\n        if (this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) {\n            return this.ticksUsed.equals(this.totalTicks);\n        }\n        else {\n            return true;\n        }\n    }\n    /**\n     * We use softmax to layout the tickables proportional to the exponent of\n     * their duration. The softmax factor is used to determine the 'linearness' of\n     * the layout.\n     *\n     * The softmax of all the tickables in this voice should sum to 1.\n     */\n    setSoftmaxFactor(factor) {\n        this.options.softmaxFactor = factor;\n        this.expTicksUsed = 0; // reset\n        return this;\n    }\n    /**\n     * Calculate the sum of the exponents of all the ticks in this voice to use\n     * as the denominator of softmax.  (It is not the sum of the softmax(t) over all tickables)\n     *\n     * Note that the \"exp\" of \"expTicksUsed\" stands for \"expontential\" ticks used,\n     * not \"expected\" ticks used.\n     */\n    reCalculateExpTicksUsed() {\n        const totalTicks = this.ticksUsed.value();\n        const exp = (tickable) => Math.pow(this.options.softmaxFactor, tickable.getTicks().value() / totalTicks);\n        this.expTicksUsed = sumArray(this.tickables.map(exp));\n        return this.expTicksUsed;\n    }\n    /** Get the softmax-scaled value of a tick duration. 'tickValue' is a number. */\n    softmax(tickValue) {\n        if (!this.expTicksUsed) {\n            this.expTicksUsed = this.reCalculateExpTicksUsed();\n        }\n        const totalTicks = this.ticksUsed.value();\n        const exp = (v) => Math.pow(this.options.softmaxFactor, v / totalTicks);\n        const sm = exp(tickValue) / this.expTicksUsed;\n        return sm;\n    }\n    /** Add a tickable to the voice. */\n    addTickable(tickable) {\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            // Update the total ticks for this line.\n            this.ticksUsed.add(ticks);\n            this.expTicksUsed = 0; // reset\n            if ((this.mode === VoiceMode.STRICT || this.mode === VoiceMode.FULL) &&\n                this.ticksUsed.greaterThan(this.totalTicks)) {\n                this.ticksUsed.subtract(ticks);\n                throw new RuntimeError('BadArgument', 'Too many ticks.');\n            }\n            // Track the smallest tickable for formatting.\n            if (ticks.lessThan(this.smallestTickCount)) {\n                this.smallestTickCount = ticks.clone();\n            }\n            this.resolutionMultiplier = this.ticksUsed.denominator;\n            // Expand total ticks using denominator from ticks used.\n            this.totalTicks.add(0, this.ticksUsed.denominator);\n        }\n        // Add the tickable to the line.\n        this.tickables.push(tickable);\n        tickable.setVoice(this);\n        return this;\n    }\n    /** Add an array of tickables to the voice. */\n    addTickables(tickables) {\n        for (let i = 0; i < tickables.length; ++i) {\n            this.addTickable(tickables[i]);\n        }\n        return this;\n    }\n    /** Preformat the voice by applying the voice's stave to each note. */\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        const stave = this.checkStave();\n        this.tickables.forEach((tickable) => {\n            if (!tickable.getStave()) {\n                tickable.setStave(stave);\n            }\n        });\n        this.preFormatted = true;\n        return this;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    /**\n     * Render the voice onto the canvas `context` and an optional `stave`.\n     * If `stave` is omitted, it is expected that the notes have staves\n     * already set.\n     *\n     * This method also calculates the voice's boundingBox while drawing\n     * the notes. Note the similarities with this.getBoundingBox().\n     */\n    draw(context = this.checkContext(), stave) {\n        stave = stave !== null && stave !== void 0 ? stave : this.stave;\n        this.setRendered();\n        let boundingBox = undefined;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            // Set the stave if provided.\n            if (stave) {\n                tickable.setStave(stave);\n            }\n            defined(tickable.getStave(), 'MissingStave', 'The voice cannot draw tickables without staves.');\n            const bb = tickable.getBoundingBox();\n            if (bb) {\n                boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n            }\n            tickable.setContext(context);\n            tickable.drawWithStyle();\n        }\n        this.boundingBox = boundingBox;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\nimport { Beam } from './beam';\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { Tables } from './tables';\nimport { TabTie } from './tabtie';\nimport { Category, isStaveNote } from './typeguard';\nimport { log } from './util';\nimport { Voice } from './voice';\n// To enable logging for this class. Set `GraceNoteGroup.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (GraceNoteGroup.DEBUG)\n        log('Vex.Flow.GraceNoteGroup', args);\n}\n/** GraceNoteGroup is used to format and render grace notes. */\nexport class GraceNoteGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.GraceNoteGroup;\n    }\n    /** Arranges groups inside a `ModifierContext`. */\n    static format(gracenote_groups, state) {\n        const group_spacing_stave = 4;\n        const group_spacing_tab = 0;\n        if (!gracenote_groups || gracenote_groups.length === 0)\n            return false;\n        const group_list = [];\n        let prev_note = null;\n        let shiftL = 0;\n        for (let i = 0; i < gracenote_groups.length; ++i) {\n            const gracenote_group = gracenote_groups[i];\n            const note = gracenote_group.getNote();\n            const is_stavenote = isStaveNote(note);\n            const spacing = is_stavenote ? group_spacing_stave : group_spacing_tab;\n            if (is_stavenote && note !== prev_note) {\n                // Iterate through all notes to get the displaced pixels\n                for (let n = 0; n < note.keys.length; ++n) {\n                    shiftL = Math.max(note.getLeftDisplacedHeadPx(), shiftL);\n                }\n                prev_note = note;\n            }\n            group_list.push({ shift: shiftL, gracenote_group, spacing });\n        }\n        // If first note left shift in case it is displaced\n        let group_shift = group_list[0].shift;\n        let formatWidth;\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            gracenote_group.preFormat();\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            group_shift = Math.max(formatWidth, group_shift);\n        }\n        for (let i = 0; i < group_list.length; ++i) {\n            const gracenote_group = group_list[i].gracenote_group;\n            formatWidth = gracenote_group.getWidth() + group_list[i].spacing;\n            gracenote_group.setSpacingFromNextModifier(group_shift - Math.min(formatWidth, group_shift) + StaveNote.minNoteheadPadding);\n        }\n        state.left_shift += group_shift;\n        return true;\n    }\n    //** `GraceNoteGroup` inherits from `Modifier` and is placed inside a `ModifierContext`. */\n    constructor(grace_notes, show_slur) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.grace_notes = grace_notes;\n        this.width = 0;\n        this.show_slur = show_slur;\n        this.slur = undefined;\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.render_options = {\n            slur_y_shift: 0,\n        };\n        this.beams = [];\n        this.voice.addTickables(this.grace_notes);\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (!this.formatter) {\n            this.formatter = new Formatter();\n        }\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0, {});\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    beamNotes(grace_notes) {\n        grace_notes = grace_notes || this.grace_notes;\n        if (grace_notes.length > 1) {\n            const beam = new Beam(grace_notes);\n            beam.render_options.beam_width = 3;\n            beam.render_options.partial_beam_length = 4;\n            this.beams.push(beam);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width + StaveNote.minNoteheadPadding;\n    }\n    getGraceNotes() {\n        return this.grace_notes;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        L('Drawing grace note group for:', note);\n        this.alignSubNotesWithNote(this.getGraceNotes(), note); // Modifier function\n        // Draw grace notes.\n        this.grace_notes.forEach((graceNote) => graceNote.setContext(ctx).draw());\n        // Draw beams.\n        this.beams.forEach((beam) => beam.setContext(ctx).draw());\n        if (this.show_slur) {\n            // Create and draw slur.\n            const is_stavenote = isStaveNote(note);\n            const TieClass = is_stavenote ? StaveTie : TabTie;\n            this.slur = new TieClass({\n                last_note: this.grace_notes[0],\n                first_note: note,\n                first_indices: [0],\n                last_indices: [0],\n            });\n            this.slur.render_options.cp2 = 12;\n            this.slur.render_options.y_shift = (is_stavenote ? 7 : 5) + this.render_options.slur_y_shift;\n            this.slur.setContext(ctx).draw();\n        }\n    }\n}\nGraceNoteGroup.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2016\n//\n// ## Description\n//\n// This file implements `NoteSubGroup` which is used to format and\n// render notes as a `Modifier`\n// ex) ClefNote, TimeSigNote and BarNote.\nimport { Formatter } from './formatter';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { Voice } from './voice';\nexport class NoteSubGroup extends Modifier {\n    static get CATEGORY() {\n        return Category.NoteSubGroup;\n    }\n    // Arrange groups inside a `ModifierContext`\n    static format(groups, state) {\n        if (!groups || groups.length === 0)\n            return false;\n        let width = 0;\n        for (let i = 0; i < groups.length; ++i) {\n            const group = groups[i];\n            group.preFormat();\n            width += group.getWidth();\n        }\n        state.left_shift += width;\n        return true;\n    }\n    constructor(subNotes) {\n        super();\n        this.preFormatted = false;\n        this.position = Modifier.Position.LEFT;\n        this.subNotes = subNotes;\n        this.subNotes.forEach((subNote) => {\n            subNote.setIgnoreTicks(false);\n        });\n        this.width = 0;\n        this.formatter = new Formatter();\n        this.voice = new Voice({\n            num_beats: 4,\n            beat_value: 4,\n            resolution: Tables.RESOLUTION,\n        }).setStrict(false);\n        this.voice.addTickables(this.subNotes);\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n        this.setWidth(this.formatter.getMinTotalWidth());\n        this.preFormatted = true;\n    }\n    setWidth(width) {\n        this.width = width;\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        this.alignSubNotesWithNote(this.subNotes, note); // Modifier function\n        this.subNotes.forEach((subNote) => subNote.setContext(ctx).drawWithStyle());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isTabNote } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Ornament.DEBUG)\n        log('Vex.Flow.Ornament', args);\n}\n/**\n * Ornament implements ornaments as modifiers that can be\n * attached to notes. The complete list of ornaments is available in\n * `tables.ts` under `Vex.Flow.ornamentCodes`.\n *\n * See `tests/ornament_tests.ts` for usage examples.\n */\nexport class Ornament extends Modifier {\n    /** Ornaments category string. */\n    static get CATEGORY() {\n        return Category.Ornament;\n    }\n    static get minPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('noteHead.minPadding');\n    }\n    /** Arrange ornaments inside `ModifierContext` */\n    static format(ornaments, state) {\n        if (!ornaments || ornaments.length === 0)\n            return false;\n        let width = 0; // width is used by ornaments, which are always centered on the note head\n        let right_shift = state.right_shift; // jazz ornaments calculate r/l shift separately\n        let left_shift = state.left_shift;\n        let yOffset = 0;\n        for (let i = 0; i < ornaments.length; ++i) {\n            const ornament = ornaments[i];\n            const increment = 2;\n            if (Ornament.ornamentRelease.indexOf(ornament.type) >= 0) {\n                ornament.x_shift += right_shift + 2;\n            }\n            if (Ornament.ornamentAttack.indexOf(ornament.type) >= 0) {\n                ornament.x_shift -= left_shift + 2;\n            }\n            if (ornament.reportedWidth && ornament.x_shift < 0) {\n                left_shift += ornament.reportedWidth;\n            }\n            else if (ornament.reportedWidth && ornament.x_shift >= 0) {\n                right_shift += ornament.reportedWidth + Ornament.minPadding;\n            }\n            else {\n                width = Math.max(ornament.getWidth(), width);\n            }\n            // articulations above/below the line can be stacked.\n            if (Ornament.ornamentArticulation.indexOf(ornament.type) >= 0) {\n                // Unfortunately we don't know the stem direction.  So we base it\n                // on the line number, but also allow it to be overridden.\n                const ornamentNote = defined(ornament.note, 'NoAttachedNote');\n                if (ornamentNote.getLineNumber() >= 3 || ornament.getPosition() === Modifier.Position.ABOVE) {\n                    state.top_text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset -= ornament.glyph.bbox.getH();\n                }\n                else {\n                    state.text_line += increment;\n                    ornament.y_shift += yOffset;\n                    yOffset += ornament.glyph.bbox.getH();\n                }\n            }\n            else {\n                if (ornament.getPosition() === Modifier.Position.ABOVE) {\n                    ornament.setTextLine(state.top_text_line);\n                    state.top_text_line += increment;\n                }\n                else {\n                    ornament.setTextLine(state.text_line);\n                    state.text_line += increment;\n                }\n            }\n        }\n        // Note: 'legit' ornaments don't consider other modifiers when calculating their\n        // X position, but jazz ornaments sometimes need to.\n        state.left_shift = left_shift + width / 2;\n        state.right_shift = right_shift + width / 2;\n        return true;\n    }\n    /**\n     * ornamentNoteTransition means the jazz ornament represents an effect from one note to another,\n     * these are generally on the top of the staff.\n     */\n    static get ornamentNoteTransition() {\n        return ['flip', 'jazzTurn', 'smear'];\n    }\n    /**\n     * ornamentAttack indicates something that happens in the attach, placed before the note and\n     * any accidentals\n     */\n    static get ornamentAttack() {\n        return ['scoop'];\n    }\n    /**\n     * The ornament is aligned based on the note head, but without regard to whether the\n     * stem goes up or down.\n     */\n    static get ornamentAlignWithNoteHead() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'bend', 'plungerClosed', 'plungerOpen', 'scoop'];\n    }\n    /**\n     * An ornament that happens on the release of the note, generally placed after the\n     * note and overlapping the next beat/measure..\n     */\n    static get ornamentRelease() {\n        return ['doit', 'fall', 'fallLong', 'doitLong', 'jazzTurn', 'smear', 'flip'];\n    }\n    /** ornamentArticulation goes above/below the note based on space availablity */\n    static get ornamentArticulation() {\n        return ['bend', 'plungerClosed', 'plungerOpen'];\n    }\n    /**\n     * Legacy ornaments have hard-coded metrics.  If additional ornament types are\n     * added, get their metrics here.\n     */\n    getMetrics() {\n        const ornamentMetrics = Tables.currentMusicFont().getMetrics().ornament;\n        if (!ornamentMetrics)\n            throw new RuntimeError('BadMetrics', `ornament missing`);\n        return ornamentMetrics[this.ornament.code];\n    }\n    /**\n     * Create a new ornament of type `type`, which is an entry in\n     * `Vex.Flow.ornamentCodes` in `tables.ts`.\n     */\n    constructor(type) {\n        super();\n        this.type = type;\n        this.delayed = false;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n            accidentalLowerPadding: 3,\n            accidentalUpperPadding: 3,\n        };\n        this.ornament = Tables.ornamentCodes(this.type);\n        // new ornaments have their origin at the origin, and have more specific\n        // metrics.  Legacy ornaments do some\n        // x scaling, and have hard-coded metrics\n        const metrics = this.getMetrics();\n        // some jazz ornaments are above or below depending on stem direction.\n        this.adjustForStemDirection = false;\n        // some jazz ornaments like falls are supposed to overlap with future bars\n        // and so we report a different width than they actually take up.\n        this.reportedWidth = metrics && metrics.reportedWidth ? metrics.reportedWidth : 0;\n        this.stemUpYOffset = metrics && metrics.stemUpYOffset ? metrics.stemUpYOffset : 0;\n        this.ornamentAlignWithNoteHead = Ornament.ornamentAlignWithNoteHead.indexOf(this.type) >= 0;\n        if (!this.ornament) {\n            throw new RuntimeError('ArgumentError', `Ornament not found: '${this.type}'`);\n        }\n        this.x_shift = metrics ? metrics.xOffset : 0;\n        this.y_shift = metrics ? metrics.yOffset : 0;\n        this.glyph = new Glyph(this.ornament.code, this.render_options.font_scale, {\n            category: `ornament.${this.ornament.code}`,\n        });\n        // Is this a jazz ornament that goes between this note and the next note.\n        if (Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            this.delayed = true;\n        }\n        // Legacy ornaments need this.  I don't know why, but horizontal spacing issues\n        // happen if I don't set it.\n        if (!metrics) {\n            this.glyph.setOrigin(0.5, 1.0); // FIXME: SMuFL won't require a vertical origin shift\n        }\n    }\n    /** Set whether the ornament is to be delayed. */\n    setDelayed(delayed) {\n        this.delayed = delayed;\n        return this;\n    }\n    /** Set the upper accidental for the ornament. */\n    setUpperAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalUpper = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalUpper.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Set the lower accidental for the ornament. */\n    setLowerAccidental(accid) {\n        const scale = this.render_options.font_scale / 1.3;\n        this.accidentalLower = new Glyph(Tables.accidentalCodes(accid).code, scale);\n        this.accidentalLower.setOrigin(0.5, 1.0);\n        return this;\n    }\n    /** Render ornament in position next to note. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDir = note.getStemDirection();\n        const stave = note.checkStave();\n        this.applyStyle();\n        ctx.openGroup('ornament', this.getAttribute('id'));\n        // Get stem extents\n        const stemExtents = note.checkStem().getExtents();\n        let y = stemDir === Stem.DOWN ? stemExtents.baseY : stemExtents.topY;\n        // TabNotes don't have stems attached to them. Tab stems are rendered outside the stave.\n        if (isTabNote(note)) {\n            if (note.hasStem()) {\n                if (stemDir === Stem.DOWN) {\n                    y = stave.getYForTopText(this.text_line);\n                }\n            }\n            else {\n                // Without a stem\n                y = stave.getYForTopText(this.text_line);\n            }\n        }\n        const isPlacedOnNoteheadSide = stemDir === Stem.DOWN;\n        const spacing = stave.getSpacingBetweenLines();\n        let lineSpacing = 1;\n        // Beamed stems are longer than quarter note stems, adjust accordingly\n        if (!isPlacedOnNoteheadSide && note.hasBeam()) {\n            lineSpacing += 0.5;\n        }\n        const totalSpacing = spacing * (this.text_line + lineSpacing);\n        const glyphYBetweenLines = y - totalSpacing;\n        // Get initial coordinates for the modifier position\n        const start = note.getModifierStartXY(this.position, this.index);\n        let glyphX = start.x;\n        // If the ornament is aligned with the note head, don't consider the stave y\n        // but use the 'natural' modifier y\n        let glyphY = this.ornamentAlignWithNoteHead\n            ? start.y\n            : Math.min(stave.getYForTopText(this.text_line), glyphYBetweenLines);\n        glyphY += this.y_shift;\n        // Ajdust x position if ornament is delayed\n        if (this.delayed) {\n            let delayXShift = 0;\n            const startX = glyphX - stave.getNoteStartX();\n            if (this.delayXShift !== undefined) {\n                delayXShift = this.delayXShift;\n            }\n            else {\n                delayXShift += this.glyph.getMetrics().width / 2;\n                const tickables = note.getVoice().getTickables();\n                const index = tickables.indexOf(note);\n                const nextContext = index + 1 < tickables.length ? tickables[index + 1].checkTickContext() : undefined;\n                if (nextContext) {\n                    delayXShift += (nextContext.getX() - startX) * 0.5;\n                }\n                else {\n                    delayXShift += (stave.getX() + stave.getWidth() - glyphX) * 0.5;\n                }\n                this.delayXShift = delayXShift;\n            }\n            glyphX += delayXShift;\n        }\n        L('Rendering ornament: ', this.ornament, glyphX, glyphY);\n        if (this.accidentalLower) {\n            this.accidentalLower.render(ctx, glyphX, glyphY);\n            glyphY -= this.accidentalLower.getMetrics().height;\n            glyphY -= this.render_options.accidentalLowerPadding;\n        }\n        if (this.stemUpYOffset && note.hasStem() && note.getStemDirection() === 1) {\n            glyphY += this.stemUpYOffset;\n        }\n        if (note.getLineNumber() < 5 && Ornament.ornamentNoteTransition.indexOf(this.type) >= 0) {\n            glyphY = note.checkStave().getBoundingBox().getY() + 40;\n        }\n        this.glyph.render(ctx, glyphX + this.x_shift, glyphY);\n        if (this.accidentalUpper) {\n            glyphY -= this.glyph.getMetrics().height + this.render_options.accidentalUpperPadding;\n            this.accidentalUpper.render(ctx, glyphX, glyphY);\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`. */\nOrnament.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Rodrigo Vilar\n// MIT License\nimport { Glyph } from './glyph';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Parenthesis implements parenthesis modifiers for notes. */\nexport class Parenthesis extends Modifier {\n    static get CATEGORY() {\n        return Category.Parenthesis;\n    }\n    /** Add parentheses to the notes. */\n    static buildAndAttach(notes) {\n        for (const note of notes) {\n            for (let i = 0; i < note.keys.length; i++) {\n                note.addModifier(new Parenthesis(ModifierPosition.LEFT), i);\n                note.addModifier(new Parenthesis(ModifierPosition.RIGHT), i);\n            }\n        }\n    }\n    /** Arrange parentheses inside a ModifierContext. */\n    static format(parentheses, state) {\n        if (!parentheses || parentheses.length === 0)\n            return false;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        for (let i = 0; i < parentheses.length; ++i) {\n            const parenthesis = parentheses[i];\n            const note = parenthesis.getNote();\n            const pos = parenthesis.getPosition();\n            const index = parenthesis.checkIndex();\n            let shift = 0;\n            if (pos === ModifierPosition.RIGHT) {\n                shift = note.getRightParenthesisPx(index);\n                x_widthR = x_widthR > shift + parenthesis.width ? x_widthR : shift + parenthesis.width;\n            }\n            if (pos === ModifierPosition.LEFT) {\n                shift = note.getLeftParenthesisPx(index);\n                x_widthL = x_widthL > shift + parenthesis.width ? x_widthL : shift + parenthesis.width;\n            }\n            parenthesis.setXShift(shift);\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    /**\n     * Constructor\n     *\n     * @param position Modifier.Position.LEFT (default) or Modifier.Position.RIGHT\n     */\n    constructor(position) {\n        var _a;\n        super();\n        this.position = position !== null && position !== void 0 ? position : Modifier.Position.LEFT;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n    }\n    /** Set the associated note. */\n    setNote(note) {\n        var _a, _b;\n        this.note = note;\n        this.point = (_a = Tables.currentMusicFont().lookupMetric('parenthesis.default.point')) !== null && _a !== void 0 ? _a : Note.getPoint('default');\n        this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.default.width'));\n        if (isGraceNote(note)) {\n            this.point = (_b = Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.point')) !== null && _b !== void 0 ? _b : Note.getPoint('gracenote');\n            this.setWidth(Tables.currentMusicFont().lookupMetric('parenthesis.gracenote.width'));\n        }\n        return this;\n    }\n    /** Render the parenthesis. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index, { forceFlagRight: true });\n        const x = start.x + this.x_shift;\n        const y = start.y + this.y_shift;\n        if (this.position == Modifier.Position.RIGHT) {\n            Glyph.renderGlyph(ctx, x + 1, y, this.point, 'noteheadParenthesisRight', {\n                category: `noteHead.standard.noteheadParenthesisRight`,\n            });\n        }\n        else if (this.position == Modifier.Position.LEFT) {\n            Glyph.renderGlyph(ctx, x - 2, y, this.point, 'noteheadParenthesisLeft', {\n                category: `noteHead.standard.noteheadParenthesisLeft`,\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Ron B. Yeh\n// MIT License\n//\n// Utilities for working with Web APIs.\n// See: https://developer.mozilla.org/en-US/docs/Web/API\nimport { globalObject } from './util';\n// eslint-disable-next-line\nexport function isHTMLCanvas(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLCanvasElement class,\n    (typeof global.HTMLCanvasElement === 'function' && element instanceof global.HTMLCanvasElement) ||\n        // OR it's pretending to be a <canvas> element. Good enough!\n        // Do not rely on .tagName, because node-canvas doesn't provide a tagName.\n        (typeof element.getContext === 'function' && typeof element.toDataURL === 'function'));\n}\n// eslint-disable-next-line\nexport function isHTMLDiv(element) {\n    if (!element)\n        return false;\n    const global = globalObject();\n    return (\n    // It's either an instance of the HTMLDivElement class.\n    (typeof global.HTMLDivElement === 'function' && element instanceof global.HTMLDivElement) ||\n        // OR it's pretending to be a <div>. See: svgcontext.ts.\n        (typeof element.appendChild === 'function' && typeof element.style === 'object'));\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from './font';\nimport { RenderContext } from './rendercontext';\nimport { globalObject, warn } from './util';\nimport { isHTMLCanvas } from './web';\n/**\n * A rendering context for the Canvas backend. This class serves as a proxy for the\n * underlying CanvasRenderingContext2D object, part of the browser's API.\n */\nexport class CanvasContext extends RenderContext {\n    static get WIDTH() {\n        return 600;\n    }\n    static get HEIGHT() {\n        return 400;\n    }\n    static get CANVAS_BROWSER_SIZE_LIMIT() {\n        return 32767; // Chrome/Firefox. Could be determined more precisely by npm module canvas-size.\n    }\n    /**\n     * Ensure that width and height do not exceed the browser limit.\n     * @returns array of [width, height] clamped to the browser limit.\n     */\n    static sanitizeCanvasDims(width, height) {\n        const limit = this.CANVAS_BROWSER_SIZE_LIMIT;\n        if (Math.max(width, height) > limit) {\n            warn('Canvas dimensions exceed browser limit. Cropping to ' + limit);\n            if (width > limit) {\n                width = limit;\n            }\n            if (height > limit) {\n                height = limit;\n            }\n        }\n        return [width, height];\n    }\n    constructor(context) {\n        super();\n        /** Height of one line of text (in pixels). */\n        this.textHeight = 0;\n        this.context2D = context;\n        if (!context.canvas) {\n            this.canvas = {\n                width: CanvasContext.WIDTH,\n                height: CanvasContext.HEIGHT,\n            };\n        }\n        else {\n            this.canvas = context.canvas;\n        }\n    }\n    /**\n     * Set all pixels to transparent black rgba(0,0,0,0).\n     */\n    clear() {\n        this.context2D.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n    // eslint-disable-next-line\n    openGroup(cls, id, attrs) {\n        // Containers not implemented.\n    }\n    closeGroup() {\n        // Containers not implemented.\n    }\n    // eslint-disable-next-line\n    add(child) {\n        // Containers not implemented.\n    }\n    setFillStyle(style) {\n        this.context2D.fillStyle = style;\n        return this;\n    }\n    /** CanvasContext ignores `setBackgroundFillStyle()`. */\n    // eslint-disable-next-line\n    setBackgroundFillStyle(style) {\n        // DO NOTHING\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.context2D.strokeStyle = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.context2D.shadowColor = color;\n        return this;\n    }\n    setShadowBlur(blur) {\n        // CanvasRenderingContext2D does not scale the shadow blur by the current\n        // transform, so we have to do it manually. We assume uniform scaling\n        // (though allow for rotation) because the blur can only be scaled\n        // uniformly anyway.\n        const t = this.context2D.getTransform();\n        const scale = Math.sqrt(t.a * t.a + t.b * t.b + t.c * t.c + t.d * t.d);\n        this.context2D.shadowBlur = scale * blur;\n        return this;\n    }\n    setLineWidth(width) {\n        this.context2D.lineWidth = width;\n        return this;\n    }\n    setLineCap(capType) {\n        this.context2D.lineCap = capType;\n        return this;\n    }\n    setLineDash(dash) {\n        this.context2D.setLineDash(dash);\n        return this;\n    }\n    scale(x, y) {\n        this.context2D.scale(x, y);\n        return this;\n    }\n    resize(width, height, devicePixelRatio) {\n        var _a;\n        const canvas = this.context2D.canvas;\n        const dpr = (_a = devicePixelRatio !== null && devicePixelRatio !== void 0 ? devicePixelRatio : globalObject().devicePixelRatio) !== null && _a !== void 0 ? _a : 1;\n        // Scale the canvas size by the device pixel ratio clamping to the maximum supported size.\n        [width, height] = CanvasContext.sanitizeCanvasDims(width * dpr, height * dpr);\n        // Divide back down by the pixel ratio and convert to integers.\n        width = (width / dpr) | 0;\n        height = (height / dpr) | 0;\n        canvas.width = width * dpr;\n        canvas.height = height * dpr;\n        // The canvas could be an instance of either HTMLCanvasElement or an OffscreenCanvas.\n        // Only HTMLCanvasElement has a style attribute.\n        if (isHTMLCanvas(canvas)) {\n            canvas.style.width = width + 'px';\n            canvas.style.height = height + 'px';\n        }\n        return this.scale(dpr, dpr);\n    }\n    rect(x, y, width, height) {\n        this.context2D.rect(x, y, width, height);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        this.context2D.fillRect(x, y, width, height);\n        return this;\n    }\n    /**\n     * Set the pixels in a rectangular area to transparent black rgba(0,0,0,0).\n     */\n    clearRect(x, y, width, height) {\n        this.context2D.clearRect(x, y, width, height);\n        return this;\n    }\n    beginPath() {\n        this.context2D.beginPath();\n        return this;\n    }\n    moveTo(x, y) {\n        this.context2D.moveTo(x, y);\n        return this;\n    }\n    lineTo(x, y) {\n        this.context2D.lineTo(x, y);\n        return this;\n    }\n    bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) {\n        this.context2D.bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y);\n        return this;\n    }\n    quadraticCurveTo(cpx, cpy, x, y) {\n        this.context2D.quadraticCurveTo(cpx, cpy, x, y);\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        this.context2D.arc(x, y, radius, startAngle, endAngle, counterclockwise);\n        return this;\n    }\n    fill() {\n        this.context2D.fill();\n        return this;\n    }\n    stroke() {\n        this.context2D.stroke();\n        return this;\n    }\n    closePath() {\n        this.context2D.closePath();\n        return this;\n    }\n    measureText(text) {\n        const metrics = this.context2D.measureText(text);\n        let y = 0;\n        let height = 0;\n        if (metrics.fontBoundingBoxAscent) {\n            y = -metrics.fontBoundingBoxAscent;\n            height = metrics.fontBoundingBoxDescent + metrics.fontBoundingBoxAscent;\n        }\n        else {\n            y = -metrics.actualBoundingBoxAscent;\n            height = metrics.actualBoundingBoxDescent + metrics.actualBoundingBoxAscent;\n        }\n        // Return x, y, width & height in the same manner as svg getBBox\n        return {\n            x: 0,\n            y: y,\n            width: metrics.width,\n            height: height,\n        };\n    }\n    fillText(text, x, y) {\n        this.context2D.fillText(text, x, y);\n        return this;\n    }\n    save() {\n        this.context2D.save();\n        return this;\n    }\n    restore() {\n        this.context2D.restore();\n        return this;\n    }\n    set fillStyle(style) {\n        this.context2D.fillStyle = style;\n    }\n    get fillStyle() {\n        return this.context2D.fillStyle;\n    }\n    set strokeStyle(style) {\n        this.context2D.strokeStyle = style;\n    }\n    get strokeStyle() {\n        return this.context2D.strokeStyle;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900).\n     * @param style is a string (e.g., 'italic', 'normal').\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.context2D.font = Font.toCSSString(fontInfo);\n        this.textHeight = Font.convertSizeToPixelValue(fontInfo.size);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.context2D.font;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n// @author Gregory Ristow (2015)\nimport { Font, FontStyle, FontWeight } from './font';\nimport { RenderContext } from './rendercontext';\nimport { Tables } from './tables';\nimport { normalizeAngle, prefix, RuntimeError } from './util';\n/** For a particular element type (e.g., rect), we will not apply certain presentation attributes. */\nconst ATTRIBUTES_TO_IGNORE = {\n    path: {\n        x: true,\n        y: true,\n        width: true,\n        height: true,\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    rect: {\n        'font-family': true,\n        'font-weight': true,\n        'font-style': true,\n        'font-size': true,\n    },\n    text: {\n        width: true,\n        height: true,\n    },\n};\n/** Create the SVG in the SVG namespace. */\nconst SVG_NS = 'http://www.w3.org/2000/svg';\nconst TWO_PI = 2 * Math.PI;\nclass MeasureTextCache {\n    constructor() {\n        // The cache is keyed first by the text string, then by the font attributes\n        // joined together.\n        this.cache = {};\n    }\n    lookup(text, svg, attributes) {\n        let entries = this.cache[text];\n        if (entries === undefined) {\n            entries = {};\n            this.cache[text] = entries;\n        }\n        const family = attributes['font-family'];\n        const size = attributes['font-size'];\n        const weight = attributes['font-weight'];\n        const style = attributes['font-style'];\n        const key = `${family}%${size}%${weight}%${style}`;\n        let entry = entries[key];\n        if (entry === undefined) {\n            entry = this.measureImpl(text, svg, attributes);\n            entries[key] = entry;\n        }\n        return entry;\n    }\n    measureImpl(text, svg, attributes) {\n        let txt = this.txt;\n        if (!txt) {\n            // Create the SVG text element that will be used to measure text in the event\n            // of a cache miss.\n            txt = document.createElementNS(SVG_NS, 'text');\n            this.txt = txt;\n        }\n        txt.textContent = text;\n        if (attributes['font-family'])\n            txt.setAttributeNS(null, 'font-family', attributes['font-family']);\n        if (attributes['font-size'])\n            txt.setAttributeNS(null, 'font-size', `${attributes['font-size']}`);\n        if (attributes['font-style'])\n            txt.setAttributeNS(null, 'font-style', attributes['font-style']);\n        if (attributes['font-weight'])\n            txt.setAttributeNS(null, 'font-weight', `${attributes['font-weight']}`);\n        svg.appendChild(txt);\n        const bbox = txt.getBBox();\n        svg.removeChild(txt);\n        return { x: bbox.x, y: bbox.y, width: bbox.width, height: bbox.height };\n    }\n}\n/**\n * SVG rendering context with an API similar to CanvasRenderingContext2D.\n */\nexport class SVGContext extends RenderContext {\n    constructor(element) {\n        super();\n        this.width = 0;\n        this.height = 0;\n        this.precision = 1;\n        this.backgroundFillStyle = 'white';\n        /** Formatted as CSS font shorthand (e.g., 'italic bold 12pt Arial') */\n        this.fontCSSString = '';\n        this.element = element;\n        this.precision = Math.pow(10, Tables.RENDER_PRECISION_PLACES);\n        // Create a SVG element and add it to the container element.\n        const svg = this.create('svg');\n        this.element.appendChild(svg);\n        this.svg = svg;\n        this.parent = this.svg;\n        this.groups = [this.svg];\n        this.path = '';\n        this.pen = { x: NaN, y: NaN };\n        this.lineWidth = 1.0;\n        const defaultFontAttributes = {\n            'font-family': Font.SANS_SERIF,\n            'font-size': Font.SIZE + 'pt',\n            'font-weight': FontWeight.NORMAL,\n            'font-style': FontStyle.NORMAL,\n        };\n        this.state = Object.assign({ scaleX: 1, scaleY: 1 }, defaultFontAttributes);\n        this.attributes = Object.assign({ 'stroke-width': 0.3, 'stroke-dasharray': 'none', fill: 'black', stroke: 'black' }, defaultFontAttributes);\n        this.groupAttributes = [];\n        this.applyAttributes(svg, this.attributes);\n        this.groupAttributes.push(Object.assign({}, this.attributes));\n        this.shadow_attributes = {\n            width: 0,\n            color: 'black',\n        };\n        this.state_stack = [];\n    }\n    round(n) {\n        return Math.round(n * this.precision) / this.precision;\n    }\n    create(svgElementType) {\n        return document.createElementNS(SVG_NS, svgElementType);\n    }\n    // Allow grouping elements in containers for interactivity.\n    openGroup(cls, id, attrs) {\n        const group = this.create('g');\n        this.groups.push(group);\n        this.parent.appendChild(group);\n        this.parent = group;\n        if (cls)\n            group.setAttribute('class', prefix(cls));\n        if (id)\n            group.setAttribute('id', prefix(id));\n        if (attrs && attrs.pointerBBox) {\n            group.setAttribute('pointer-events', 'bounding-box');\n        }\n        this.applyAttributes(group, this.attributes);\n        this.groupAttributes.push(Object.assign(Object.assign({}, this.groupAttributes[this.groupAttributes.length - 1]), this.attributes));\n        return group;\n    }\n    closeGroup() {\n        this.groups.pop();\n        this.groupAttributes.pop();\n        this.parent = this.groups[this.groups.length - 1];\n    }\n    add(elem) {\n        this.parent.appendChild(elem);\n    }\n    setFillStyle(style) {\n        this.attributes.fill = style;\n        return this;\n    }\n    /**\n     * Used to set the fill color for `clearRect()`. This allows us to simulate\n     * cutting a \"hole\" into the SVG drawing.\n     */\n    setBackgroundFillStyle(style) {\n        this.backgroundFillStyle = style;\n        return this;\n    }\n    setStrokeStyle(style) {\n        this.attributes.stroke = style;\n        return this;\n    }\n    setShadowColor(color) {\n        this.shadow_attributes.color = color;\n        return this;\n    }\n    /**\n     * @param blur A non-negative float specifying the level of shadow blur, where 0\n     *             represents no blur and larger numbers represent increasingly more blur.\n     * @returns this\n     */\n    setShadowBlur(blur) {\n        this.shadow_attributes.width = blur;\n        return this;\n    }\n    /**\n     * @param width\n     * @returns this\n     */\n    setLineWidth(width) {\n        this.attributes['stroke-width'] = width;\n        this.lineWidth = width;\n        return this;\n    }\n    /**\n     * @param lineDash an array of integers in the form of [dash, space, dash, space, etc...]\n     * @returns this\n     *\n     * See: [SVG `stroke-dasharray` attribute](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray)\n     */\n    setLineDash(lineDash) {\n        if (Object.prototype.toString.call(lineDash) === '[object Array]') {\n            this.attributes['stroke-dasharray'] = lineDash.join(',');\n            return this;\n        }\n        else {\n            throw new RuntimeError('ArgumentError', 'lineDash must be an array of integers.');\n        }\n    }\n    /**\n     * @param capType\n     * @returns this\n     */\n    setLineCap(capType) {\n        this.attributes['stroke-linecap'] = capType;\n        return this;\n    }\n    // ### Sizing & Scaling Methods:\n    // TODO (GCR): See note at scale() -- separate our internal\n    // conception of pixel-based width/height from the style.width\n    // and style.height properties eventually to allow users to\n    // apply responsive sizing attributes to the SVG.\n    resize(width, height) {\n        this.width = width;\n        this.height = height;\n        this.element.style.width = width.toString();\n        this.svg.style.width = width.toString();\n        this.svg.style.height = height.toString();\n        const attributes = {\n            width,\n            height,\n        };\n        this.applyAttributes(this.svg, attributes);\n        this.scale(this.state.scaleX, this.state.scaleY);\n        return this;\n    }\n    scale(x, y) {\n        // uses viewBox to scale\n        // TODO (GCR): we may at some point want to distinguish the\n        // style.width / style.height properties that are applied to\n        // the SVG object from our internal conception of the SVG\n        // width/height.  This would allow us to create automatically\n        // scaling SVG's that filled their containers, for instance.\n        //\n        // As this isn't implemented in Canvas contexts,\n        // I've left as is for now, but in using the viewBox to\n        // handle internal scaling, am trying to make it possible\n        // for us to eventually move in that direction.\n        this.state.scaleX = this.state.scaleX ? this.state.scaleX * x : x;\n        this.state.scaleY = this.state.scaleY ? this.state.scaleY * y : y;\n        const visibleWidth = this.width / this.state.scaleX;\n        const visibleHeight = this.height / this.state.scaleY;\n        this.setViewBox(0, 0, visibleWidth, visibleHeight);\n        return this;\n    }\n    /**\n     * 1 arg: string in the \"x y w h\" format\n     * 4 args: x:number, y:number, w:number, h:number\n     */\n    setViewBox(viewBox_or_minX, minY, width, height) {\n        if (typeof viewBox_or_minX === 'string') {\n            this.svg.setAttribute('viewBox', viewBox_or_minX);\n        }\n        else {\n            const viewBoxString = viewBox_or_minX + ' ' + minY + ' ' + width + ' ' + height;\n            this.svg.setAttribute('viewBox', viewBoxString);\n        }\n    }\n    // ### Drawing helper methods:\n    applyAttributes(element, attributes) {\n        const attrNamesToIgnore = ATTRIBUTES_TO_IGNORE[element.nodeName];\n        for (const attrName in attributes) {\n            if (attrNamesToIgnore && attrNamesToIgnore[attrName]) {\n                continue;\n            }\n            if (attributes[attrName] &&\n                (this.groupAttributes.length == 0 ||\n                    attributes[attrName] != this.groupAttributes[this.groupAttributes.length - 1][attrName]))\n                element.setAttributeNS(null, attrName, attributes[attrName]);\n        }\n        return element;\n    }\n    // ### Shape & Path Methods:\n    clear() {\n        // Clear the SVG by removing all inner children.\n        // (This approach is usually slightly more efficient\n        // than removing the old SVG & adding a new one to\n        // the container element, since it does not cause the\n        // container to resize twice.  Also, the resize\n        // triggered by removing the entire SVG can trigger\n        // a touchcancel event when the element resizes away\n        // from a touch point.)\n        while (this.svg.lastChild) {\n            this.svg.removeChild(this.svg.lastChild);\n        }\n        // Replace the viewbox attribute we just removed.\n        this.scale(this.state.scaleX, this.state.scaleY);\n    }\n    // ## Rectangles:\n    rect(x, y, width, height, attributes) {\n        // Avoid invalid negative height attributes by flipping the rectangle on its head:\n        if (height < 0) {\n            y += height;\n            height *= -1;\n        }\n        const rectangle = this.create('rect');\n        attributes = attributes !== null && attributes !== void 0 ? attributes : { fill: 'none', 'stroke-width': this.lineWidth, stroke: 'black' };\n        x = this.round(x);\n        y = this.round(y);\n        width = this.round(width);\n        height = this.round(height);\n        this.applyAttributes(rectangle, Object.assign({ x, y, width, height }, attributes));\n        this.add(rectangle);\n        return this;\n    }\n    fillRect(x, y, width, height) {\n        const attributes = { fill: this.attributes.fill, stroke: 'none' };\n        this.rect(x, y, width, height, attributes);\n        return this;\n    }\n    clearRect(x, y, width, height) {\n        // Currently this fills a rect with the backgroundFillStyle, rather\n        // than \"cut a hole\" into the existing shapes.\n        //\n        // Since tabNote seems to be the only module that makes use of this\n        // it may be worth creating a separate tabStave that would\n        // draw lines around locations of tablature fingering.\n        this.rect(x, y, width, height, { fill: this.backgroundFillStyle, stroke: 'none' });\n        return this;\n    }\n    // ## Paths:\n    beginPath() {\n        this.path = '';\n        this.pen.x = NaN;\n        this.pen.y = NaN;\n        return this;\n    }\n    moveTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'M' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    lineTo(x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        this.path += 'L' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    bezierCurveTo(x1, y1, x2, y2, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        x2 = this.round(x2);\n        y2 = this.round(y2);\n        this.path += 'C' + x1 + ' ' + y1 + ',' + x2 + ' ' + y2 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    quadraticCurveTo(x1, y1, x, y) {\n        x = this.round(x);\n        y = this.round(y);\n        x1 = this.round(x1);\n        y1 = this.round(y1);\n        this.path += 'Q' + x1 + ' ' + y1 + ',' + x + ' ' + y;\n        this.pen.x = x;\n        this.pen.y = y;\n        return this;\n    }\n    arc(x, y, radius, startAngle, endAngle, counterclockwise) {\n        let x0 = x + radius * Math.cos(startAngle);\n        let y0 = y + radius * Math.sin(startAngle);\n        x0 = this.round(x0);\n        y0 = this.round(y0);\n        // svg behavior different from canvas.  Don't normalize angles if\n        // we are drawing a circle because they both normalize to 0\n        const tmpStartTest = normalizeAngle(startAngle);\n        const tmpEndTest = normalizeAngle(endAngle);\n        if ((!counterclockwise && endAngle - startAngle >= TWO_PI) ||\n            (counterclockwise && startAngle - endAngle >= TWO_PI) ||\n            tmpStartTest === tmpEndTest) {\n            let x1 = x + radius * Math.cos(startAngle + Math.PI);\n            let y1 = y + radius * Math.sin(startAngle + Math.PI);\n            // There's no way to specify a completely circular arc in SVG so we have to\n            // use two semi-circular arcs.\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 0 0 ${x1} ${y1} `;\n            this.path += `A${radius} ${radius} 0 0 0 ${x0} ${y0}`;\n            this.pen.x = x0;\n            this.pen.y = y0;\n        }\n        else {\n            let x1 = x + radius * Math.cos(endAngle);\n            let y1 = y + radius * Math.sin(endAngle);\n            startAngle = tmpStartTest;\n            endAngle = tmpEndTest;\n            let large;\n            if (Math.abs(endAngle - startAngle) < Math.PI) {\n                large = counterclockwise;\n            }\n            else {\n                large = !counterclockwise;\n            }\n            if (startAngle > endAngle) {\n                large = !large;\n            }\n            const sweep = !counterclockwise;\n            x1 = this.round(x1);\n            y1 = this.round(y1);\n            radius = this.round(radius);\n            this.path += `M${x0} ${y0} A${radius} ${radius} 0 ${+large} ${+sweep} ${x1} ${y1}`;\n            this.pen.x = x1;\n            this.pen.y = y1;\n        }\n        return this;\n    }\n    closePath() {\n        this.path += 'Z';\n        return this;\n    }\n    getShadowStyle() {\n        const sa = this.shadow_attributes;\n        // A CSS drop-shadow filter blur looks different than a canvas shadowBlur\n        // of the same radius, so we scale the drop-shadow radius here to make it\n        // look close to the canvas shadow.\n        return `filter: drop-shadow(0 0 ${sa.width / 1.5}px ${sa.color})`;\n    }\n    fill(attributes) {\n        const path = this.create('path');\n        if (typeof attributes === 'undefined') {\n            attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none' });\n        }\n        attributes.d = this.path;\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    stroke() {\n        const path = this.create('path');\n        const attributes = Object.assign(Object.assign({}, this.attributes), { fill: 'none', 'stroke-width': this.lineWidth, d: this.path });\n        if (this.shadow_attributes.width > 0) {\n            attributes.style = this.getShadowStyle();\n        }\n        this.applyAttributes(path, attributes);\n        this.add(path);\n        return this;\n    }\n    // ## Text Methods:\n    measureText(text) {\n        return SVGContext.measureTextCache.lookup(text, this.svg, this.attributes);\n    }\n    fillText(text, x, y) {\n        if (!text || text.length <= 0) {\n            return this;\n        }\n        x = this.round(x);\n        y = this.round(y);\n        const attributes = Object.assign(Object.assign({}, this.attributes), { stroke: 'none', x,\n            y });\n        const txt = this.create('text');\n        txt.textContent = text;\n        this.applyAttributes(txt, attributes);\n        this.add(txt);\n        return this;\n    }\n    // TODO: State should be deep-copied.\n    save() {\n        this.state_stack.push({\n            state: {\n                'font-family': this.state['font-family'],\n                'font-weight': this.state['font-weight'],\n                'font-style': this.state['font-style'],\n                'font-size': this.state['font-size'],\n                scale: this.state.scale,\n            },\n            attributes: {\n                'font-family': this.attributes['font-family'],\n                'font-weight': this.attributes['font-weight'],\n                'font-style': this.attributes['font-style'],\n                'font-size': this.attributes['font-size'],\n                fill: this.attributes.fill,\n                stroke: this.attributes.stroke,\n                'stroke-width': this.attributes['stroke-width'],\n                'stroke-dasharray': this.attributes['stroke-dasharray'],\n            },\n            shadow_attributes: {\n                width: this.shadow_attributes.width,\n                color: this.shadow_attributes.color,\n            },\n            lineWidth: this.lineWidth,\n        });\n        return this;\n    }\n    // TODO: State should be deep-restored.\n    restore() {\n        const savedState = this.state_stack.pop();\n        if (savedState) {\n            const state = savedState;\n            this.state['font-family'] = state.state['font-family'];\n            this.state['font-weight'] = state.state['font-weight'];\n            this.state['font-style'] = state.state['font-style'];\n            this.state['font-size'] = state.state['font-size'];\n            this.state.scale = state.state.scale;\n            this.attributes['font-family'] = state.attributes['font-family'];\n            this.attributes['font-weight'] = state.attributes['font-weight'];\n            this.attributes['font-style'] = state.attributes['font-style'];\n            this.attributes['font-size'] = state.attributes['font-size'];\n            this.attributes.fill = state.attributes.fill;\n            this.attributes.stroke = state.attributes.stroke;\n            this.attributes['stroke-width'] = state.attributes['stroke-width'];\n            this.attributes['stroke-dasharray'] = state.attributes['stroke-dasharray'];\n            this.shadow_attributes.width = state.shadow_attributes.width;\n            this.shadow_attributes.color = state.shadow_attributes.color;\n            this.lineWidth = state.lineWidth;\n        }\n        return this;\n    }\n    set fillStyle(style) {\n        this.setFillStyle(style);\n    }\n    get fillStyle() {\n        return this.attributes.fill;\n    }\n    set strokeStyle(style) {\n        this.setStrokeStyle(style);\n    }\n    get strokeStyle() {\n        return this.attributes.stroke;\n    }\n    /**\n     * @param f is 1) a `FontInfo` object or\n     *             2) a string formatted as CSS font shorthand (e.g., 'bold 10pt Arial') or\n     *             3) a string representing the font family (one of `size`, `weight`, or `style` must also be provided).\n     * @param size a string specifying the font size and unit (e.g., '16pt'), or a number (the unit is assumed to be 'pt').\n     * @param weight is a string (e.g., 'bold', 'normal') or a number (100, 200, ... 900). It is inserted\n     *               into the font-weight attribute (e.g., font-weight=\"bold\")\n     * @param style is a string (e.g., 'italic', 'normal') that is inserted into the\n     *              font-style attribute (e.g., font-style=\"italic\")\n     */\n    setFont(f, size, weight, style) {\n        const fontInfo = Font.validate(f, size, weight, style);\n        this.fontCSSString = Font.toCSSString(fontInfo);\n        const fontAttributes = {\n            'font-family': fontInfo.family,\n            'font-size': fontInfo.size,\n            'font-weight': fontInfo.weight,\n            'font-style': fontInfo.style,\n        };\n        this.attributes = Object.assign(Object.assign({}, this.attributes), fontAttributes);\n        this.state = Object.assign(Object.assign({}, this.state), fontAttributes);\n        return this;\n    }\n    /** Return a string of the form `'italic bold 15pt Arial'` */\n    getFont() {\n        return this.fontCSSString;\n    }\n}\nSVGContext.measureTextCache = new MeasureTextCache();\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { CanvasContext } from './canvascontext';\nimport { SVGContext } from './svgcontext';\nimport { isRenderContext } from './typeguard';\nimport { RuntimeError } from './util';\nimport { isHTMLCanvas, isHTMLDiv } from './web';\nexport var RendererBackends;\n(function (RendererBackends) {\n    RendererBackends[RendererBackends[\"CANVAS\"] = 1] = \"CANVAS\";\n    RendererBackends[RendererBackends[\"SVG\"] = 2] = \"SVG\";\n})(RendererBackends || (RendererBackends = {}));\n// End of line types\nexport var RendererLineEndType;\n(function (RendererLineEndType) {\n    RendererLineEndType[RendererLineEndType[\"NONE\"] = 1] = \"NONE\";\n    RendererLineEndType[RendererLineEndType[\"UP\"] = 2] = \"UP\";\n    RendererLineEndType[RendererLineEndType[\"DOWN\"] = 3] = \"DOWN\";\n})(RendererLineEndType || (RendererLineEndType = {}));\n/**\n * Support Canvas & SVG rendering contexts.\n */\nexport class Renderer {\n    static buildContext(elementId, backend, width, height, background = '#FFF') {\n        const renderer = new Renderer(elementId, backend);\n        if (width && height) {\n            renderer.resize(width, height);\n        }\n        const ctx = renderer.getContext();\n        ctx.setBackgroundFillStyle(background);\n        Renderer.lastContext = ctx;\n        return ctx;\n    }\n    static getCanvasContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.CANVAS, width, height, background);\n    }\n    static getSVGContext(elementId, width, height, background) {\n        return Renderer.buildContext(elementId, Renderer.Backends.SVG, width, height, background);\n    }\n    // Draw a dashed line (horizontal, vertical or diagonal\n    // dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n    // setting the second number to 0 draws a solid line.\n    static drawDashedLine(context, fromX, fromY, toX, toY, dashPattern) {\n        context.beginPath();\n        const dx = toX - fromX;\n        const dy = toY - fromY;\n        const angle = Math.atan2(dy, dx);\n        let x = fromX;\n        let y = fromY;\n        context.moveTo(fromX, fromY);\n        let idx = 0;\n        let draw = true;\n        while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n            const dashLength = dashPattern[idx++ % dashPattern.length];\n            const nx = x + Math.cos(angle) * dashLength;\n            x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n            const ny = y + Math.sin(angle) * dashLength;\n            y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n            if (draw) {\n                context.lineTo(x, y);\n            }\n            else {\n                context.moveTo(x, y);\n            }\n            draw = !draw;\n        }\n        context.closePath();\n        context.stroke();\n    }\n    constructor(arg0, arg1) {\n        if (isRenderContext(arg0)) {\n            // The user has provided what looks like a RenderContext, let's just use it.\n            this.ctx = arg0;\n        }\n        else {\n            if (arg1 === undefined) {\n                // The backend must be specified if the render context isn't directly provided.\n                throw new RuntimeError('InvalidArgument', 'Missing backend argument');\n            }\n            const backend = arg1;\n            let element;\n            if (typeof arg0 == 'string') {\n                const maybeElement = document.getElementById(arg0);\n                if (!maybeElement) {\n                    throw new RuntimeError('BadElementId', `Can't find element with ID \"${maybeElement}\"`);\n                }\n                element = maybeElement;\n            }\n            else {\n                element = arg0;\n            }\n            // Verify backend and create context\n            if (backend === Renderer.Backends.CANVAS) {\n                if (!isHTMLCanvas(element)) {\n                    throw new RuntimeError('BadElement', 'CANVAS context requires an HTMLCanvasElement.');\n                }\n                const context = element.getContext('2d', { willReadFrequently: true });\n                if (!context) {\n                    throw new RuntimeError('BadElement', \"Can't get canvas context\");\n                }\n                this.ctx = new CanvasContext(context);\n            }\n            else if (backend === Renderer.Backends.SVG) {\n                if (!isHTMLDiv(element)) {\n                    throw new RuntimeError('BadElement', 'SVG context requires an HTMLDivElement.');\n                }\n                this.ctx = new SVGContext(element);\n            }\n            else {\n                throw new RuntimeError('InvalidBackend', `No support for backend: ${backend}`);\n            }\n        }\n    }\n    resize(width, height) {\n        this.ctx.resize(width, height);\n        return this;\n    }\n    getContext() {\n        return this.ctx;\n    }\n}\nRenderer.Backends = RendererBackends;\nRenderer.LineEndType = RendererLineEndType;\n// Used by vexflow_test_helpers.ts\n// Should this be private?\n// Can we do this in a cleaner way?\nRenderer.lastContext = undefined;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var TextJustification;\n(function (TextJustification) {\n    TextJustification[TextJustification[\"LEFT\"] = 1] = \"LEFT\";\n    TextJustification[TextJustification[\"CENTER\"] = 2] = \"CENTER\";\n    TextJustification[TextJustification[\"RIGHT\"] = 3] = \"RIGHT\";\n})(TextJustification || (TextJustification = {}));\n/**\n * `TextNote` is a notation element that is positioned in time. Generally\n * meant for objects that sit above/below the staff and inline with each other.\n * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n * Examples of this would be such as dynamics, lyrics, chord changes, etc.\n */\nexport class TextNote extends Note {\n    static get CATEGORY() {\n        return Category.TextNote;\n    }\n    /** Glyph data. */\n    static get GLYPHS() {\n        return {\n            segno: {\n                code: 'segno',\n            },\n            tr: {\n                code: 'ornamentTrill',\n            },\n            mordent: {\n                code: 'ornamentMordent',\n            },\n            mordent_upper: {\n                code: 'ornamentShortTrill',\n            },\n            mordent_lower: {\n                code: 'ornamentMordent',\n            },\n            f: {\n                code: 'dynamicForte',\n            },\n            p: {\n                code: 'dynamicPiano',\n            },\n            m: {\n                code: 'dynamicMezzo',\n            },\n            s: {\n                code: 'dynamicSforzando',\n            },\n            z: {\n                code: 'dynamicZ',\n            },\n            coda: {\n                code: 'coda',\n            },\n            pedal_open: {\n                code: 'keyboardPedalPed',\n            },\n            pedal_close: {\n                code: 'keyboardPedalUp',\n            },\n            caesura_straight: {\n                code: 'caesura',\n            },\n            caesura_curved: {\n                code: 'caesuraCurved',\n            },\n            breath: {\n                code: 'breathMarkComma',\n            },\n            tick: {\n                code: 'breathMarkTick',\n            },\n            turn: {\n                code: 'ornamentTurn',\n            },\n            turn_inverted: {\n                code: 'ornamentTurnSlash',\n            },\n        };\n    }\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.text = noteStruct.text || '';\n        this.superscript = noteStruct.superscript;\n        this.subscript = noteStruct.subscript;\n        this.setFont(noteStruct.font);\n        this.line = noteStruct.line || 0;\n        this.smooth = noteStruct.smooth || false;\n        this.ignore_ticks = noteStruct.ignore_ticks || false;\n        this.justification = TextJustification.LEFT;\n        // Determine and set initial note width. Note that the text width is\n        // an approximation and isn't very accurate. The only way to accurately\n        // measure the length of text is with `CanvasRenderingContext2D.measureText()`.\n        if (noteStruct.glyph) {\n            const struct = TextNote.GLYPHS[noteStruct.glyph];\n            if (!struct)\n                throw new RuntimeError('Invalid glyph type: ' + noteStruct.glyph);\n            this.glyph = new Glyph(struct.code, Tables.NOTATION_FONT_SCALE, { category: 'textNote' });\n            this.setWidth(this.glyph.getMetrics().width);\n        }\n        else {\n            this.glyph = undefined;\n        }\n    }\n    /** Set the horizontal justification of the TextNote. */\n    setJustification(just) {\n        this.justification = just;\n        return this;\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Return the Stave line on which the TextNote is placed. */\n    getLine() {\n        return this.line;\n    }\n    /** Return the unformatted text of this TextNote. */\n    getText() {\n        return this.text;\n    }\n    /** Pre-render formatting. */\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        const tickContext = this.checkTickContext(`Can't preformat without a TickContext.`);\n        if (this.smooth) {\n            this.setWidth(0);\n        }\n        else {\n            if (this.glyph) {\n                // Width already set.\n            }\n            else {\n                const ctx = this.checkContext();\n                ctx.setFont(this.textFont);\n                this.setWidth(ctx.measureText(this.text).width);\n            }\n        }\n        if (this.justification === TextJustification.CENTER) {\n            this.leftDisplacedHeadPx = this.width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            this.leftDisplacedHeadPx = this.width;\n        }\n        // We reposition to the center of the note head\n        this.rightDisplacedHeadPx = tickContext.getMetrics().glyphPx / 2;\n        this.preFormatted = true;\n    }\n    /**\n     * Renders the TextNote.\n     * `TextNote` has to be assigned to a `Stave` before rendering by means of `setStave`.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        const tickContext = this.checkTickContext(`Can't draw without a TickContext.`);\n        this.setRendered();\n        // Reposition to center of note head\n        let x = this.getAbsoluteX() + tickContext.getMetrics().glyphPx / 2;\n        // Align based on tick-context width.\n        const width = this.getWidth();\n        if (this.justification === TextJustification.CENTER) {\n            x -= width / 2;\n        }\n        else if (this.justification === TextJustification.RIGHT) {\n            x -= width;\n        }\n        let y;\n        if (this.glyph) {\n            y = stave.getYForLine(this.line + -3);\n            this.glyph.render(ctx, x, y);\n        }\n        else {\n            y = stave.getYForLine(this.line + -3);\n            this.applyStyle(ctx);\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.text, x, y);\n            const height = ctx.measureText(this.text).height;\n            // We called this.setFont(...) in the constructor, so we know this.textFont is available.\n            // eslint-disable-next-line\n            const { family, size, weight, style } = this.textFont;\n            // Scale the font size by 1/1.3.\n            const smallerFontSize = Font.scaleSize(size, 0.769231);\n            if (this.superscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.superscript, x + this.width + 2, y - height / 2.2);\n            }\n            if (this.subscript) {\n                ctx.setFont(family, smallerFontSize, weight, style);\n                ctx.fillText(this.subscript, x + this.width + 2, y + height / 2.2 - 1);\n            }\n            this.restoreStyle(ctx);\n        }\n    }\n}\nTextNote.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 12,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\nTextNote.Justification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { Category } from './typeguard';\nexport var VoltaType;\n(function (VoltaType) {\n    VoltaType[VoltaType[\"NONE\"] = 1] = \"NONE\";\n    VoltaType[VoltaType[\"BEGIN\"] = 2] = \"BEGIN\";\n    VoltaType[VoltaType[\"MID\"] = 3] = \"MID\";\n    VoltaType[VoltaType[\"END\"] = 4] = \"END\";\n    VoltaType[VoltaType[\"BEGIN_END\"] = 5] = \"BEGIN_END\";\n})(VoltaType || (VoltaType = {}));\nexport class Volta extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Volta;\n    }\n    static get type() {\n        return VoltaType;\n    }\n    constructor(type, number, x, y_shift) {\n        super();\n        this.volta = type;\n        this.x = x;\n        this.y_shift = y_shift;\n        this.number = number;\n        this.resetFont();\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        let width = stave.getWidth() - x; // don't include x (offset) for width\n        const top_y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        const vert_height = 1.5 * stave.getSpacingBetweenLines();\n        switch (this.volta) {\n            case VoltaType.BEGIN:\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                break;\n            case VoltaType.END:\n                width -= 5;\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            case VoltaType.BEGIN_END:\n                width -= 3;\n                ctx.fillRect(this.x + x, top_y, 1, vert_height);\n                ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n                break;\n            default:\n                break;\n        }\n        // If the beginning of a volta, draw measure number\n        if (this.volta === VoltaType.BEGIN || this.volta === VoltaType.BEGIN_END) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n            ctx.restore();\n        }\n        ctx.fillRect(this.x + x, top_y, width, 1);\n        return this;\n    }\n}\nVolta.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 9,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { Renderer } from './renderer';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isStaveNote, isStemmableNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StringNumber extends Modifier {\n    static get CATEGORY() {\n        return Category.StringNumber;\n    }\n    static get metrics() {\n        var _a;\n        return ((_a = Tables.currentMusicFont().getMetrics().stringNumber) !== null && _a !== void 0 ? _a : {\n            verticalPadding: 0,\n            stemPadding: 0,\n            leftPadding: 0,\n            rightPadding: 0,\n        });\n    }\n    // ## Static Methods\n    // Arrange string numbers inside a `ModifierContext`\n    static format(nums, state) {\n        /**\n         * The modifier context's left_shift state.\n         */\n        const left_shift = state.left_shift;\n        /**\n         * The modifier context's right_shift state.\n         */\n        const right_shift = state.right_shift;\n        const num_spacing = 1;\n        if (!nums || nums.length === 0)\n            return false;\n        const nums_list = [];\n        let prev_note = null;\n        let extraXSpaceForDisplacedNotehead = 0;\n        let shift_right = 0;\n        const modLines = 0;\n        for (let i = 0; i < nums.length; ++i) {\n            const num = nums[i];\n            const note = num.getNote();\n            const pos = num.getPosition();\n            if (!isStaveNote(note)) {\n                throw new RuntimeError('NoStaveNote');\n            }\n            const index = num.checkIndex();\n            const props = note.getKeyProps()[index];\n            const mc = note.getModifierContext();\n            const verticalSpaceNeeded = (num.radius * 2) / Tables.STAVE_LINE_DISTANCE + 0.5;\n            if (mc) {\n                if (pos === ModifierPosition.ABOVE) {\n                    num.text_line = mc.getState().top_text_line;\n                    state.top_text_line += verticalSpaceNeeded;\n                }\n                else if (pos === ModifierPosition.BELOW) {\n                    num.text_line = mc.getState().text_line;\n                    state.text_line += verticalSpaceNeeded;\n                }\n            }\n            if (note !== prev_note) {\n                for (let n = 0; n < note.keys.length; ++n) {\n                    if (pos === Modifier.Position.LEFT) {\n                        extraXSpaceForDisplacedNotehead = Math.max(note.getLeftDisplacedHeadPx(), extraXSpaceForDisplacedNotehead);\n                    }\n                    if (right_shift === 0) {\n                        shift_right = Math.max(note.getRightDisplacedHeadPx(), shift_right);\n                    }\n                }\n                prev_note = note;\n            }\n            const glyphLine = modLines === 0 ? props.line : modLines;\n            nums_list.push({\n                pos,\n                note,\n                num,\n                line: glyphLine,\n                shiftL: extraXSpaceForDisplacedNotehead,\n                shiftR: shift_right,\n            });\n        }\n        // Sort string numbers by line number.\n        nums_list.sort((a, b) => b.line - a.line);\n        let num_shiftR = 0;\n        let x_widthL = 0;\n        let x_widthR = 0;\n        let last_line = null;\n        let last_note = null;\n        for (let i = 0; i < nums_list.length; ++i) {\n            const note = nums_list[i].note;\n            const pos = nums_list[i].pos;\n            const num = nums_list[i].num;\n            const line = nums_list[i].line;\n            const shiftR = nums_list[i].shiftR;\n            // Reset the position of the string number every line.\n            if (line !== last_line || note !== last_note) {\n                num_shiftR = right_shift + shiftR;\n            }\n            const num_width = num.getWidth() + num_spacing;\n            let num_x_shift = 0;\n            if (pos === Modifier.Position.LEFT) {\n                num.setXShift(left_shift + extraXSpaceForDisplacedNotehead);\n                num_x_shift = num_width; // spacing\n                x_widthL = Math.max(num_x_shift, x_widthL);\n            }\n            else if (pos === Modifier.Position.RIGHT) {\n                num.setXShift(num_shiftR);\n                num_x_shift += num_width; // spacing\n                x_widthR = num_x_shift > x_widthR ? num_x_shift : x_widthR;\n            }\n            last_line = line;\n            last_note = note;\n        }\n        state.left_shift += x_widthL;\n        state.right_shift += x_widthR;\n        return true;\n    }\n    constructor(number) {\n        super();\n        this.string_number = number;\n        this.position = Modifier.Position.ABOVE; // Default position above stem or note head\n        this.x_shift = 0;\n        this.y_shift = 0;\n        this.text_line = 0;\n        this.stem_offset = 0;\n        this.x_offset = 0; // Horizontal offset from default\n        this.y_offset = 0; // Vertical offset from default\n        this.dashed = true; // true - draw dashed extension  false - no extension\n        this.leg = Renderer.LineEndType.NONE; // draw upward/downward leg at the of extension line\n        this.radius = 8;\n        this.drawCircle = true;\n        this.setWidth(this.radius * 2 + 4);\n        this.resetFont();\n    }\n    setLineEndType(leg) {\n        if (leg >= Renderer.LineEndType.NONE && leg <= Renderer.LineEndType.DOWN) {\n            this.leg = leg;\n        }\n        return this;\n    }\n    setStringNumber(number) {\n        this.string_number = number;\n        return this;\n    }\n    setOffsetX(x) {\n        this.x_offset = x;\n        return this;\n    }\n    setOffsetY(y) {\n        this.y_offset = y;\n        return this;\n    }\n    setLastNote(note) {\n        this.last_note = note;\n        return this;\n    }\n    setDashed(dashed) {\n        this.dashed = dashed;\n        return this;\n    }\n    setDrawCircle(drawCircle) {\n        this.drawCircle = drawCircle;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        const stemDirection = note.hasStem() ? note.getStemDirection() : Stem.UP;\n        let dot_x = start.x + this.x_shift + this.x_offset;\n        let stem_ext = {};\n        if (note.hasStem()) {\n            stem_ext = note.checkStem().getExtents();\n        }\n        let dot_y = start.y + this.y_shift + this.y_offset;\n        switch (this.position) {\n            case Modifier.Position.ABOVE:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a < b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.UP) {\n                        dot_y = stem_ext.topY + StringNumber.metrics.stemPadding;\n                    }\n                    dot_y -= this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.BELOW:\n                {\n                    const ys = note.getYs();\n                    dot_y = ys.reduce((a, b) => (a > b ? a : b));\n                    if (note.hasStem() && stemDirection == Stem.DOWN) {\n                        dot_y = stem_ext.topY - StringNumber.metrics.stemPadding;\n                    }\n                    dot_y += this.radius + StringNumber.metrics.verticalPadding + this.text_line * Tables.STAVE_LINE_DISTANCE;\n                }\n                break;\n            case Modifier.Position.LEFT:\n                dot_x -= this.radius / 2 + StringNumber.metrics.leftPadding;\n                break;\n            case Modifier.Position.RIGHT:\n                dot_x += this.radius / 2 + StringNumber.metrics.rightPadding;\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid`);\n        }\n        ctx.save();\n        if (this.drawCircle) {\n            ctx.beginPath();\n            ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n            ctx.setLineWidth(1.5);\n            ctx.stroke();\n        }\n        ctx.setFont(this.textFont);\n        const x = dot_x - ctx.measureText(this.string_number).width / 2;\n        ctx.fillText('' + this.string_number, x, dot_y + 4.5);\n        const lastNote = this.last_note;\n        if (isStemmableNote(lastNote)) {\n            // Only StemmableNote objects have getStemX().\n            const end = lastNote.getStemX() - note.getX() + 5;\n            ctx.setStrokeStyle('#000000');\n            ctx.setLineCap('round');\n            ctx.setLineWidth(0.6);\n            if (this.dashed) {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 3]);\n            }\n            else {\n                Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3, 0]);\n            }\n            let len;\n            let pattern;\n            switch (this.leg) {\n                case Renderer.LineEndType.UP:\n                    len = -10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                case Renderer.LineEndType.DOWN:\n                    len = 10;\n                    pattern = this.dashed ? [3, 3] : [3, 0];\n                    Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n                    break;\n                default:\n                    break;\n            }\n        }\n        ctx.restore();\n    }\n}\nStringNumber.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category, isNote, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nexport class Stroke extends Modifier {\n    static get CATEGORY() {\n        return Category.Stroke;\n    }\n    // Arrange strokes inside `ModifierContext`\n    static format(strokes, state) {\n        const left_shift = state.left_shift;\n        const stroke_spacing = 0;\n        if (!strokes || strokes.length === 0)\n            return false;\n        const strokeList = strokes.map((stroke) => {\n            const note = stroke.getNote();\n            const index = stroke.checkIndex();\n            if (isStaveNote(note)) {\n                // Only StaveNote objects have getKeyProps().\n                const { line } = note.getKeyProps()[index];\n                const shift = note.getLeftDisplacedHeadPx();\n                return { line, shift, stroke };\n            }\n            else if (isTabNote(note)) {\n                // Only TabNote objects have getPositions().\n                const { str: string } = note.getPositions()[index];\n                return { line: string, shift: 0, stroke };\n            }\n            else {\n                throw new RuntimeError('Internal', 'Unexpected instance.');\n            }\n        });\n        const strokeShift = left_shift;\n        // There can only be one stroke .. if more than one, they overlay each other\n        const xShift = strokeList.reduce((xShift, { stroke, shift }) => {\n            stroke.setXShift(strokeShift + shift);\n            return Math.max(stroke.getWidth() + stroke_spacing, xShift);\n        }, 0);\n        state.left_shift += xShift;\n        return true;\n    }\n    constructor(type, options) {\n        super();\n        this.options = Object.assign({ all_voices: true }, options);\n        // multi voice - span stroke across all voices if true\n        this.all_voices = this.options.all_voices;\n        // multi voice - end note of stroke, set in draw()\n        this.type = type;\n        this.position = Modifier.Position.LEFT;\n        this.render_options = {\n            font_scale: Tables.NOTATION_FONT_SCALE,\n        };\n        this.resetFont();\n        this.setXShift(0);\n        this.setWidth(10);\n    }\n    getPosition() {\n        return this.position;\n    }\n    addEndNote(note) {\n        this.note_end = note;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let ys = note.getYs();\n        let topY = start.y;\n        let botY = start.y;\n        const x = start.x - 5;\n        const line_space = note.checkStave().getSpacingBetweenLines();\n        const notes = this.checkModifierContext().getMembers(note.getCategory());\n        for (let i = 0; i < notes.length; i++) {\n            const note = notes[i];\n            if (isNote(note)) {\n                // Only Note objects have getYs().\n                // note is an instance of either StaveNote or TabNote.\n                ys = note.getYs();\n                for (let n = 0; n < ys.length; n++) {\n                    if (this.note === notes[i] || this.all_voices) {\n                        topY = Math.min(topY, ys[n]);\n                        botY = Math.max(botY, ys[n]);\n                    }\n                }\n            }\n        }\n        let arrow = '';\n        let arrow_shift_x = 0;\n        let arrow_y = 0;\n        let text_shift_x = 0;\n        let text_y = 0;\n        switch (this.type) {\n            case Stroke.Type.BRUSH_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                arrow_y = topY - line_space / 2 + 10;\n                botY += line_space / 2;\n                break;\n            case Stroke.Type.BRUSH_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = 0.5;\n                arrow_y = botY + line_space / 2;\n                topY -= line_space / 2;\n                break;\n            case Stroke.Type.ROLL_DOWN:\n            case Stroke.Type.RASQUEDO_DOWN:\n                arrow = 'arrowheadBlackUp';\n                arrow_shift_x = -3;\n                text_shift_x = this.x_shift + arrow_shift_x - 2;\n                if (isStaveNote(note)) {\n                    topY += 1.5 * line_space;\n                    if ((botY - topY) % 2 !== 0) {\n                        botY += 0.5 * line_space;\n                    }\n                    else {\n                        botY += line_space;\n                    }\n                    arrow_y = topY - line_space;\n                    text_y = botY + line_space + 2;\n                }\n                else {\n                    topY += 1.5 * line_space;\n                    botY += line_space;\n                    arrow_y = topY - 0.75 * line_space;\n                    text_y = botY + 0.25 * line_space;\n                }\n                break;\n            case Stroke.Type.ROLL_UP:\n            case Stroke.Type.RASQUEDO_UP:\n                arrow = 'arrowheadBlackDown';\n                arrow_shift_x = -4;\n                text_shift_x = this.x_shift + arrow_shift_x - 1;\n                if (isStaveNote(note)) {\n                    arrow_y = line_space / 2;\n                    topY += 0.5 * line_space;\n                    if ((botY - topY) % 2 === 0) {\n                        botY += line_space / 2;\n                    }\n                    arrow_y = botY + 0.5 * line_space;\n                    text_y = topY - 1.25 * line_space;\n                }\n                else {\n                    topY += 0.25 * line_space;\n                    botY += 0.5 * line_space;\n                    arrow_y = botY + 0.25 * line_space;\n                    text_y = topY - line_space;\n                }\n                break;\n            case Stroke.Type.ARPEGGIO_DIRECTIONLESS:\n                topY += 0.5 * line_space;\n                botY += line_space; // * 0.5 can lead to slight underlap instead of overlap sometimes\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The stroke type ${this.type} does not exist`);\n        }\n        let strokeLine = 'straight';\n        // Draw the stroke\n        if (this.type === Stroke.Type.BRUSH_DOWN || this.type === Stroke.Type.BRUSH_UP) {\n            ctx.fillRect(x + this.x_shift, topY, 1, botY - topY);\n        }\n        else {\n            strokeLine = 'wiggly';\n            if (isStaveNote(note)) {\n                for (let i = topY; i <= botY; i += line_space) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n            }\n            else {\n                let i;\n                for (i = topY; i <= botY; i += 10) {\n                    Glyph.renderGlyph(ctx, x + this.x_shift - 4, i, this.render_options.font_scale, 'vexWiggleArpeggioUp');\n                }\n                if (this.type === Stroke.Type.RASQUEDO_DOWN) {\n                    text_y = i + 0.25 * line_space;\n                }\n            }\n        }\n        if (this.type === Stroke.Type.ARPEGGIO_DIRECTIONLESS) {\n            return; // skip drawing arrow heads or text\n        }\n        // Draw the arrow head\n        Glyph.renderGlyph(ctx, x + this.x_shift + arrow_shift_x, arrow_y, this.render_options.font_scale, arrow, {\n            category: `stroke_${strokeLine}.${arrow}`,\n        });\n        // Draw the rasquedo \"R\"\n        if (this.type === Stroke.Type.RASQUEDO_DOWN || this.type === Stroke.Type.RASQUEDO_UP) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            ctx.fillText('R', x + text_shift_x, text_y);\n            ctx.restore();\n        }\n    }\n}\nStroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,\n    ROLL_UP: 4,\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6,\n    ARPEGGIO_DIRECTIONLESS: 7, // Arpeggiated chord without upwards or downwards arrow\n};\nStroke.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Font.SIZE,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Bend } from './bend';\nimport { Modifier } from './modifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n/** `Vibrato` implements diverse vibratos. */\nexport class Vibrato extends Modifier {\n    static get CATEGORY() {\n        return Category.Vibrato;\n    }\n    /** Arrange vibratos inside a `ModifierContext`. */\n    static format(vibratos, state, context) {\n        if (!vibratos || vibratos.length === 0)\n            return false;\n        // Vibratos are always on top.\n        let text_line = state.top_text_line;\n        let width = 0;\n        let shift = state.right_shift - 7;\n        // If there's a bend, drop the text line\n        const bends = context.getMembers(Bend.CATEGORY);\n        if (bends && bends.length > 0) {\n            const bendHeight = bends.map((bb) => bb.getTextHeight()).reduce((a, b) => (a > b ? a : b)) / Tables.STAVE_LINE_DISTANCE;\n            text_line = text_line - (bendHeight + 1);\n        }\n        else {\n            state.top_text_line += 1;\n        }\n        // Format Vibratos\n        for (let i = 0; i < vibratos.length; ++i) {\n            const vibrato = vibratos[i];\n            vibrato.setXShift(shift);\n            vibrato.setTextLine(text_line);\n            width += vibrato.getWidth();\n            shift += width;\n        }\n        state.right_shift += width;\n        return true;\n    }\n    constructor() {\n        super();\n        this.position = Modifier.Position.RIGHT;\n        this.render_options = {\n            harsh: false,\n            vibrato_width: 20,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n        };\n        this.setVibratoWidth(this.render_options.vibrato_width);\n    }\n    /** Set harsh vibrato. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Set vibrato width in pixels. */\n    setVibratoWidth(width) {\n        this.render_options.vibrato_width = width;\n        this.setWidth(width);\n        return this;\n    }\n    /** Draw the vibrato on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const start = note.getModifierStartXY(Modifier.Position.RIGHT, this.index);\n        const vx = start.x + this.x_shift;\n        const vy = note.getYForTopText(this.text_line) + 2;\n        Vibrato.renderVibrato(ctx, vx, vy, this.render_options);\n    }\n    /**\n     * Static rendering method that can be called from\n     * other classes (e.g. VibratoBracket).\n     */\n    static renderVibrato(ctx, x, y, opts) {\n        const { harsh, vibrato_width, wave_width, wave_girth, wave_height } = opts;\n        const num_waves = vibrato_width / wave_width;\n        ctx.beginPath();\n        let i;\n        if (harsh) {\n            ctx.moveTo(x, y + wave_girth + 1);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x + wave_width, y - wave_height / 2);\n                x += wave_width;\n                ctx.lineTo(x + wave_width, y + wave_height / 2);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.lineTo(x - wave_width, y - wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n                ctx.lineTo(x - wave_width, y + wave_height / 2 + wave_girth + 1);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n        else {\n            ctx.moveTo(x, y + wave_girth);\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x + wave_width / 2, y - wave_height / 2, x + wave_width, y);\n                x += wave_width;\n                ctx.quadraticCurveTo(x + wave_width / 2, y + wave_height / 2, x + wave_width, y);\n                x += wave_width;\n            }\n            for (i = 0; i < num_waves / 2; ++i) {\n                ctx.quadraticCurveTo(x - wave_width / 2, y + wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n                ctx.quadraticCurveTo(x - wave_width / 2, y - wave_height / 2 + wave_girth, x - wave_width, y + wave_girth);\n                x -= wave_width;\n            }\n            ctx.fill();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of members to notes (e.g. bends,\n// fingering positions etc.).  The ModifierContext works with tickables\n// that are at the same tick to ensure that they and their modifiers\n// all have proper alignment.  (Note that the ModifierContext also\n// runs the spacing of the tickable).\n//\n// see https://github.com/0xfe/vexflow/wiki/How-Formatting-Works\nimport { Accidental } from './accidental';\nimport { Annotation } from './annotation';\nimport { Articulation } from './articulation';\nimport { Bend } from './bend';\nimport { ChordSymbol } from './chordsymbol';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { StaveNote } from './stavenote';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\nimport { Vibrato } from './vibrato';\n// To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (ModifierContext.DEBUG)\n        log('Vex.Flow.ModifierContext', args);\n}\nexport class ModifierContext {\n    constructor() {\n        // Formatting data.\n        this.state = {\n            left_shift: 0,\n            right_shift: 0,\n            text_line: 0,\n            top_text_line: 0,\n        };\n        // Current members -- a mapping of Category (string) to a list of Tickables, Modifiers,\n        // StaveNotes, TabNotes, etc.\n        this.members = {};\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.formatted = false;\n        this.width = 0;\n        this.spacing = 0;\n    }\n    addModifier(member) {\n        L('addModifier is deprecated, use addMember instead.');\n        return this.addMember(member);\n    }\n    /**\n     * this.members maps CATEGORY strings to arrays of Tickable | Modifier | StaveNote | TabNote.\n     * Here we add a new member to this.members, and create a new array if needed.\n     * @param member\n     * @returns this\n     */\n    addMember(member) {\n        const category = member.getCategory();\n        if (!this.members[category]) {\n            this.members[category] = [];\n        }\n        this.members[category].push(member);\n        member.setModifierContext(this);\n        this.preFormatted = false;\n        return this;\n    }\n    /**\n     * @deprecated\n     */\n    getModifiers(category) {\n        L('getModifiers is deprecated, use getMembers instead.');\n        return this.getMembers(category);\n    }\n    getMembers(category) {\n        var _a;\n        return (_a = this.members[category]) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get the width of the entire\n     */\n    getWidth() {\n        return this.width;\n    }\n    getLeftShift() {\n        return this.state.left_shift;\n    }\n    getRightShift() {\n        return this.state.right_shift;\n    }\n    getState() {\n        return this.state;\n    }\n    getMetrics() {\n        if (!this.formatted) {\n            throw new RuntimeError('UnformattedMember', 'Unformatted member has no metrics.');\n        }\n        return {\n            width: this.state.left_shift + this.state.right_shift + this.spacing,\n            spacing: this.spacing,\n        };\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        L('Preformatting ModifierContext');\n        const state = this.state;\n        const members = this.members;\n        // The ordering below determines when different members are formatted and rendered.\n        StaveNote.format(members[Category.StaveNote], state);\n        Parenthesis.format(members[Category.Parenthesis], state);\n        Dot.format(members[Category.Dot], state);\n        FretHandFinger.format(members[Category.FretHandFinger], state);\n        Accidental.format(members[Category.Accidental], state);\n        Stroke.format(members[Category.Stroke], state);\n        GraceNoteGroup.format(members[Category.GraceNoteGroup], state);\n        NoteSubGroup.format(members[Category.NoteSubGroup], state);\n        StringNumber.format(members[Category.StringNumber], state);\n        Articulation.format(members[Category.Articulation], state);\n        Ornament.format(members[Category.Ornament], state);\n        Annotation.format(members[Category.Annotation], state);\n        ChordSymbol.format(members[Category.ChordSymbol], state);\n        Bend.format(members[Category.Bend], state);\n        Vibrato.format(members[Category.Vibrato], state, this);\n        // Update width of this member context\n        this.width = state.left_shift + state.right_shift;\n        this.preFormatted = true;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        L('Postformatting ModifierContext');\n        // If post-formatting is required for an element, add more lines below.\n        StaveNote.postFormat(this.getMembers(Category.StaveNote));\n    }\n}\nModifierContext.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n// MIT License\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Clef.DEBUG)\n        log('Vex.Flow.Clef', args);\n}\n/**\n * Clef implements various types of clefs that can be rendered on a stave.\n *\n * See `tests/clef_tests.ts` for usage examples.\n */\nexport class Clef extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Clef;\n    }\n    /**\n     * Every clef name is associated with a glyph code from the font file\n     * and a default stave line number.\n     */\n    static get types() {\n        return {\n            treble: {\n                code: 'gClef',\n                line: 3,\n            },\n            bass: {\n                code: 'fClef',\n                line: 1,\n            },\n            alto: {\n                code: 'cClef',\n                line: 2,\n            },\n            tenor: {\n                code: 'cClef',\n                line: 1,\n            },\n            percussion: {\n                code: 'unpitchedPercussionClef1',\n                line: 2,\n            },\n            soprano: {\n                code: 'cClef',\n                line: 4,\n            },\n            'mezzo-soprano': {\n                code: 'cClef',\n                line: 3,\n            },\n            'baritone-c': {\n                code: 'cClef',\n                line: 0,\n            },\n            'baritone-f': {\n                code: 'fClef',\n                line: 2,\n            },\n            subbass: {\n                code: 'fClef',\n                line: 0,\n            },\n            french: {\n                code: 'gClef',\n                line: 4,\n            },\n            tab: {\n                code: '6stringTabClef',\n                line: 2.5,\n            },\n        };\n    }\n    static get annotationSmufl() {\n        return {\n            '8va': 'timeSig8',\n            '8vb': 'timeSig8',\n        };\n    }\n    /** Create a new clef. */\n    constructor(type, size, annotation) {\n        super();\n        /**\n         * The attribute `clef` must be a key from\n         * `Clef.types`\n         */\n        this.clef = Clef.types['treble'];\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setType(type, size, annotation);\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clef_${this.size}`));\n        L('Creating clef:', type);\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.clef = Clef.types[type];\n        if (size === undefined) {\n            this.size = 'default';\n        }\n        else {\n            this.size = size;\n        }\n        const musicFont = Tables.currentMusicFont();\n        // If an annotation, such as 8va, is specified, add it to the Clef object.\n        if (annotation !== undefined) {\n            const code = Clef.annotationSmufl[annotation];\n            const point = (Clef.getPoint(this.size) / 5) * 3;\n            const line = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.line`);\n            const x_shift = musicFont.lookupMetric(`clef_${this.size}.annotations.${annotation}.${this.type}.shiftX`);\n            this.annotation = { code, point, line, x_shift };\n            this.attachment = new Glyph(this.annotation.code, this.annotation.point);\n            this.attachment.metrics.x_max = 0;\n            this.attachment.setXShift(this.annotation.x_shift);\n        }\n        else {\n            this.annotation = undefined;\n        }\n        return this;\n    }\n    /** Get clef width. */\n    getWidth() {\n        if (this.type === 'tab') {\n            defined(this.stave, 'ClefError', \"Can't get width without stave.\");\n        }\n        return this.width;\n    }\n    /** Get point for clefs. */\n    static getPoint(size) {\n        // for sizes other than 'default', clef is 2/3 of the default value\n        return size == 'default' ? Tables.NOTATION_FONT_SCALE : (Tables.NOTATION_FONT_SCALE / 3) * 2;\n    }\n    /** Set associated stave. */\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    /** Render clef. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('clef', this.getAttribute('id'));\n        Glyph.renderGlyph(ctx, this.x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clef_${this.size}`,\n        });\n        if (this.annotation !== undefined && this.attachment !== undefined) {\n            this.placeGlyphOnLine(this.attachment, stave, this.annotation.line);\n            this.attachment.setStave(stave);\n            this.attachment.setContext(ctx);\n            this.attachment.renderToStave(this.x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n/** To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`. */\nClef.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined } from './util';\nexport class KeySignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.KeySignature;\n    }\n    // Create a new Key Signature based on a `key_spec`\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super();\n        this.accList = [];\n        this.setKeySig(keySpec, cancelKeySpec, alterKeySpec);\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.glyphFontScale = Tables.NOTATION_FONT_SCALE;\n        this.glyphs = [];\n        this.xPositions = []; // relative to this.x\n        this.paddingForced = false;\n    }\n    // Add an accidental glyph to the `KeySignature` instance which represents\n    // the provided `acc`. If `nextAcc` is also provided, the appropriate\n    // spacing will be included in the glyph's position\n    convertToGlyph(acc, nextAcc) {\n        const accGlyphData = Tables.accidentalCodes(acc.type);\n        const glyph = new Glyph(accGlyphData.code, this.glyphFontScale);\n        // Determine spacing between current accidental and the next accidental\n        let extraWidth = 1;\n        if (acc.type === 'n' && nextAcc) {\n            const spacing = KeySignature.accidentalSpacing[nextAcc.type];\n            if (spacing) {\n                const isAbove = nextAcc.line >= acc.line;\n                extraWidth = isAbove ? spacing.above : spacing.below;\n            }\n        }\n        // Place the glyph on the stave\n        this.placeGlyphOnLine(glyph, this.checkStave(), acc.line);\n        this.glyphs.push(glyph);\n        const xPosition = this.xPositions[this.xPositions.length - 1];\n        const glyphWidth = glyph.getMetrics().width + extraWidth;\n        // Store the next accidental's x position\n        this.xPositions.push(xPosition + glyphWidth);\n        // Expand size of key signature\n        this.width += glyphWidth;\n    }\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey(spec) {\n        this.formatted = false;\n        this.cancelKeySpec = spec;\n        return this;\n    }\n    convertToCancelAccList(spec) {\n        // Get the accidental list for the cancelled key signature\n        const cancel_accList = Tables.keySignature(spec);\n        // If the cancelled key has a different accidental type, ie: # vs b\n        const different_types = this.accList.length > 0 && cancel_accList.length > 0 && cancel_accList[0].type !== this.accList[0].type;\n        // Determine how many naturals needed to add\n        const naturals = different_types ? cancel_accList.length : cancel_accList.length - this.accList.length;\n        // Return if no naturals needed\n        if (naturals < 1)\n            return undefined;\n        // Get the line position for each natural\n        const cancelled = [];\n        for (let i = 0; i < naturals; i++) {\n            let index = i;\n            if (!different_types) {\n                index = cancel_accList.length - naturals + i;\n            }\n            const acc = cancel_accList[index];\n            cancelled.push({ type: 'n', line: acc.line });\n        }\n        // Combine naturals with main accidental list for the key signature\n        this.accList = cancelled.concat(this.accList);\n        return {\n            accList: cancelled,\n            type: cancel_accList[0].type,\n        };\n    }\n    // Deprecated\n    addToStave(stave) {\n        this.paddingForced = true;\n        stave.addModifier(this);\n        return this;\n    }\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines(clef, type, accList = this.accList) {\n        let offset = 0.0; // if clef === \"treble\"\n        let customLines; // when clef doesn't follow treble key sig shape\n        switch (clef) {\n            // Treble & Subbass both have offsets of 0, so are not included.\n            case 'soprano':\n                if (type === '#')\n                    customLines = [2.5, 0.5, 2, 0, 1.5, -0.5, 1];\n                else\n                    offset = -1;\n                break;\n            case 'mezzo-soprano':\n                if (type === 'b')\n                    customLines = [0, 2, 0.5, 2.5, 1, 3, 1.5];\n                else\n                    offset = 1.5;\n                break;\n            case 'alto':\n                offset = 0.5;\n                break;\n            case 'tenor':\n                if (type === '#')\n                    customLines = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n                else\n                    offset = -0.5;\n                break;\n            case 'baritone-f':\n            case 'baritone-c':\n                if (type === 'b')\n                    customLines = [0.5, 2.5, 1, 3, 1.5, 3.5, 2];\n                else\n                    offset = 2;\n                break;\n            case 'bass':\n            case 'french':\n                offset = 1;\n                break;\n            default:\n                break;\n        }\n        // If there's a special case, assign those lines/spaces:\n        let i;\n        if (typeof customLines !== 'undefined') {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line = customLines[i];\n            }\n        }\n        else if (offset !== 0) {\n            for (i = 0; i < accList.length; ++i) {\n                accList[i].line += offset;\n            }\n        }\n    }\n    getPadding(index) {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs.length === 0 || (!this.paddingForced && index < 2) ? 0 : this.padding;\n    }\n    getWidth() {\n        if (!this.formatted)\n            this.format();\n        return this.width;\n    }\n    setKeySig(keySpec, cancelKeySpec, alterKeySpec) {\n        this.formatted = false;\n        this.keySpec = keySpec;\n        this.cancelKeySpec = cancelKeySpec;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    // Alter the accidentals of a key spec one by one.\n    // Each alteration is a new accidental that replaces the\n    // original accidental (or the canceled one).\n    alterKey(alterKeySpec) {\n        this.formatted = false;\n        this.alterKeySpec = alterKeySpec;\n        return this;\n    }\n    convertToAlterAccList(alterKeySpec) {\n        const max = Math.min(alterKeySpec.length, this.accList.length);\n        for (let i = 0; i < max; ++i) {\n            if (alterKeySpec[i]) {\n                this.accList[i].type = alterKeySpec[i];\n            }\n        }\n    }\n    format() {\n        const stave = this.checkStave();\n        this.width = 0;\n        this.glyphs = [];\n        this.xPositions = [0]; // initialize with initial x position\n        this.accList = Tables.keySignature(defined(this.keySpec));\n        const accList = this.accList;\n        const firstAccidentalType = accList.length > 0 ? accList[0].type : undefined;\n        let cancelAccList;\n        if (this.cancelKeySpec) {\n            cancelAccList = this.convertToCancelAccList(this.cancelKeySpec);\n        }\n        if (this.alterKeySpec) {\n            this.convertToAlterAccList(this.alterKeySpec);\n        }\n        if (this.accList.length > 0) {\n            const clef = (this.position === StaveModifierPosition.END ? stave.getEndClef() : stave.getClef()) || stave.getClef();\n            if (cancelAccList) {\n                this.convertAccLines(clef, cancelAccList.type, cancelAccList.accList);\n            }\n            this.convertAccLines(clef, firstAccidentalType, accList);\n            for (let i = 0; i < this.accList.length; ++i) {\n                this.convertToGlyph(this.accList[i], this.accList[i + 1]);\n            }\n        }\n        this.formatted = true;\n    }\n    /**\n     * Return the Glyph objects making up this KeySignature.\n     */\n    getGlyphs() {\n        if (!this.formatted)\n            this.format();\n        return this.glyphs;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        if (!this.formatted)\n            this.format();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('keysignature', this.getAttribute('id'));\n        for (let i = 0; i < this.glyphs.length; i++) {\n            const glyph = this.glyphs[i];\n            const x = this.x + this.xPositions[i];\n            glyph.setStave(stave);\n            glyph.setContext(ctx);\n            glyph.renderToStave(x);\n        }\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n// Space between natural and following accidental depending\n// on vertical position\nKeySignature.accidentalSpacing = {\n    '#': {\n        above: 6,\n        below: 4,\n    },\n    b: {\n        above: 4,\n        below: 7,\n    },\n    n: {\n        above: 4,\n        below: 1,\n    },\n    '##': {\n        above: 6,\n        below: 4,\n    },\n    bb: {\n        above: 4,\n        below: 7,\n    },\n    db: {\n        above: 4,\n        below: 7,\n    },\n    d: {\n        above: 4,\n        below: 7,\n    },\n    bbs: {\n        above: 4,\n        below: 7,\n    },\n    '++': {\n        above: 6,\n        below: 4,\n    },\n    '+': {\n        above: 6,\n        below: 4,\n    },\n    '+-': {\n        above: 6,\n        below: 4,\n    },\n    '++-': {\n        above: 6,\n        below: 4,\n    },\n    bs: {\n        above: 4,\n        below: 10,\n    },\n    bss: {\n        above: 4,\n        below: 10,\n    },\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier } from './stavemodifier';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nexport class Repetition extends StaveModifier {\n    static get CATEGORY() {\n        return Category.Repetition;\n    }\n    constructor(type, x, y_shift) {\n        super();\n        this.symbol_type = type;\n        this.x = x;\n        this.x_shift = 0;\n        this.y_shift = y_shift;\n        this.resetFont();\n    }\n    setShiftX(x) {\n        this.x_shift = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.y_shift = y;\n        return this;\n    }\n    draw(stave, x) {\n        this.setRendered();\n        switch (this.symbol_type) {\n            case Repetition.type.CODA_RIGHT:\n                this.drawCodaFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.CODA_LEFT:\n                this.drawSymbolText(stave, x, 'Coda', true);\n                break;\n            case Repetition.type.SEGNO_LEFT:\n                this.drawSignoFixed(stave, x);\n                break;\n            case Repetition.type.SEGNO_RIGHT:\n                this.drawSignoFixed(stave, x + stave.getWidth());\n                break;\n            case Repetition.type.DC:\n                this.drawSymbolText(stave, x, 'D.C.', false);\n                break;\n            case Repetition.type.DC_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.C. al', true);\n                break;\n            case Repetition.type.DC_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.C. al Fine', false);\n                break;\n            case Repetition.type.DS:\n                this.drawSymbolText(stave, x, 'D.S.', false);\n                break;\n            case Repetition.type.DS_AL_CODA:\n                this.drawSymbolText(stave, x, 'D.S. al', true);\n                break;\n            case Repetition.type.DS_AL_FINE:\n                this.drawSymbolText(stave, x, 'D.S. al Fine', false);\n                break;\n            case Repetition.type.FINE:\n                this.drawSymbolText(stave, x, 'Fine', false);\n                break;\n            case Repetition.type.TO_CODA:\n                this.drawSymbolText(stave, x, 'To', true);\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n    drawCodaFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.coda.offsetY'), 40, 'coda', { category: 'coda' });\n        return this;\n    }\n    drawSignoFixed(stave, x) {\n        const y = stave.getYForTopText(stave.getNumLines()) + this.y_shift;\n        Glyph.renderGlyph(stave.checkContext(), this.x + x + this.x_shift, y + Tables.currentMusicFont().lookupMetric('staveRepetition.segno.offsetY'), 30, 'segno', { category: 'segno' });\n        return this;\n    }\n    drawSymbolText(stave, x, text, draw_coda) {\n        var _a;\n        const ctx = stave.checkContext();\n        ctx.save();\n        ctx.setFont(this.textFont);\n        let text_x = 0;\n        let symbol_x = 0;\n        const modifierWidth = stave.getNoteStartX() - this.x;\n        switch (this.symbol_type) {\n            // To the left with symbol\n            case Repetition.type.CODA_LEFT:\n                // Offset Coda text to right of stave beginning\n                text_x = this.x + stave.getVerticalBarWidth();\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n            // To the right without symbol\n            case Repetition.type.DC:\n            case Repetition.type.DC_AL_FINE:\n            case Repetition.type.DS:\n            case Repetition.type.DS_AL_FINE:\n            case Repetition.type.FINE:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width;\n                break;\n            // To the right with symbol\n            default:\n                text_x =\n                    this.x +\n                        x +\n                        this.x_shift +\n                        stave.getWidth() -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.spacing') -\n                        modifierWidth -\n                        ctx.measureText(text).width -\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                symbol_x =\n                    text_x +\n                        ctx.measureText(text).width +\n                        Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetX');\n                break;\n        }\n        const y = stave.getYForTopText(stave.getNumLines()) +\n            this.y_shift +\n            Tables.currentMusicFont().lookupMetric('staveRepetition.symbolText.offsetY');\n        if (draw_coda) {\n            Glyph.renderGlyph(ctx, symbol_x, y, Font.convertSizeToPointValue((_a = this.textFont) === null || _a === void 0 ? void 0 : _a.size) * 2, 'coda', {\n                category: 'coda',\n            });\n        }\n        ctx.fillText(text, text_x, y + 5);\n        ctx.restore();\n        return this;\n    }\n}\nRepetition.TEXT_FONT = {\n    family: Font.SERIF,\n    size: Tables.NOTATION_FONT_SCALE / 3,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\nRepetition.type = {\n    NONE: 1,\n    CODA_LEFT: 2,\n    CODA_RIGHT: 3,\n    SEGNO_LEFT: 4,\n    SEGNO_RIGHT: 5,\n    DC: 6,\n    DC_AL_CODA: 7,\n    DC_AL_FINE: 8,\n    DS: 9,\n    DS_AL_CODA: 10,\n    DS_AL_FINE: 11,\n    FINE: 12,\n    TO_CODA: 13, // To Coda at end of stave\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Larry Kuhns 2011\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier } from './stavemodifier';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nexport class StaveSection extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveSection;\n    }\n    constructor(section, x, shift_y, drawRect = true) {\n        super();\n        this.setWidth(16);\n        this.section = section;\n        this.x = x;\n        this.shift_x = 0;\n        this.shift_y = shift_y;\n        this.drawRect = drawRect;\n        this.resetFont();\n    }\n    setStaveSection(section) {\n        this.section = section;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const borderWidth = 2;\n        const padding = 2;\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(borderWidth);\n        ctx.setFont(this.textFont);\n        const textFormatter = TextFormatter.create(this.textFont);\n        const textWidth = textFormatter.getWidthForTextInPx(this.section);\n        const textY = textFormatter.getYForStringInPx(this.section);\n        const textHeight = textY.height;\n        const headroom = -1 * textY.yMin;\n        const width = textWidth + 2 * padding; // add left & right padding\n        const height = textHeight + 2 * padding; // add top & bottom padding\n        //  Seems to be a good default y\n        const y = stave.getYForTopText(1.5) + this.shift_y;\n        const x = this.x + shift_x;\n        if (this.drawRect) {\n            ctx.beginPath();\n            ctx.rect(x, y - height + headroom, width, height);\n            ctx.stroke();\n        }\n        ctx.fillText(this.section, x + padding, y - padding);\n        ctx.restore();\n        return this;\n    }\n}\nStaveSection.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Radosaw Eichler 2012\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TextFormatter } from './textformatter';\nimport { Category } from './typeguard';\nexport class StaveTempo extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveTempo;\n    }\n    constructor(tempo, x, shift_y) {\n        super();\n        /** Font size for note. */\n        this.render_options = { glyph_font_scale: 30 };\n        this.tempo = tempo;\n        this.position = StaveModifierPosition.ABOVE;\n        this.x = x;\n        this.shift_x = 10;\n        this.shift_y = shift_y;\n        this.resetFont();\n    }\n    setTempo(tempo) {\n        this.tempo = tempo;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    draw(stave, shift_x) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        const options = this.render_options;\n        const scale = options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n        const name = this.tempo.name;\n        const duration = this.tempo.duration;\n        const dots = this.tempo.dots || 0;\n        const bpm = this.tempo.bpm;\n        let x = this.x + this.shift_x + shift_x;\n        const y = stave.getYForTopText(1) + this.shift_y;\n        ctx.save();\n        const textFormatter = TextFormatter.create(this.textFont);\n        if (name) {\n            ctx.setFont(this.textFont);\n            ctx.fillText(name, x, y);\n            x += textFormatter.getWidthForTextInPx(name);\n        }\n        if (duration && bpm) {\n            // Override the weight and style.\n            const noteTextFont = Object.assign(Object.assign({}, this.textFont), { weight: 'normal', style: 'normal' });\n            ctx.setFont(noteTextFont);\n            const noteTextFormatter = TextFormatter.create(noteTextFont);\n            if (name) {\n                x += noteTextFormatter.getWidthForTextInPx('|');\n                ctx.fillText('(', x, y);\n                x += noteTextFormatter.getWidthForTextInPx('(');\n            }\n            const glyphProps = Tables.getGlyphProps(duration);\n            x += 3 * scale;\n            Glyph.renderGlyph(ctx, x, y, options.glyph_font_scale, glyphProps.code_head);\n            x += Glyph.getWidth(glyphProps.code_head, options.glyph_font_scale);\n            // Draw stem and flags\n            if (glyphProps.stem) {\n                let stem_height = 30;\n                if (glyphProps.beam_count)\n                    stem_height += 3 * (glyphProps.beam_count - 1);\n                stem_height *= scale;\n                const y_top = y - stem_height;\n                ctx.fillRect(x - scale, y_top, scale, stem_height);\n                if (glyphProps.code && glyphProps.code_flag_upstem) {\n                    const flagMetrics = Glyph.renderGlyph(ctx, x, y_top, options.glyph_font_scale, glyphProps.code_flag_upstem, {\n                        category: 'flag.staveTempo',\n                    });\n                    x += (flagMetrics.width * Tables.NOTATION_FONT_SCALE) / flagMetrics.font.getData().resolution;\n                }\n            }\n            // Draw dot\n            for (let i = 0; i < dots; i++) {\n                x += 6 * scale;\n                ctx.beginPath();\n                ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n                ctx.fill();\n            }\n            ctx.fillText(' = ' + bpm + (name ? ')' : ''), x + 3 * scale, y);\n        }\n        ctx.restore();\n        return this;\n    }\n}\nStaveTempo.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 14,\n    weight: FontWeight.BOLD,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Font, FontStyle, FontWeight } from './font';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { TextJustification, TextNote } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveText extends StaveModifier {\n    static get CATEGORY() {\n        return Category.StaveText;\n    }\n    constructor(text, position, options = {}) {\n        super();\n        this.setWidth(16);\n        this.text = text;\n        this.position = position;\n        this.options = Object.assign({ shift_x: 0, shift_y: 0, justification: TextNote.Justification.CENTER }, options);\n        this.resetFont();\n    }\n    setStaveText(text) {\n        this.text = text;\n        return this;\n    }\n    setShiftX(x) {\n        this.shift_x = x;\n        return this;\n    }\n    setShiftY(y) {\n        this.shift_y = y;\n        return this;\n    }\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    draw(stave) {\n        const ctx = stave.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        const text_width = ctx.measureText('' + this.text).width;\n        let x;\n        let y;\n        switch (this.position) {\n            case StaveModifierPosition.LEFT:\n            case StaveModifierPosition.RIGHT:\n                y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n                if (this.position === StaveModifierPosition.LEFT) {\n                    x = stave.getX() - text_width - 24 + this.options.shift_x;\n                }\n                else {\n                    x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n                }\n                break;\n            case StaveModifierPosition.ABOVE:\n            case StaveModifierPosition.BELOW:\n                x = stave.getX() + this.options.shift_x;\n                if (this.options.justification === TextJustification.CENTER) {\n                    x += stave.getWidth() / 2 - text_width / 2;\n                }\n                else if (this.options.justification === TextJustification.RIGHT) {\n                    x += stave.getWidth() - text_width;\n                }\n                if (this.position === StaveModifierPosition.ABOVE) {\n                    y = stave.getYForTopText(2) + this.options.shift_y;\n                }\n                else {\n                    y = stave.getYForBottomText(2) + this.options.shift_y;\n                }\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', 'Value Must be in Modifier.Position.');\n        }\n        ctx.fillText('' + this.text, x, y + 4);\n        ctx.restore();\n        return this;\n    }\n}\nStaveText.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Renders time signatures glyphs for staffs\n// This class is used by TimeSignature to render the associated glyphs\nimport { Glyph } from './glyph';\nimport { defined } from './util';\nexport class TimeSignatureGlyph extends Glyph {\n    constructor(timeSignature, topDigits, botDigits, code, point, options) {\n        var _a;\n        super(code, point, options);\n        this.timeSignature = timeSignature;\n        this.topGlyphs = [];\n        this.botGlyphs = [];\n        let topWidth = 0;\n        let height = 0;\n        for (let i = 0; i < topDigits.length; ++i) {\n            let timeSigType = topDigits[i];\n            switch (topDigits[i]) {\n                case '-':\n                    timeSigType = 'Minus';\n                    break;\n                case '+':\n                    timeSigType = botDigits.length > 0 ? 'PlusSmall' : 'Plus';\n                    break;\n                case '(':\n                    timeSigType = botDigits.length > 0 ? 'ParensLeftSmall' : 'ParensLeft';\n                    break;\n                case ')':\n                    timeSigType = botDigits.length > 0 ? 'ParensRightSmall' : 'ParensRight';\n                    break;\n            }\n            const topGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.topGlyphs.push(topGlyph);\n            topWidth += (_a = topGlyph.getMetrics().width) !== null && _a !== void 0 ? _a : 0;\n            height = Math.max(height, topGlyph.getMetrics().height);\n        }\n        let botWidth = 0;\n        for (let i = 0; i < botDigits.length; ++i) {\n            let timeSigType = botDigits[i];\n            switch (botDigits[i]) {\n                case '+':\n                    timeSigType = 'PlusSmall';\n                    break;\n                case '(':\n                    timeSigType = 'ParensLeftSmall';\n                    break;\n                case ')':\n                    timeSigType = 'ParensRightSmall';\n                    break;\n            }\n            const botGlyph = new Glyph('timeSig' + timeSigType, this.timeSignature.point);\n            this.botGlyphs.push(botGlyph);\n            botWidth += defined(botGlyph.getMetrics().width);\n            height = Math.max(height, botGlyph.getMetrics().height);\n        }\n        // If the height of the digits is more than two staff spaces (20), shift to the next line\n        // in order to center the digits on lines 1 and 5 rather than 2 and 4.\n        this.lineShift = height > 22 ? 1 : 0;\n        this.width = Math.max(topWidth, botWidth);\n        this.xMin = this.getMetrics().x_min;\n        this.topStartX = (this.width - topWidth) / 2.0;\n        this.botStartX = (this.width - botWidth) / 2.0;\n        this.reset();\n    }\n    getMetrics() {\n        return {\n            x_min: this.xMin,\n            x_max: this.xMin + this.width,\n            width: this.width,\n        };\n    }\n    renderToStave(x) {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        let start_x = x + this.topStartX;\n        let y = 0;\n        if (this.botGlyphs.length > 0)\n            y = stave.getYForLine(this.timeSignature.topLine - this.lineShift);\n        else\n            y = (stave.getYForLine(this.timeSignature.topLine) + stave.getYForLine(this.timeSignature.bottomLine)) / 2;\n        for (let i = 0; i < this.topGlyphs.length; ++i) {\n            const glyph = this.topGlyphs[i];\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + this.x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n        start_x = x + this.botStartX;\n        y = stave.getYForLine(this.timeSignature.bottomLine + this.lineShift);\n        for (let i = 0; i < this.botGlyphs.length; ++i) {\n            const glyph = this.botGlyphs[i];\n            this.timeSignature.placeGlyphOnLine(glyph, stave, this.timeSignature.getLine());\n            Glyph.renderOutline(ctx, glyph.getMetrics().outline, this.scale, start_x + glyph.getMetrics().x_shift, y);\n            start_x += defined(glyph.getMetrics().width);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\nimport { Glyph } from './glyph';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignatureGlyph } from './timesigglyph';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nconst assertIsValidTimeSig = (timeSpec) => {\n    const numbers = timeSpec.split('/');\n    if (numbers.length !== 2 && numbers[0] !== '+' && numbers[0] !== '-') {\n        throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must be in the form \"<numerator>/<denominator>\"`);\n    }\n    numbers.forEach((number) => {\n        // Characters consisting in number 0..9, '+', '-', '(' or ')'\n        if (/^[0-9+\\-()]+$/.test(number) == false) {\n            throw new RuntimeError('BadTimeSignature', `Invalid time spec: ${timeSpec}. Must contain valid signatures.`);\n        }\n    });\n};\n/**\n * A TimeSignature is a StaveModifier that can make its appropriate Glyphs directly from\n * a provided \"timeSpec\" such as \"4/4\", \"C|\" (cut time), or even something more advanced\n * such as \"3/4(6/8)\" or \"2/4+5/8\".\n */\nexport class TimeSignature extends StaveModifier {\n    static get CATEGORY() {\n        return Category.TimeSignature;\n    }\n    static get glyphs() {\n        return {\n            C: {\n                code: 'timeSigCommon',\n                line: 2,\n            },\n            'C|': {\n                code: 'timeSigCutCommon',\n                line: 2,\n            },\n        };\n    }\n    constructor(timeSpec = '4/4', customPadding = 15, validate_args = true) {\n        super();\n        this.timeSpec = '4/4';\n        this.line = 0;\n        this.is_numeric = true;\n        this.validate_args = validate_args;\n        const padding = customPadding;\n        // point must be defined before parsing spec.\n        const musicFont = Tables.currentMusicFont();\n        this.point = musicFont.lookupMetric('digits.point') || Tables.NOTATION_FONT_SCALE;\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.topLine = 2 + fontLineShift;\n        this.bottomLine = 4 + fontLineShift;\n        this.setPosition(StaveModifierPosition.BEGIN);\n        this.setTimeSig(timeSpec);\n        this.setPadding(padding);\n    }\n    /**\n     * Return TimeSignatureInfo given a string, consisting of line (number),\n     * num (boolean: same as TimeSignature.getIsNumeric()), and glyph (a Glyph or\n     * TimeSignatureGlyph object).\n     */\n    parseTimeSpec(timeSpec) {\n        var _a, _b;\n        if (timeSpec === 'C' || timeSpec === 'C|') {\n            const { line, code } = TimeSignature.glyphs[timeSpec];\n            return {\n                line,\n                num: false,\n                glyph: new Glyph(code, Tables.NOTATION_FONT_SCALE),\n            };\n        }\n        if (this.validate_args) {\n            assertIsValidTimeSig(timeSpec);\n        }\n        const parts = timeSpec.split('/');\n        return {\n            line: 0,\n            num: true,\n            glyph: this.makeTimeSignatureGlyph((_a = parts[0]) !== null && _a !== void 0 ? _a : '', (_b = parts[1]) !== null && _b !== void 0 ? _b : ''),\n        };\n    }\n    /**\n     * Returns a new TimeSignatureGlyph (a Glyph subclass that knows how to draw both\n     * top and bottom digits along with plus signs etc.)\n     */\n    makeTimeSignatureGlyph(topDigits, botDigits) {\n        // note that 'code' is ignored by TimeSignatureGlyph when rendering.\n        return new TimeSignatureGlyph(this, topDigits, botDigits, 'timeSig0', this.point);\n    }\n    /**\n     * Returns {line, num (=getIsNumeric), glyph} --\n     * but these can also be accessed directly w/ getters and setters.\n     */\n    getInfo() {\n        const { line, is_numeric, glyph } = this;\n        return { line, num: is_numeric, glyph };\n    }\n    /**\n     * Set a new time signature specification without changing customPadding, etc.\n     *\n     * The getter for this is `getTimeSpec` not `getTimeSig`.\n     */\n    setTimeSig(timeSpec) {\n        this.timeSpec = timeSpec;\n        const info = this.parseTimeSpec(timeSpec);\n        this.setGlyph(info.glyph);\n        this.is_numeric = info.num;\n        this.line = info.line;\n        return this;\n    }\n    /**\n     * Return the timeSpec (such as '4/4' or 'C|' or even '2/4+3/8') of the TimeSignature\n     */\n    getTimeSpec() {\n        return this.timeSpec;\n    }\n    /**\n     * Return the staff line that the TimeSignature sits on.  Generally 0 for numerator/\n     * denominator time signatures such as 3/4 and 2 for cut/common.\n     */\n    getLine() {\n        return this.line;\n    }\n    /**\n     * Set the line number that the TimeSignature sits on.  Half-values are acceptable\n     * for spaces, etc. Can be altered, for instance, for signatures that sit above the\n     * staff in large orchestral scores.\n     */\n    setLine(line) {\n        this.line = line;\n    }\n    /**\n     * Get the Glyph object used to create the time signature.  Numeric time signatures\n     * such as 3/8 have a composite Glyph stored as a single Glyph object.\n     */\n    getGlyph() {\n        return this.glyph;\n    }\n    /**\n     * Set the Glyph object used to draw the time signature, and update the width of the\n     * TimeSignature to match.  The Glyph must define width in its metrics.\n     */\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(defined(this.glyph.getMetrics().width));\n    }\n    /**\n     * Return a boolean on whether this TimeSignature is drawn with one or more numbers\n     * (such as 4/4) or not (as in cut time).\n     */\n    getIsNumeric() {\n        return this.is_numeric;\n    }\n    /**\n     * Set whether this TimeSignature is drawn with one or more numbers.\n     */\n    setIsNumeric(isNumeric) {\n        this.is_numeric = isNumeric;\n    }\n    /**\n     * Draw the time signature on a Stave using its RenderContext.  Both setStave\n     * and setContext must already be run.\n     */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('timesignature', this.getAttribute('id'));\n        this.glyph.setStave(stave);\n        this.glyph.setContext(ctx);\n        this.placeGlyphOnLine(this.glyph, stave, this.line);\n        this.glyph.renderToStave(this.x);\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Clef } from './clef';\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { KeySignature } from './keysignature';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Repetition } from './staverepetition';\nimport { StaveSection } from './stavesection';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { Volta } from './stavevolta';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { RuntimeError } from './util';\n// Used by Stave.format() to sort the modifiers at the beginning and end of a stave.\n// The keys (computed property names) match the CATEGORY property in the\n// Barline, Clef, KeySignature, TimeSignature classes.\nconst SORT_ORDER_BEG_MODIFIERS = {\n    [Barline.CATEGORY]: 0,\n    [Clef.CATEGORY]: 1,\n    [KeySignature.CATEGORY]: 2,\n    [TimeSignature.CATEGORY]: 3,\n};\nconst SORT_ORDER_END_MODIFIERS = {\n    [TimeSignature.CATEGORY]: 0,\n    [KeySignature.CATEGORY]: 1,\n    [Barline.CATEGORY]: 2,\n    [Clef.CATEGORY]: 3,\n};\nexport class Stave extends Element {\n    static get CATEGORY() {\n        return Category.Stave;\n    }\n    // This is the sum of the padding that normally goes on left + right of a stave during\n    // drawing. Used to size staves correctly with content width.\n    static get defaultPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.padding') + musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    // Right padding, used by system if startX is already determined.\n    static get rightPadding() {\n        const musicFont = Tables.currentMusicFont();\n        return musicFont.lookupMetric('stave.endPaddingMax');\n    }\n    constructor(x, y, width, options) {\n        super();\n        // Initialized by the constructor via this.resetLines().\n        this.height = 0;\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.formatted = false;\n        this.start_x = x + 5;\n        this.end_x = x + width;\n        this.modifiers = []; // stave modifiers (clef, key, time, barlines, coda, segno, etc.)\n        this.measure = 0;\n        this.clef = 'treble';\n        this.endClef = undefined;\n        this.resetFont();\n        this.options = Object.assign({ vertical_bar_width: 10, num_lines: 5, fill_style: '#999999', left_bar: true, right_bar: true, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, space_above_staff_ln: 4, space_below_staff_ln: 4, top_text_position: 1, bottom_text_position: 4, line_config: [] }, options);\n        this.bounds = { x: this.x, y: this.y, w: this.width, h: 0 };\n        this.defaultLedgerLineStyle = { strokeStyle: '#444', lineWidth: 1.4 };\n        this.resetLines();\n        // beg bar\n        this.addModifier(new Barline(this.options.left_bar ? BarlineType.SINGLE : BarlineType.NONE));\n        // end bar\n        this.addEndModifier(new Barline(this.options.right_bar ? BarlineType.SINGLE : BarlineType.NONE));\n    }\n    /** Set default style for ledger lines. */\n    setDefaultLedgerLineStyle(style) {\n        this.defaultLedgerLineStyle = style;\n    }\n    /** Get default style for ledger lines. */\n    getDefaultLedgerLineStyle() {\n        return Object.assign(Object.assign({}, this.getStyle()), this.defaultLedgerLineStyle);\n    }\n    space(spacing) {\n        return this.options.spacing_between_lines_px * spacing;\n    }\n    resetLines() {\n        this.options.line_config = [];\n        for (let i = 0; i < this.options.num_lines; i++) {\n            this.options.line_config.push({ visible: true });\n        }\n        this.height = (this.options.num_lines + this.options.space_above_staff_ln) * this.options.spacing_between_lines_px;\n        this.options.bottom_text_position = this.options.num_lines;\n    }\n    setNoteStartX(x) {\n        if (!this.formatted)\n            this.format();\n        this.start_x = x;\n        return this;\n    }\n    getNoteStartX() {\n        if (!this.formatted)\n            this.format();\n        return this.start_x;\n    }\n    getNoteEndX() {\n        if (!this.formatted)\n            this.format();\n        return this.end_x;\n    }\n    getTieStartX() {\n        return this.start_x;\n    }\n    getTieEndX() {\n        return this.end_x;\n    }\n    getX() {\n        return this.x;\n    }\n    getNumLines() {\n        return this.options.num_lines;\n    }\n    setNumLines(n) {\n        this.options.num_lines = n;\n        this.resetLines();\n        return this;\n    }\n    setY(y) {\n        this.y = y;\n        return this;\n    }\n    getY() {\n        return this.y;\n    }\n    getTopLineTopY() {\n        return this.getYForLine(0) - Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    getBottomLineBottomY() {\n        return this.getYForLine(this.getNumLines() - 1) + Tables.STAVE_LINE_THICKNESS / 2;\n    }\n    setX(x) {\n        const shift = x - this.x;\n        this.formatted = false;\n        this.x = x;\n        this.start_x += shift;\n        this.end_x += shift;\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const mod = this.modifiers[i];\n            mod.setX(mod.getX() + shift);\n        }\n        return this;\n    }\n    setWidth(width) {\n        this.formatted = false;\n        this.width = width;\n        this.end_x = this.x + width;\n        // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n        // this.modifiers[1].setX(this.end_x);\n        return this;\n    }\n    getWidth() {\n        return this.width;\n    }\n    getStyle() {\n        return Object.assign({ fillStyle: this.options.fill_style, strokeStyle: this.options.fill_style, lineWidth: Tables.STAVE_LINE_THICKNESS }, super.getStyle());\n    }\n    /**\n     * Set the measure number of this Stave.\n     */\n    setMeasure(measure) {\n        this.measure = measure;\n        return this;\n    }\n    /**\n     * Return the measure number of this Stave.\n     */\n    getMeasure() {\n        return this.measure;\n    }\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift(index = 0) {\n        if (typeof index !== 'number') {\n            throw new RuntimeError('InvalidIndex', 'Must be of number type');\n        }\n        if (!this.formatted)\n            this.format();\n        if (this.getModifiers(StaveModifierPosition.BEGIN).length === 1) {\n            return 0;\n        }\n        // for right position modifiers zero shift seems correct, see 'Volta + Modifier Measure Test'\n        if (this.modifiers[index].getPosition() === StaveModifierPosition.RIGHT) {\n            return 0;\n        }\n        let start_x = this.start_x - this.x;\n        const begBarline = this.modifiers[0];\n        if (begBarline.getType() === BarlineType.REPEAT_BEGIN && start_x > begBarline.getWidth()) {\n            start_x -= begBarline.getWidth();\n        }\n        return start_x;\n    }\n    /** Coda & Segno Symbol functions */\n    setRepetitionType(type, yShift = 0) {\n        this.modifiers.push(new Repetition(type, this.x, yShift));\n        return this;\n    }\n    // Volta functions\n    setVoltaType(type, number_t, y) {\n        this.modifiers.push(new Volta(type, number_t, this.x, y));\n        return this;\n    }\n    // Section functions\n    setSection(section, y, xOffset = 0, fontSize, drawRect = true) {\n        const staveSection = new StaveSection(section, this.x + xOffset, y, drawRect);\n        if (fontSize)\n            staveSection.setFontSize(fontSize);\n        this.modifiers.push(staveSection);\n        return this;\n    }\n    // Tempo functions\n    setTempo(tempo, y) {\n        this.modifiers.push(new StaveTempo(tempo, this.x, y));\n        return this;\n    }\n    // Text functions\n    setText(text, position, options = {}) {\n        this.modifiers.push(new StaveText(text, position, options));\n        return this;\n    }\n    getHeight() {\n        return this.height;\n    }\n    getSpacingBetweenLines() {\n        return this.options.spacing_between_lines_px;\n    }\n    getBoundingBox() {\n        return new BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n    }\n    getBottomY() {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const score_bottom = this.getYForLine(options.num_lines) + options.space_below_staff_ln * spacing;\n        return score_bottom;\n    }\n    getBottomLineY() {\n        return this.getYForLine(this.options.num_lines);\n    }\n    // This returns\n    /** @returns the y for the *center* of a staff line */\n    getYForLine(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        const y = this.y + line * spacing + headroom * spacing;\n        return y;\n    }\n    getLineForY(y) {\n        // Does the reverse of getYForLine - somewhat dumb and just calls\n        // getYForLine until the right value is reaches\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return (y - this.y) / spacing - headroom;\n    }\n    getYForTopText(line = 0) {\n        return this.getYForLine(-line - this.options.top_text_position);\n    }\n    getYForBottomText(line = 0) {\n        return this.getYForLine(this.options.bottom_text_position + line);\n    }\n    getYForNote(line) {\n        const options = this.options;\n        const spacing = options.spacing_between_lines_px;\n        const headroom = options.space_above_staff_ln;\n        return this.y + headroom * spacing + 5 * spacing - line * spacing;\n    }\n    getYForGlyphs() {\n        return this.getYForLine(3);\n    }\n    // This method adds a stave modifier to the stave. Note that the first two\n    // modifiers (BarLines) are automatically added upon construction.\n    addModifier(modifier, position) {\n        if (position !== undefined) {\n            modifier.setPosition(position);\n        }\n        modifier.setStave(this);\n        this.formatted = false;\n        this.modifiers.push(modifier);\n        return this;\n    }\n    addEndModifier(modifier) {\n        this.addModifier(modifier, StaveModifierPosition.END);\n        return this;\n    }\n    // Bar Line functions\n    setBegBarType(type) {\n        // Only valid bar types at beginning of stave is none, single or begin repeat\n        const { SINGLE, REPEAT_BEGIN, NONE } = BarlineType;\n        if (type === SINGLE || type === REPEAT_BEGIN || type === NONE) {\n            this.modifiers[0].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    setEndBarType(type) {\n        // Repeat end not valid at end of stave\n        if (type !== BarlineType.REPEAT_BEGIN) {\n            this.modifiers[1].setType(type);\n            this.formatted = false;\n        }\n        return this;\n    }\n    /**\n     * treat the stave as if the clef is clefSpec, but don't display the clef\n     */\n    setClefLines(clefSpec) {\n        this.clef = clefSpec;\n        return this;\n    }\n    setClef(clefSpec, size, annotation, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        if (position === StaveModifierPosition.END) {\n            this.endClef = clefSpec;\n        }\n        else {\n            this.clef = clefSpec;\n        }\n        const clefs = this.getModifiers(position, Clef.CATEGORY);\n        if (clefs.length === 0) {\n            this.addClef(clefSpec, size, annotation, position);\n        }\n        else {\n            clefs[0].setType(clefSpec, size, annotation);\n        }\n        return this;\n    }\n    getClef() {\n        return this.clef;\n    }\n    setEndClef(clefSpec, size, annotation) {\n        this.setClef(clefSpec, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    getEndClef() {\n        return this.endClef;\n    }\n    setKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const keySignatures = this.getModifiers(position, KeySignature.CATEGORY);\n        if (keySignatures.length === 0) {\n            this.addKeySignature(keySpec, cancelKeySpec, position);\n        }\n        else {\n            keySignatures[0].setKeySig(keySpec, cancelKeySpec);\n        }\n        return this;\n    }\n    setEndKeySignature(keySpec, cancelKeySpec) {\n        this.setKeySignature(keySpec, cancelKeySpec, StaveModifierPosition.END);\n        return this;\n    }\n    setTimeSignature(timeSpec, customPadding, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        const timeSignatures = this.getModifiers(position, TimeSignature.CATEGORY);\n        if (timeSignatures.length === 0) {\n            this.addTimeSignature(timeSpec, customPadding, position);\n        }\n        else {\n            timeSignatures[0].setTimeSig(timeSpec);\n        }\n        return this;\n    }\n    setEndTimeSignature(timeSpec, customPadding) {\n        this.setTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a key signature to the stave.\n     *\n     * Example:\n     * `stave.addKeySignature('Db');`\n     * @param keySpec new key specification `[A-G][b|#]?` or `[flats|sharps]_[1-14]?`\n     * @param cancelKeySpec\n     * @param position\n     * @returns\n     */\n    addKeySignature(keySpec, cancelKeySpec, position) {\n        if (position === undefined) {\n            position = StaveModifierPosition.BEGIN;\n        }\n        this.addModifier(new KeySignature(keySpec, cancelKeySpec).setPosition(position), position);\n        return this;\n    }\n    /**\n     * Add a clef to the stave.\n     *\n     * Example:\n     *\n     * stave.addClef('treble')\n     * @param clef clef (treble|bass|...) see {@link Clef.types}\n     * @param size\n     * @param annotation\n     * @param position\n     * @returns\n     */\n    addClef(clef, size, annotation, position) {\n        if (position === undefined || position === StaveModifierPosition.BEGIN) {\n            this.clef = clef;\n        }\n        else if (position === StaveModifierPosition.END) {\n            this.endClef = clef;\n        }\n        this.addModifier(new Clef(clef, size, annotation), position);\n        return this;\n    }\n    addEndClef(clef, size, annotation) {\n        this.addClef(clef, size, annotation, StaveModifierPosition.END);\n        return this;\n    }\n    /**\n     * Add a time signature to the stave\n     *\n     * Example:\n     *\n     * `stave.addTimeSignature('4/4');`\n     * @param timeSpec time signature specification `(C\\||C|\\d\\/\\d)`\n     * @param customPadding\n     * @param position\n     * @returns\n     */\n    addTimeSignature(timeSpec, customPadding, position) {\n        this.addModifier(new TimeSignature(timeSpec, customPadding), position);\n        return this;\n    }\n    addEndTimeSignature(timeSpec, customPadding) {\n        this.addTimeSignature(timeSpec, customPadding, StaveModifierPosition.END);\n        return this;\n    }\n    // Deprecated\n    addTrebleGlyph() {\n        this.addClef('treble');\n        return this;\n    }\n    /**\n     * @param position\n     * @param category\n     * @returns array of StaveModifiers that match the provided position and category.\n     */\n    getModifiers(position, category) {\n        const noPosition = position === undefined;\n        const noCategory = category === undefined;\n        if (noPosition && noCategory) {\n            return this.modifiers;\n        }\n        else if (noPosition) {\n            // A category was provided.\n            return this.modifiers.filter((m) => category === m.getCategory());\n        }\n        else if (noCategory) {\n            // A position was provided.\n            return this.modifiers.filter((m) => position === m.getPosition());\n        }\n        else {\n            // Both position and category were provided!\n            return this.modifiers.filter((m) => position === m.getPosition() && category === m.getCategory());\n        }\n    }\n    /**\n     * Use the modifier's `getCategory()` as a key for the `order` array.\n     * The retrieved value is used to sort modifiers from left to right (0 to to 3).\n     */\n    sortByCategory(items, order) {\n        for (let i = items.length - 1; i >= 0; i--) {\n            for (let j = 0; j < i; j++) {\n                if (order[items[j].getCategory()] > order[items[j + 1].getCategory()]) {\n                    const temp = items[j];\n                    items[j] = items[j + 1];\n                    items[j + 1] = temp;\n                }\n            }\n        }\n    }\n    format() {\n        const begBarline = this.modifiers[0];\n        const endBarline = this.modifiers[1];\n        const begModifiers = this.getModifiers(StaveModifierPosition.BEGIN);\n        const endModifiers = this.getModifiers(StaveModifierPosition.END);\n        this.sortByCategory(begModifiers, SORT_ORDER_BEG_MODIFIERS);\n        this.sortByCategory(endModifiers, SORT_ORDER_END_MODIFIERS);\n        if (begModifiers.length > 1 && begBarline.getType() === BarlineType.REPEAT_BEGIN) {\n            begModifiers.push(begModifiers.splice(0, 1)[0]);\n            begModifiers.splice(0, 0, new Barline(BarlineType.SINGLE));\n        }\n        if (endModifiers.indexOf(endBarline) > 0) {\n            endModifiers.splice(0, 0, new Barline(BarlineType.NONE));\n        }\n        let width;\n        let padding;\n        let modifier;\n        let offset = 0;\n        let x = this.x;\n        for (let i = 0; i < begModifiers.length; i++) {\n            modifier = begModifiers[i];\n            padding = modifier.getPadding(i + offset);\n            width = modifier.getWidth();\n            x += padding;\n            modifier.setX(x);\n            x += width;\n            if (padding + width === 0)\n                offset--;\n        }\n        this.start_x = x;\n        x = this.x + this.width;\n        const widths = {\n            left: 0,\n            right: 0,\n            paddingRight: 0,\n            paddingLeft: 0,\n        };\n        let lastBarlineIdx = 0;\n        for (let i = 0; i < endModifiers.length; i++) {\n            modifier = endModifiers[i];\n            lastBarlineIdx = isBarline(modifier) ? i : lastBarlineIdx;\n            widths.right = 0;\n            widths.left = 0;\n            widths.paddingRight = 0;\n            widths.paddingLeft = 0;\n            const layoutMetrics = modifier.getLayoutMetrics();\n            if (layoutMetrics) {\n                if (i !== 0) {\n                    widths.right = layoutMetrics.xMax || 0;\n                    widths.paddingRight = layoutMetrics.paddingRight || 0;\n                }\n                widths.left = -layoutMetrics.xMin || 0;\n                widths.paddingLeft = layoutMetrics.paddingLeft || 0;\n                if (i === endModifiers.length - 1) {\n                    widths.paddingLeft = 0;\n                }\n            }\n            else {\n                widths.paddingRight = modifier.getPadding(i - lastBarlineIdx);\n                if (i !== 0) {\n                    widths.right = modifier.getWidth();\n                }\n                if (i === 0) {\n                    widths.left = modifier.getWidth();\n                }\n            }\n            x -= widths.paddingRight;\n            x -= widths.right;\n            modifier.setX(x);\n            x -= widths.left;\n            x -= widths.paddingLeft;\n        }\n        this.end_x = endModifiers.length === 1 ? this.x + this.width : x;\n        this.formatted = true;\n    }\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        this.applyStyle();\n        ctx.openGroup('stave', this.getAttribute('id'));\n        if (!this.formatted)\n            this.format();\n        const num_lines = this.options.num_lines;\n        const width = this.width;\n        const x = this.x;\n        let y;\n        // Render lines\n        for (let line = 0; line < num_lines; line++) {\n            y = this.getYForLine(line);\n            if (this.options.line_config[line].visible) {\n                ctx.beginPath();\n                ctx.moveTo(x, y);\n                ctx.lineTo(x + width, y);\n                ctx.stroke();\n            }\n        }\n        ctx.closeGroup();\n        this.restoreStyle();\n        // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            // Only draw modifier if it has a draw function\n            if (typeof modifier.draw === 'function') {\n                modifier.applyStyle(ctx);\n                modifier.draw(this, this.getModifierXShift(i));\n                modifier.restoreStyle(ctx);\n            }\n        }\n        // Render measure numbers\n        if (this.measure > 0) {\n            ctx.save();\n            ctx.setFont(this.textFont);\n            const textWidth = ctx.measureText('' + this.measure).width;\n            y = this.getYForTopText(0) + 3;\n            ctx.fillText('' + this.measure, this.x - textWidth / 2, y);\n            ctx.restore();\n        }\n        return this;\n    }\n    getVerticalBarWidth() {\n        return this.options.vertical_bar_width;\n    }\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines() {\n        return this.options.line_config;\n    }\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws RuntimeError \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine(line_number, line_config) {\n        if (line_number >= this.options.num_lines || line_number < 0) {\n            throw new RuntimeError('StaveConfigError', 'The line number must be within the range of the number of lines in the Stave.');\n        }\n        if (line_config.visible === undefined) {\n            throw new RuntimeError('StaveConfigError', \"The line configuration object is missing the 'visible' property.\");\n        }\n        if (typeof line_config.visible !== 'boolean') {\n            throw new RuntimeError('StaveConfigError', \"The line configuration objects 'visible' property must be true or false.\");\n        }\n        this.options.line_config[line_number] = line_config;\n        return this;\n    }\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws RuntimeError \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines(lines_configuration) {\n        if (lines_configuration.length !== this.options.num_lines) {\n            throw new RuntimeError('StaveConfigError', 'The length of the lines configuration array must match the number of lines in the Stave');\n        }\n        // Make sure the defaults are present in case an incomplete set of\n        //  configuration options were supplied.\n        // eslint-disable-next-line\n        for (const line_config in lines_configuration) {\n            // Allow '{}' to be used if the caller just wants the default for a particular node.\n            if (lines_configuration[line_config].visible == undefined) {\n                lines_configuration[line_config] = this.options.line_config[line_config];\n            }\n            this.options.line_config[line_config] = Object.assign(Object.assign({}, this.options.line_config[line_config]), lines_configuration[line_config]);\n        }\n        this.options.line_config = lines_configuration;\n        return this;\n    }\n    static formatBegModifiers(staves) {\n        const adjustCategoryStartX = (category) => {\n            let minStartX = 0;\n            // Calculate min start X for the category\n            staves.forEach((stave) => {\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Consider only the first instance\n                if (modifiers.length > 0 && modifiers[0].getX() > minStartX)\n                    minStartX = modifiers[0].getX();\n            });\n            let adjustX = 0;\n            staves.forEach((stave) => {\n                adjustX = 0;\n                const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, category);\n                // Calculate adjustement required for the stave\n                modifiers.forEach((modifier) => {\n                    if (minStartX - modifier.getX() > adjustX)\n                        adjustX = minStartX - modifier.getX();\n                });\n                const allModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n                let bAdjust = false;\n                // Apply adjustment to all the modifiers in and beyond the category\n                allModifiers.forEach((modifier) => {\n                    if (modifier.getCategory() === category)\n                        bAdjust = true;\n                    if (bAdjust && adjustX > 0)\n                        modifier.setX(modifier.getX() + adjustX);\n                });\n                // Apply adjustment also to note start.\n                stave.setNoteStartX(stave.getNoteStartX() + adjustX);\n            });\n        };\n        // Make sure that staves are formatted\n        staves.forEach((stave) => {\n            if (!stave.formatted)\n                stave.format();\n        });\n        // Align Clefs\n        adjustCategoryStartX(Category.Clef);\n        // Align key signatures\n        adjustCategoryStartX(Category.KeySignature);\n        // Align time signatures\n        adjustCategoryStartX(Category.TimeSignature);\n        let maxX = 0;\n        // align note start\n        staves.forEach((stave) => {\n            if (stave.getNoteStartX() > maxX)\n                maxX = stave.getNoteStartX();\n        });\n        staves.forEach((stave) => {\n            stave.setNoteStartX(maxX);\n        });\n        maxX = 0;\n        // align REPEAT_BEGIN\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    if (modifier.getX() > maxX)\n                        maxX = modifier.getX();\n            });\n        });\n        staves.forEach((stave) => {\n            const modifiers = stave.getModifiers(StaveModifierPosition.BEGIN, Category.Barline);\n            modifiers.forEach((modifier) => {\n                if (modifier.getType() == BarlineType.REPEAT_BEGIN)\n                    modifier.setX(maxX);\n            });\n        });\n    }\n}\nStave.TEXT_FONT = {\n    family: Font.SANS_SERIF,\n    size: 8,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nfunction drawBoldDoubleLine(ctx, type, topX, topY, botY) {\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT && type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        throw new RuntimeError('InvalidConnector', 'A REPEAT_BEGIN or REPEAT_END type must be provided.');\n    }\n    let x_shift = 3;\n    let variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    const thickLineOffset = 2; // For aesthetics\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        x_shift = -5; // Flips the side of the thin line\n        variableWidth = 3;\n    }\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n}\n/** StaveConnector implements the connector lines between staves of a system. */\nexport class StaveConnector extends Element {\n    static get CATEGORY() {\n        return Category.StaveConnector;\n    }\n    constructor(top_stave, bottom_stave) {\n        super();\n        this.thickness = Tables.STAVE_LINE_THICKNESS;\n        this.width = 3;\n        this.top_stave = top_stave;\n        this.bottom_stave = bottom_stave;\n        this.type = StaveConnector.type.DOUBLE;\n        this.resetFont();\n        // 1. Offset Bold Double Left to align with offset Repeat Begin bars\n        // 2. Offset BRACE type not to overlap with another StaveConnector\n        this.x_shift = 0;\n        this.texts = [];\n    }\n    /**\n     * Set type.\n     * @param type see {@link StaveConnector.type} & {@link StaveConnector.typeString}\n     */\n    setType(type) {\n        const newType = typeof type === 'string' ? StaveConnector.typeString[type] : type;\n        // Be certain that the type is a valid type:\n        if (Object.values(StaveConnector.type).includes(newType)) {\n            this.type = newType;\n        }\n        return this;\n    }\n    /**\n     * Get type.\n     * @returns number {@link StaveConnector.type}\n     */\n    getType() {\n        return this.type;\n    }\n    /** Set optional associated Text. */\n    setText(text, options = {}) {\n        this.texts.push({\n            content: text,\n            options: Object.assign({ shift_x: 0, shift_y: 0 }, options),\n        });\n        return this;\n    }\n    setXShift(x_shift) {\n        if (typeof x_shift !== 'number') {\n            throw new RuntimeError('InvalidType', 'x_shift must be a Number');\n        }\n        this.x_shift = x_shift;\n        return this;\n    }\n    getXShift() {\n        return this.x_shift;\n    }\n    /** Render connector and associated text. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let topY = this.top_stave.getYForLine(0);\n        let botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) + this.thickness;\n        let width = this.width;\n        let topX = this.top_stave.getX();\n        const isRightSidedConnector = this.type === StaveConnector.type.SINGLE_RIGHT ||\n            this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n            this.type === StaveConnector.type.THIN_DOUBLE;\n        if (isRightSidedConnector) {\n            topX = this.top_stave.getX() + this.top_stave.getWidth();\n        }\n        let attachment_height = botY - topY;\n        switch (this.type) {\n            case StaveConnector.type.SINGLE:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_LEFT:\n                width = 1;\n                break;\n            case StaveConnector.type.SINGLE_RIGHT:\n                width = 1;\n                break;\n            case StaveConnector.type.DOUBLE:\n                topX -= this.width + 2;\n                topY -= this.thickness;\n                attachment_height += 0.5;\n                break;\n            case StaveConnector.type.BRACE: {\n                width = 12;\n                // May need additional code to draw brace\n                const x1 = this.top_stave.getX() - 2 + this.x_shift;\n                const y1 = topY;\n                const x3 = x1;\n                const y3 = botY;\n                const x2 = x1 - width;\n                const y2 = y1 + attachment_height / 2.0;\n                const cpx1 = x2 - 0.9 * width;\n                const cpy1 = y1 + 0.2 * attachment_height;\n                const cpx2 = x1 + 1.1 * width;\n                const cpy2 = y2 - 0.135 * attachment_height;\n                const cpx3 = cpx2;\n                const cpy3 = y2 + 0.135 * attachment_height;\n                const cpx4 = cpx1;\n                const cpy4 = y3 - 0.2 * attachment_height;\n                const cpx5 = x2 - width;\n                const cpy5 = cpy4;\n                const cpx6 = x1 + 0.4 * width;\n                const cpy6 = y2 + 0.135 * attachment_height;\n                const cpx7 = cpx6;\n                const cpy7 = y2 - 0.135 * attachment_height;\n                const cpx8 = cpx5;\n                const cpy8 = cpy1;\n                ctx.beginPath();\n                ctx.moveTo(x1, y1);\n                ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n                ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n                ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n                ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n                ctx.fill();\n                ctx.stroke();\n                break;\n            }\n            case StaveConnector.type.BRACKET:\n                topY -= 6;\n                botY += 6;\n                attachment_height = botY - topY;\n                Glyph.renderGlyph(ctx, topX - 5, topY, 40, 'bracketTop');\n                Glyph.renderGlyph(ctx, topX - 5, botY, 40, 'bracketBottom');\n                topX -= this.width + 2;\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_LEFT:\n                drawBoldDoubleLine(ctx, this.type, topX + this.x_shift, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n                drawBoldDoubleLine(ctx, this.type, topX, topY, botY - this.thickness);\n                break;\n            case StaveConnector.type.THIN_DOUBLE:\n                width = 1;\n                attachment_height -= this.thickness;\n                break;\n            case StaveConnector.type.NONE:\n                break;\n            default:\n                throw new RuntimeError('InvalidType', `The provided StaveConnector.type (${this.type}) is invalid.`);\n        }\n        if (this.type !== StaveConnector.type.BRACE &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n            this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT &&\n            this.type !== StaveConnector.type.NONE) {\n            ctx.fillRect(topX, topY, width, attachment_height);\n        }\n        // If the connector is a thin double barline, draw the paralell line\n        if (this.type === StaveConnector.type.THIN_DOUBLE) {\n            ctx.fillRect(topX - 3, topY, width, attachment_height);\n        }\n        ctx.save();\n        ctx.setLineWidth(2);\n        ctx.setFont(this.textFont);\n        // Add stave connector text\n        for (let i = 0; i < this.texts.length; i++) {\n            const text = this.texts[i];\n            const text_width = ctx.measureText('' + text.content).width;\n            const x = this.top_stave.getX() - text_width - 24 + text.options.shift_x;\n            const y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 + text.options.shift_y;\n            ctx.fillText('' + text.content, x, y + 4);\n        }\n        ctx.restore();\n    }\n}\nStaveConnector.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 16,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.NORMAL,\n};\n/**\n * SINGLE_LEFT and SINGLE are the same value for compatibility\n * with older versions of vexflow which didn't have right sided\n * stave connectors.\n */\nStaveConnector.type = {\n    SINGLE_RIGHT: 0,\n    SINGLE_LEFT: 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7,\n    NONE: 8,\n};\n/**\n * Connector type:\n * * \"singleRight\"\n * * \"singleLeft\"\n * * \"single\"\n * * \"double\"\n * * \"brace\"\n * * \"bracket\"\n * * \"boldDoubleLeft\"\n * * \"boldDoubleRight\"\n * * \"thinDouble\"\n * * \"none\"\n */\nStaveConnector.typeString = {\n    singleRight: StaveConnector.type.SINGLE_RIGHT,\n    singleLeft: StaveConnector.type.SINGLE_LEFT,\n    single: StaveConnector.type.SINGLE,\n    double: StaveConnector.type.DOUBLE,\n    brace: StaveConnector.type.BRACE,\n    bracket: StaveConnector.type.BRACKET,\n    boldDoubleLeft: StaveConnector.type.BOLD_DOUBLE_LEFT,\n    boldDoubleRight: StaveConnector.type.BOLD_DOUBLE_RIGHT,\n    thinDouble: StaveConnector.type.THIN_DOUBLE,\n    none: StaveConnector.type.NONE,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\nimport { Fraction } from './fraction';\nimport { RuntimeError } from './util';\n/**\n * TickContext formats abstract tickable objects, such as notes, chords, tabs, etc.\n */\nexport class TickContext {\n    static getNextContext(tContext) {\n        const contexts = tContext.tContexts;\n        const index = contexts.indexOf(tContext);\n        if (index + 1 < contexts.length)\n            return contexts[index + 1];\n    }\n    constructor(options) {\n        this.preFormatted = false;\n        this.postFormatted = false;\n        this.tickID = options && options.tickID ? options.tickID : 0;\n        this.currentTick = new Fraction(0, 1);\n        this.maxTicks = new Fraction(0, 1);\n        this.maxTickable = undefined; // Biggest tickable\n        this.minTicks = undefined; // this can remian null if all tickables have ignore_ticks\n        this.minTickable = undefined;\n        this.padding = 1; // padding on each side (width += padding * 2)\n        this.x = 0;\n        this.xBase = 0; // base x position without xOffset\n        this.xOffset = 0; // xBase and xOffset are an alternative way to describe x (x = xB + xO)\n        this.tickables = []; // Notes, tabs, chords, lyrics.\n        this.tickablesByVoice = {}; // Tickables indexed by voice number\n        // Formatting metrics\n        this.notePx = 0; // width of widest note in this context\n        this.glyphPx = 0; // width of glyph (note head)\n        this.leftDisplacedHeadPx = 0; // Extra left pixels for displaced notes\n        this.rightDisplacedHeadPx = 0; // Extra right pixels for displaced notes\n        this.modLeftPx = 0; // Left modifier pixels\n        this.modRightPx = 0; // Right modifier pixels\n        this.totalLeftPx = 0; // Total left pixels\n        this.totalRightPx = 0; // Total right pixels\n        this.tContexts = []; // Parent array of tick contexts\n        this.width = 0;\n        this.formatterMetrics = {\n            // The freedom of a tickcontext is the distance it can move without colliding\n            // with neighboring elements. A formatter can set these values during its\n            // formatting pass, which a different formatter can then use to fine tune.\n            freedom: { left: 0, right: 0 },\n        };\n    }\n    getTickID() {\n        return this.tickID;\n    }\n    getX() {\n        return this.x;\n    }\n    setX(x) {\n        this.x = x;\n        this.xBase = x;\n        this.xOffset = 0;\n        return this;\n    }\n    getXBase() {\n        return this.xBase;\n    } // use of xBase and xOffset is optional, avoids offset creep\n    setXBase(xBase) {\n        this.xBase = xBase;\n        this.x = xBase + this.xOffset;\n    }\n    getXOffset() {\n        return this.xOffset;\n    }\n    setXOffset(xOffset) {\n        this.xOffset = xOffset;\n        this.x = this.xBase + xOffset;\n    }\n    getWidth() {\n        return this.width + this.padding * 2;\n    }\n    setPadding(padding) {\n        this.padding = padding;\n        return this;\n    }\n    getMaxTicks() {\n        return this.maxTicks;\n    }\n    getMinTicks() {\n        return this.minTicks;\n    }\n    getMaxTickable() {\n        return this.maxTickable;\n    }\n    getMinTickable() {\n        return this.minTickable;\n    }\n    getTickables() {\n        return this.tickables;\n    }\n    /**\n     * Introduced on 2020-04-17 as getTickablesForVoice(voiceIndex).\n     *   https://github.com/0xfe/vexflow/blame/dc97b0cc5bb93171c0038638c34362dc958222ca/src/tickcontext.js#L63\n     * Renamed on 2021-08-05 to getTickableForVoice(voiceIndex). Method renamed to singular, since it returns one Tickable.\n     */\n    getTickableForVoice(voiceIndex) {\n        return this.tickablesByVoice[voiceIndex];\n    }\n    getTickablesByVoice() {\n        return this.tickablesByVoice;\n    }\n    getCenterAlignedTickables() {\n        return this.tickables.filter((tickable) => tickable.isCenterAligned());\n    }\n    /** Gets widths context, note and left/right modifiers for formatting. */\n    getMetrics() {\n        const { width, glyphPx, notePx, leftDisplacedHeadPx, rightDisplacedHeadPx, modLeftPx, modRightPx, totalLeftPx, totalRightPx, } = this;\n        return {\n            width,\n            glyphPx,\n            notePx,\n            leftDisplacedHeadPx,\n            rightDisplacedHeadPx,\n            modLeftPx,\n            modRightPx,\n            totalLeftPx,\n            totalRightPx,\n        };\n    }\n    getCurrentTick() {\n        return this.currentTick;\n    }\n    setCurrentTick(tick) {\n        this.currentTick = tick;\n        this.preFormatted = false;\n    }\n    addTickable(tickable, voiceIndex) {\n        if (!tickable) {\n            throw new RuntimeError('BadArgument', 'Invalid tickable added.');\n        }\n        if (!tickable.shouldIgnoreTicks()) {\n            const ticks = tickable.getTicks();\n            if (ticks.greaterThan(this.maxTicks)) {\n                this.maxTicks = ticks.clone();\n                this.maxTickable = tickable;\n            }\n            if (this.minTicks == null) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n            else if (ticks.lessThan(this.minTicks)) {\n                this.minTicks = ticks.clone();\n                this.minTickable = tickable;\n            }\n        }\n        tickable.setTickContext(this);\n        this.tickables.push(tickable);\n        this.tickablesByVoice[voiceIndex || 0] = tickable;\n        this.preFormatted = false;\n        return this;\n    }\n    preFormat() {\n        if (this.preFormatted)\n            return this;\n        for (let i = 0; i < this.tickables.length; ++i) {\n            const tickable = this.tickables[i];\n            tickable.preFormat();\n            const metrics = tickable.getMetrics();\n            // Maintain max displaced head pixels from all tickables in the context\n            this.leftDisplacedHeadPx = Math.max(this.leftDisplacedHeadPx, metrics.leftDisplacedHeadPx);\n            this.rightDisplacedHeadPx = Math.max(this.rightDisplacedHeadPx, metrics.rightDisplacedHeadPx);\n            // Maintain the widest note for all tickables in the context\n            this.notePx = Math.max(this.notePx, metrics.notePx);\n            // Maintain the widest note head\n            this.glyphPx = Math.max(this.glyphPx, metrics.glyphWidth || 0);\n            // Total modifier shift\n            this.modLeftPx = Math.max(this.modLeftPx, metrics.modLeftPx);\n            this.modRightPx = Math.max(this.modRightPx, metrics.modRightPx);\n            // Total shift\n            this.totalLeftPx = Math.max(this.totalLeftPx, metrics.modLeftPx + metrics.leftDisplacedHeadPx);\n            this.totalRightPx = Math.max(this.totalRightPx, metrics.modRightPx + metrics.rightDisplacedHeadPx);\n            // Recalculate the tick context total width\n            this.width = this.notePx + this.totalLeftPx + this.totalRightPx;\n        }\n        return this;\n    }\n    postFormat() {\n        if (this.postFormatted)\n            return this;\n        this.postFormatted = true;\n        return this;\n    }\n    getFormatterMetrics() {\n        return this.formatterMetrics;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Beam } from './beam';\nimport { Font } from './font';\nimport { Fraction } from './fraction';\nimport { ModifierContext } from './modifiercontext';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { Tables } from './tables';\nimport { TickContext } from './tickcontext';\nimport { isNote, isStaveNote } from './typeguard';\nimport { defined, log, midLine, RuntimeError, sumArray } from './util';\nimport { Voice } from './voice';\n/**\n * Create `Alignment`s for each tick in `voices`. Also calculate the\n * total number of ticks in voices.\n */\nfunction createContexts(voices, makeContext, addToContext) {\n    if (voices.length == 0)\n        return {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n    // Initialize tick maps.\n    const tickToContextMap = {};\n    const tickList = [];\n    const contexts = [];\n    const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    voices.forEach((voice, voiceIndex) => {\n        // Use resolution multiplier as denominator so that no additional expansion\n        // of fractional tick values is needed.\n        const ticksUsed = new Fraction(0, resolutionMultiplier);\n        voice.getTickables().forEach((tickable) => {\n            const integerTicks = ticksUsed.numerator;\n            // If we have no tick context for this tick, create one.\n            if (!tickToContextMap[integerTicks]) {\n                const newContext = makeContext({ tickID: integerTicks });\n                contexts.push(newContext);\n                tickToContextMap[integerTicks] = newContext;\n                // Maintain a list of unique integerTicks.\n                tickList.push(integerTicks);\n            }\n            // Add this tickable to the TickContext.\n            addToContext(tickable, tickToContextMap[integerTicks], voiceIndex);\n            ticksUsed.add(tickable.getTicks());\n        });\n    });\n    return {\n        map: tickToContextMap,\n        array: contexts,\n        list: tickList.sort((a, b) => a - b),\n        resolutionMultiplier,\n    };\n}\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Formatter.DEBUG)\n        log('Vex.Flow.Formatter', args);\n}\n/**\n * Get the rest line number of the next non-rest note(s).\n * @param notes array of Notes\n * @param currRestLine\n * @param currNoteIndex current note index\n * @param compare if true, return the midpoint between the current rest line and the next rest line\n * @returns a line number, which determines the vertical position of a rest.\n */\nfunction getRestLineForNextNoteGroup(notes, currRestLine, currNoteIndex, compare) {\n    // If no valid next note group, nextRestLine is same as current.\n    let nextRestLine = currRestLine;\n    // Start with the next note and keep going until we find a valid non-rest note group.\n    for (let noteIndex = currNoteIndex + 1; noteIndex < notes.length; noteIndex++) {\n        const note = notes[noteIndex];\n        if (isNote(note) && !note.isRest() && !note.shouldIgnoreTicks()) {\n            nextRestLine = note.getLineForRest();\n            break;\n        }\n    }\n    // Locate the mid point between two lines.\n    if (compare && currRestLine !== nextRestLine) {\n        const top = Math.max(currRestLine, nextRestLine);\n        const bot = Math.min(currRestLine, nextRestLine);\n        nextRestLine = midLine(top, bot);\n    }\n    return nextRestLine;\n}\n/**\n * Format implements the formatting and layout algorithms that are used\n * to position notes in a voice. The algorithm can align multiple voices both\n * within a stave, and across multiple staves.\n *\n * To do this, the formatter breaks up voices into a grid of rational-valued\n * `ticks`, to which each note is assigned. Then, minimum widths are assigned\n * to each tick based on the widths of the notes and modifiers in that tick. This\n * establishes the smallest amount of space required for each tick.\n *\n * Finally, the formatter distributes the left over space proportionally to\n * all the ticks, setting the `x` values of the notes in each tick.\n *\n * See `tests/formatter_tests.ts` for usage examples. The helper functions included\n * here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n */\nexport class Formatter {\n    /**\n     * Helper function to layout \"notes\" one after the other without\n     * regard for proportions. Useful for tests and debugging.\n     */\n    static SimpleFormat(notes, x = 0, { paddingBetween = 10 } = {}) {\n        notes.reduce((accumulator, note) => {\n            note.addToModifierContext(new ModifierContext());\n            const tick = new TickContext().addTickable(note).preFormat();\n            const metrics = tick.getMetrics();\n            tick.setX(accumulator + metrics.totalLeftPx);\n            return accumulator + tick.getWidth() + metrics.totalRightPx + paddingBetween;\n        }, x);\n    }\n    /** Helper function to plot formatter debug info. */\n    static plotDebugging(ctx, formatter, xPos, y1, y2, options) {\n        options = Object.assign({ stavePadding: Tables.currentMusicFont().lookupMetric('stave.padding') }, options);\n        const x = xPos + options.stavePadding;\n        const contextGaps = formatter.contextGaps;\n        function stroke(x1, x2, color) {\n            ctx.beginPath();\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n            ctx.setLineWidth(1);\n            ctx.fillRect(x1, y1, Math.max(x2 - x1, 0), y2 - y1);\n        }\n        ctx.save();\n        ctx.setFont(Font.SANS_SERIF, 8);\n        contextGaps.gaps.forEach((gap) => {\n            stroke(x + gap.x1, x + gap.x2, 'rgba(100,200,100,0.4)');\n            ctx.setFillStyle('green');\n            ctx.fillText(Math.round(gap.x2 - gap.x1).toString(), x + gap.x1, y2 + 12);\n        });\n        ctx.setFillStyle('red');\n        ctx.fillText(`Loss: ${(formatter.totalCost || 0).toFixed(2)} Shift: ${(formatter.totalShift || 0).toFixed(2)} Gap: ${contextGaps.total.toFixed(2)}`, x - 20, y2 + 27);\n        ctx.restore();\n    }\n    /**\n     * Helper function to format and draw a single voice. Returns a bounding\n     * box for the notation.\n     * @param ctx  the rendering context\n     * @param stave the stave to which to draw (`Stave` or `TabStave`)\n     * @param notes array of `Note` instances (`Note`, `TextNote`, `TabNote`, etc.)\n     * @param params one of below:\n     *    * Setting `autobeam` only `(context, stave, notes, true)` or\n     *      `(ctx, stave, notes, {autobeam: true})`\n     *    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n     *    * Setting both a struct is needed `(context, stave, notes, {\n     *      autobeam: true, align_rests: true})`\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDraw(ctx, stave, notes, params) {\n        let options = {\n            auto_beam: false,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            options = Object.assign(Object.assign({}, options), params);\n        }\n        else if (typeof params === 'boolean') {\n            options.auto_beam = params;\n        }\n        // Start by creating a voice and adding all the notes to it.\n        const voice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Then create beams, if requested.\n        const beams = options.auto_beam ? Beam.applyAndGetBeams(voice) : [];\n        // Instantiate a `Formatter` and format the notes.\n        new Formatter()\n            .joinVoices([voice]) // , { align_rests: options.align_rests })\n            .formatToStave([voice], stave, { align_rests: options.align_rests, stave });\n        // Render the voice and beams to the stave.\n        voice.setStave(stave).draw(ctx, stave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Return the bounding box of the voice.\n        return voice.getBoundingBox();\n    }\n    /**\n     * Helper function to format and draw aligned tab and stave notes in two\n     * separate staves.\n     * @param ctx the rendering context\n     * @param tabstave a `TabStave` instance on which to render `TabNote`s.\n     * @param stave a `Stave` instance on which to render `Note`s.\n     * @param notes array of `Note` instances for the stave (`Note`, `BarNote`, etc.)\n     * @param tabnotes array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n     * @param autobeam automatically generate beams.\n     * @param params a configuration object:\n     *    * `autobeam` automatically generates beams for the notes.\n     *    * `align_rests` aligns rests with nearby notes.\n     */\n    static FormatAndDrawTab(ctx, tabstave, stave, tabnotes, notes, autobeam, params) {\n        let opts = {\n            auto_beam: autobeam,\n            align_rests: false,\n        };\n        if (typeof params === 'object') {\n            opts = Object.assign(Object.assign({}, opts), params);\n        }\n        else if (typeof params === 'boolean') {\n            opts.auto_beam = params;\n        }\n        // Create a `4/4` voice for `notes`.\n        const notevoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(notes);\n        // Create a `4/4` voice for `tabnotes`.\n        const tabvoice = new Voice(Tables.TIME4_4).setMode(Voice.Mode.SOFT).addTickables(tabnotes);\n        // Then create beams, if requested.\n        const beams = opts.auto_beam ? Beam.applyAndGetBeams(notevoice) : [];\n        // Instantiate a `Formatter` and align tab and stave notes.\n        new Formatter()\n            .joinVoices([notevoice]) // , { align_rests: opts.align_rests })\n            .joinVoices([tabvoice])\n            .formatToStave([notevoice, tabvoice], stave, { align_rests: opts.align_rests });\n        // Render voices and beams to staves.\n        notevoice.draw(ctx, stave);\n        tabvoice.draw(ctx, tabstave);\n        beams.forEach((beam) => beam.setContext(ctx).draw());\n        // Draw a connector between tab and note staves.\n        new StaveConnector(stave, tabstave).setContext(ctx).draw();\n    }\n    /**\n     * Automatically set the vertical position of rests based on previous/next note positions.\n     * @param tickables an array of Tickables.\n     * @param alignAllNotes If `false`, only align rests that are within a group of beamed notes.\n     * @param alignTuplets If `false`, ignores tuplets.\n     */\n    static AlignRestsToNotes(tickables, alignAllNotes, alignTuplets) {\n        tickables.forEach((currTickable, index) => {\n            if (isStaveNote(currTickable) && currTickable.isRest()) {\n                if (currTickable.getTuplet() && !alignTuplets) {\n                    return;\n                }\n                // If activated rests not on default can be rendered as specified.\n                const position = currTickable.getGlyphProps().position.toUpperCase();\n                if (position !== 'R/4' && position !== 'B/4') {\n                    return;\n                }\n                if (alignAllNotes || currTickable.getBeam()) {\n                    // Align rests with previous/next notes.\n                    const props = currTickable.getKeyProps()[0];\n                    if (index === 0) {\n                        props.line = getRestLineForNextNoteGroup(tickables, props.line, index, false);\n                    }\n                    else if (index > 0 && index < tickables.length) {\n                        // If previous tickable is a rest, use its line number.\n                        const prevTickable = tickables[index - 1];\n                        if (isStaveNote(prevTickable)) {\n                            if (prevTickable.isRest()) {\n                                props.line = prevTickable.getKeyProps()[0].line;\n                            }\n                            else {\n                                const restLine = prevTickable.getLineForRest();\n                                // Get the rest line for next valid non-rest note group.\n                                props.line = getRestLineForNextNoteGroup(tickables, restLine, index, true);\n                            }\n                        }\n                    }\n                    currTickable.setKeyLine(0, props.line);\n                }\n            }\n        });\n    }\n    constructor(options) {\n        this.formatterOptions = Object.assign({ globalSoftmax: false, softmaxFactor: Tables.SOFTMAX_FACTOR, maxIterations: 5 }, options);\n        this.justifyWidth = 0;\n        this.totalCost = 0;\n        this.totalShift = 0;\n        this.durationStats = {};\n        // Minimum width required to render all the notes in the voices.\n        this.minTotalWidth = 0;\n        // This is set to `true` after `minTotalWidth` is calculated.\n        this.hasMinTotalWidth = false;\n        // Arrays of tick and modifier contexts.\n        this.tickContexts = {\n            map: {},\n            array: [],\n            list: [],\n            resolutionMultiplier: 0,\n        };\n        this.modifierContexts = [];\n        // Gaps between contexts, for free movement of notes post\n        // formatting.\n        this.contextGaps = {\n            total: 0,\n            gaps: [],\n        };\n        this.voices = [];\n        this.lossHistory = [];\n    }\n    /**\n     * Find all the rests in each of the `voices` and align them to neighboring notes.\n     *\n     * @param voices\n     * @param alignAllNotes If `false`, only align rests within beamed groups of notes. If `true`, align all rests.\n     */\n    alignRests(voices, alignAllNotes) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format rests');\n        }\n        voices.forEach((voice) => Formatter.AlignRestsToNotes(voice.getTickables(), alignAllNotes));\n    }\n    /**\n     * Estimate the width required to render 'voices'.  This is done by:\n     * 1. Sum the widths of all the tick contexts\n     * 2. Estimate the padding.\n     * The latter is done by calculating the padding 3 different ways, and taking the\n     * greatest value:\n     * 1. the padding required for unaligned notes in different voices\n     * 2. the padding based on the stddev of the tickable widths\n     * 3. the padding based on the stddev of the tickable durations.\n     *\n     * The last 2 quantities estimate a 'width entropy', where notes might need more\n     * room than the proportional formatting gives them.  A measure of all same duration\n     * and width will need no extra padding, and all these quantities will be\n     * zero in that case.\n     *\n     * Note: joinVoices has to be called before calling preCalculateMinTotalWidth.\n     *\n     * @param voices the voices that contain the notes\n     * @returns the estimated width in pixels\n     */\n    preCalculateMinTotalWidth(voices) {\n        const unalignedPadding = Tables.currentMusicFont().lookupMetric('stave.unalignedNotePadding');\n        // Calculate additional padding based on 3 methods:\n        // 1) unaligned beats in voices, 2) variance of width, 3) variance of durations\n        let unalignedCtxCount = 0;\n        let wsum = 0;\n        let dsum = 0;\n        const widths = [];\n        const durations = [];\n        // Cache results.\n        if (this.hasMinTotalWidth)\n            return this.minTotalWidth;\n        // Create tick contexts.\n        if (!voices) {\n            throw new RuntimeError('BadArgument', \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n        // eslint-disable-next-line\n        const { list: contextList, map: contextMap } = this.tickContexts;\n        this.minTotalWidth = 0;\n        // Go through each tick context and calculate total width,\n        // and also accumulate values used in padding hints\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            context.preFormat();\n            // If this TC doesn't have all the voices on it, it's unaligned.\n            // so increment the unaligned padding accumulator\n            if (context.getTickables().length < voices.length) {\n                unalignedCtxCount += 1;\n            }\n            // Calculate the 'width entropy' over all the Tickables.\n            context.getTickables().forEach((t) => {\n                wsum += t.getMetrics().width;\n                dsum += t.getTicks().value();\n                widths.push(t.getMetrics().width);\n                durations.push(t.getTicks().value());\n            });\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n        });\n        this.hasMinTotalWidth = true;\n        // normalized (0-1) STDDEV of widths/durations gives us padding hints.\n        const wavg = wsum > 0 ? wsum / widths.length : 1 / widths.length;\n        const wvar = sumArray(widths.map((ll) => Math.pow(ll - wavg, 2)));\n        const wpads = Math.pow(wvar / widths.length, 0.5) / wavg;\n        const davg = dsum / durations.length;\n        const dvar = sumArray(durations.map((ll) => Math.pow(ll - davg, 2)));\n        const dpads = Math.pow(dvar / durations.length, 0.5) / davg;\n        // Find max of 3 methods pad the width with that\n        const padmax = Math.max(dpads, wpads) * contextList.length * unalignedPadding;\n        const unalignedPad = unalignedPadding * unalignedCtxCount;\n        return this.minTotalWidth + Math.max(unalignedPad, padmax);\n    }\n    /**\n     * Get minimum width required to render all voices. Either `format` or\n     * `preCalculateMinTotalWidth` must be called before this method.\n     */\n    getMinTotalWidth() {\n        if (!this.hasMinTotalWidth) {\n            throw new RuntimeError('NoMinTotalWidth', \"Call 'preCalculateMinTotalWidth' or 'preFormat' before calling 'getMinTotalWidth'\");\n        }\n        return this.minTotalWidth;\n    }\n    /** Calculate the resolution multiplier for `voices`. */\n    static getResolutionMultiplier(voices) {\n        if (!voices || !voices.length) {\n            throw new RuntimeError('BadArgument', 'No voices to format');\n        }\n        const totalTicks = voices[0].getTotalTicks();\n        const resolutionMultiplier = voices.reduce((accumulator, voice) => {\n            if (!voice.getTotalTicks().equals(totalTicks)) {\n                throw new RuntimeError('TickMismatch', 'Voices should have same total note duration in ticks.');\n            }\n            if (voice.getMode() === Voice.Mode.STRICT && !voice.isComplete()) {\n                throw new RuntimeError('IncompleteVoice', 'Voice does not have enough notes.');\n            }\n            return Math.max(accumulator, Fraction.LCM(accumulator, voice.getResolutionMultiplier()));\n        }, 1);\n        return resolutionMultiplier;\n    }\n    /** Create a `ModifierContext` for each tick in `voices`. */\n    createModifierContexts(voices) {\n        if (voices.length == 0)\n            return;\n        const resolutionMultiplier = Formatter.getResolutionMultiplier(voices);\n        // Initialize tick maps.\n        const tickToContextMap = new Map();\n        const contexts = [];\n        // For each voice, extract notes and create a context for every\n        // new tick that hasn't been seen before.\n        voices.forEach((voice) => {\n            // Use resolution multiplier as denominator so that no additional expansion\n            // of fractional tick values is needed.\n            const ticksUsed = new Fraction(0, resolutionMultiplier);\n            voice.getTickables().forEach((tickable) => {\n                const integerTicks = ticksUsed.numerator;\n                let staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                // If we have no tick context for this tick, create one.\n                if (!staveTickToContextMap) {\n                    tickToContextMap.set(tickable.getStave(), {});\n                    staveTickToContextMap = tickToContextMap.get(tickable.getStave());\n                }\n                if (!(staveTickToContextMap ? staveTickToContextMap[integerTicks] : undefined)) {\n                    const newContext = new ModifierContext();\n                    contexts.push(newContext);\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    staveTickToContextMap[integerTicks] = newContext;\n                }\n                // Add this tickable to the TickContext.\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tickable.addToModifierContext(staveTickToContextMap[integerTicks]);\n                ticksUsed.add(tickable.getTicks());\n            });\n        });\n        this.modifierContexts.push({\n            map: tickToContextMap,\n            array: contexts,\n            resolutionMultiplier,\n        });\n    }\n    /**\n     * Create a `TickContext` for each tick in `voices`. Also calculate the\n     * total number of ticks in voices.\n     */\n    createTickContexts(voices) {\n        const fn = (tickable, context, voiceIndex) => context.addTickable(tickable, voiceIndex);\n        const contexts = createContexts(voices, (tick) => new TickContext(tick), fn);\n        this.tickContexts = contexts;\n        const contextArray = this.tickContexts.array;\n        contextArray.forEach((context) => {\n            context.tContexts = contextArray;\n        });\n        return contexts;\n    }\n    /**\n     * Get the AlignmentContexts of TickContexts that were created by createTickContexts.\n     * Returns undefined if createTickContexts has not yet been run.\n     */\n    getTickContexts() {\n        return this.tickContexts;\n    }\n    /**\n     * This is the core formatter logic. Format voices and justify them\n     * to `justifyWidth` pixels. `renderingContext` is required to justify elements\n     * that can't retrieve widths without a canvas. This method sets the `x` positions\n     * of all the tickables/notes in the formatter.\n     */\n    preFormat(justifyWidth = 0, renderingContext, voicesParam, stave) {\n        // Initialize context maps.\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            throw new RuntimeError('NoTickContexts', 'preFormat requires TickContexts');\n        }\n        const { list: contextList, map: contextMap } = contexts;\n        // Reset loss history for evaluator.\n        this.lossHistory = [];\n        // If voices and a stave were provided, set the Stave for each voice\n        // and preFormat to apply Y values to the notes;\n        if (voicesParam && stave) {\n            voicesParam.forEach((voice) => voice.setStave(stave).preFormat());\n        }\n        // Now distribute the ticks to each tick context, and assign them their\n        // own X positions.\n        let x = 0;\n        let shift = 0;\n        this.minTotalWidth = 0;\n        let totalTicks = 0;\n        // Pass 1: Give each note maximum width requested by context.\n        contextList.forEach((tick) => {\n            const context = contextMap[tick];\n            // Make sure that all tickables in this context have calculated their\n            // space requirements.\n            context.preFormat();\n            const width = context.getWidth();\n            this.minTotalWidth += width;\n            const maxTicks = context.getMaxTicks().value();\n            totalTicks += maxTicks;\n            const metrics = context.getMetrics();\n            x = x + shift + metrics.totalLeftPx;\n            context.setX(x);\n            // Calculate shift for the next tick.\n            shift = width - metrics.totalLeftPx;\n        });\n        // Use softmax based on all notes across all staves. (options.globalSoftmax)\n        const { globalSoftmax, softmaxFactor, maxIterations } = this.formatterOptions;\n        const exp = (tick) => Math.pow(softmaxFactor, (contextMap[tick].getMaxTicks().value() / totalTicks));\n        const expTicksUsed = sumArray(contextList.map(exp));\n        this.minTotalWidth = x + shift;\n        this.hasMinTotalWidth = true;\n        // No justification needed. End formatting.\n        if (justifyWidth <= 0)\n            return this.evaluate();\n        // Start justification. Subtract the right extra pixels of the final context because the formatter\n        // justifies based on the context's X position, which is the left-most part of the note head.\n        const firstContext = contextMap[contextList[0]];\n        const lastContext = contextMap[contextList[contextList.length - 1]];\n        // Calculate the \"distance error\" between the tick contexts. The expected distance is the spacing proportional to\n        // the softmax of the ticks.\n        function calculateIdealDistances(adjustedJustifyWidth) {\n            const distances = contextList.map((tick, i) => {\n                const context = contextMap[tick];\n                const voices = context.getTickablesByVoice();\n                let backTickable;\n                if (i > 0) {\n                    const prevContext = contextMap[contextList[i - 1]];\n                    // Go through each tickable and search backwards for another tickable\n                    // in the same voice. If found, use that duration (ticks) to calculate\n                    // the expected distance.\n                    for (let j = i - 1; j >= 0; j--) {\n                        const backTick = contextMap[contextList[j]];\n                        const backVoices = backTick.getTickablesByVoice();\n                        // Look for matching voices between tick contexts.\n                        const matchingVoices = [];\n                        Object.keys(voices).forEach((v) => {\n                            if (backVoices[v]) {\n                                matchingVoices.push(v);\n                            }\n                        });\n                        if (matchingVoices.length > 0) {\n                            // Found matching voices, get largest duration\n                            let maxTicks = 0;\n                            let maxNegativeShiftPx = Infinity;\n                            let expectedDistance = 0;\n                            matchingVoices.forEach((v) => {\n                                const ticks = backVoices[v].getTicks().value();\n                                if (ticks > maxTicks) {\n                                    backTickable = backVoices[v];\n                                    maxTicks = ticks;\n                                }\n                                // Calculate the limits of the shift based on modifiers, etc.\n                                const thisTickable = voices[v];\n                                const insideLeftEdge = thisTickable.getX() -\n                                    (thisTickable.getMetrics().modLeftPx + thisTickable.getMetrics().leftDisplacedHeadPx);\n                                const backMetrics = backVoices[v].getMetrics();\n                                const insideRightEdge = backVoices[v].getX() + backMetrics.notePx + backMetrics.modRightPx + backMetrics.rightDisplacedHeadPx;\n                                // Don't allow shifting if notes in the same voice can collide\n                                maxNegativeShiftPx = Math.min(maxNegativeShiftPx, insideLeftEdge - insideRightEdge);\n                            });\n                            // Don't shift further left than the notehead of the last context. Actually, stay at most 5% to the right\n                            // so that two different tick contexts don't align across staves.\n                            maxNegativeShiftPx = Math.min(maxNegativeShiftPx, context.getX() - (prevContext.getX() + adjustedJustifyWidth * 0.05));\n                            // Calculate the expected distance of the current context from the last matching tickable. The\n                            // distance is scaled down by the softmax for the voice.\n                            if (globalSoftmax) {\n                                const t = totalTicks;\n                                expectedDistance = (Math.pow(softmaxFactor, (maxTicks / t)) / expTicksUsed) * adjustedJustifyWidth;\n                            }\n                            else if (typeof backTickable !== 'undefined') {\n                                expectedDistance = backTickable.getVoice().softmax(maxTicks) * adjustedJustifyWidth;\n                            }\n                            return {\n                                expectedDistance,\n                                maxNegativeShiftPx,\n                                fromTickable: backTickable,\n                            };\n                        }\n                    }\n                }\n                return { expectedDistance: 0, fromTickablePx: 0, maxNegativeShiftPx: 0 };\n            });\n            return distances;\n        }\n        function shiftToIdealDistances(idealDistances) {\n            // Distribute ticks to the contexts based on the calculated distance error.\n            const centerX = adjustedJustifyWidth / 2;\n            let spaceAccum = 0;\n            contextList.forEach((tick, index) => {\n                const context = contextMap[tick];\n                if (index > 0) {\n                    const contextX = context.getX();\n                    const ideal = idealDistances[index];\n                    const errorPx = defined(ideal.fromTickable).getX() + ideal.expectedDistance - (contextX + spaceAccum);\n                    let negativeShiftPx = 0;\n                    if (errorPx > 0) {\n                        spaceAccum += errorPx;\n                    }\n                    else if (errorPx < 0) {\n                        negativeShiftPx = Math.min(ideal.maxNegativeShiftPx, Math.abs(errorPx));\n                        spaceAccum += -negativeShiftPx;\n                    }\n                    context.setX(contextX + spaceAccum);\n                }\n                // Move center aligned tickables to middle\n                context.getCenterAlignedTickables().forEach((tickable) => {\n                    tickable.setCenterXShift(centerX - context.getX());\n                });\n            });\n            return lastContext.getX() - firstContext.getX();\n        }\n        const adjustedJustifyWidth = justifyWidth -\n            lastContext.getMetrics().notePx -\n            lastContext.getMetrics().totalRightPx -\n            firstContext.getMetrics().totalLeftPx;\n        const musicFont = Tables.currentMusicFont();\n        const configMinPadding = musicFont.lookupMetric('stave.endPaddingMin');\n        const configMaxPadding = musicFont.lookupMetric('stave.endPaddingMax');\n        const leftPadding = musicFont.lookupMetric('stave.padding');\n        let targetWidth = adjustedJustifyWidth;\n        const distances = calculateIdealDistances(targetWidth);\n        let actualWidth = shiftToIdealDistances(distances);\n        // Just one context. Done formatting.\n        if (contextList.length === 1)\n            return 0;\n        const calcMinDistance = (targetWidth, distances) => {\n            let mdCalc = targetWidth / 2;\n            if (distances.length > 1) {\n                for (let di = 1; di < distances.length; ++di) {\n                    mdCalc = Math.min(distances[di].expectedDistance / 2, mdCalc);\n                }\n            }\n            return mdCalc;\n        };\n        const minDistance = calcMinDistance(targetWidth, distances);\n        // right justify to either the configured padding, or the min distance between notes, whichever is greatest.\n        // This * 2 keeps the existing formatting unless there is 'a lot' of extra whitespace, which won't break\n        // existing visual regression tests.\n        const paddingMaxCalc = (curTargetWidth) => {\n            let lastTickablePadding = 0;\n            const lastTickable = lastContext && lastContext.getMaxTickable();\n            if (lastTickable) {\n                const voice = lastTickable.getVoice();\n                // If the number of actual ticks in the measure <> configured ticks, right-justify\n                // because the softmax won't yield the correct value\n                if (voice.getTicksUsed().value() > voice.getTotalTicks().value()) {\n                    return configMaxPadding * 2 < minDistance ? minDistance : configMaxPadding;\n                }\n                const tickWidth = lastTickable.getWidth();\n                lastTickablePadding =\n                    voice.softmax(lastContext.getMaxTicks().value()) * curTargetWidth - (tickWidth + leftPadding);\n            }\n            return configMaxPadding * 2 < lastTickablePadding ? lastTickablePadding : configMaxPadding;\n        };\n        let paddingMax = paddingMaxCalc(targetWidth);\n        let paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n        const maxX = adjustedJustifyWidth - paddingMin;\n        let iterations = maxIterations;\n        // Adjust justification width until the right margin is as close as possible to the calculated padding,\n        // without going over\n        while ((actualWidth > maxX && iterations > 0) || (actualWidth + paddingMax < maxX && iterations > 1)) {\n            targetWidth -= actualWidth - maxX;\n            paddingMax = paddingMaxCalc(targetWidth);\n            paddingMin = paddingMax - (configMaxPadding - configMinPadding);\n            actualWidth = shiftToIdealDistances(calculateIdealDistances(targetWidth));\n            iterations--;\n        }\n        this.justifyWidth = justifyWidth;\n        return this.evaluate();\n    }\n    /** Calculate the total cost of this formatting decision. */\n    evaluate() {\n        const contexts = this.tickContexts;\n        const justifyWidth = this.justifyWidth;\n        // Calculate available slack per tick context. This works out how much freedom\n        // to move a context has in either direction, without affecting other notes.\n        this.contextGaps = { total: 0, gaps: [] };\n        contexts.list.forEach((tick, index) => {\n            if (index === 0)\n                return;\n            const prevTick = contexts.list[index - 1];\n            const prevContext = contexts.map[prevTick];\n            const context = contexts.map[tick];\n            const prevMetrics = prevContext.getMetrics();\n            const currMetrics = context.getMetrics();\n            // Calculate X position of right edge of previous note\n            const insideRightEdge = prevContext.getX() + prevMetrics.notePx + prevMetrics.totalRightPx;\n            // Calculate X position of left edge of current note\n            const insideLeftEdge = context.getX() - currMetrics.totalLeftPx;\n            const gap = insideLeftEdge - insideRightEdge;\n            this.contextGaps.total += gap;\n            this.contextGaps.gaps.push({ x1: insideRightEdge, x2: insideLeftEdge });\n            // Tell the tick contexts how much they can reposition themselves.\n            context.getFormatterMetrics().freedom.left = gap;\n            prevContext.getFormatterMetrics().freedom.right = gap;\n        });\n        // Calculate mean distance in each voice for each duration type, then calculate\n        // how far each note is from the mean.\n        this.durationStats = {};\n        const durationStats = this.durationStats;\n        function updateStats(duration, space) {\n            const stats = durationStats[duration];\n            if (stats === undefined) {\n                durationStats[duration] = { mean: space, count: 1 };\n            }\n            else {\n                stats.count += 1;\n                stats.mean = (stats.mean + space) / 2;\n            }\n        }\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note, i, notes) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getMetrics();\n                const formatterMetrics = note.getFormatterMetrics();\n                const leftNoteEdge = note.getX() + metrics.notePx + metrics.modRightPx + metrics.rightDisplacedHeadPx;\n                let space = 0;\n                if (i < notes.length - 1) {\n                    const rightNote = notes[i + 1];\n                    const rightMetrics = rightNote.getMetrics();\n                    const rightNoteEdge = rightNote.getX() - rightMetrics.modLeftPx - rightMetrics.leftDisplacedHeadPx;\n                    space = rightNoteEdge - leftNoteEdge;\n                    formatterMetrics.space.used = rightNote.getX() - note.getX();\n                    rightNote.getFormatterMetrics().freedom.left = space;\n                }\n                else {\n                    space = justifyWidth - leftNoteEdge;\n                    formatterMetrics.space.used = justifyWidth - note.getX();\n                }\n                formatterMetrics.freedom.right = space;\n                updateStats(duration, formatterMetrics.space.used);\n            });\n        });\n        // Calculate how much each note deviates from the mean. Loss function is square\n        // root of the sum of squared deviations.\n        let totalDeviation = 0;\n        this.voices.forEach((voice) => {\n            voice.getTickables().forEach((note) => {\n                const duration = note.getTicks().clone().simplify().toString();\n                const metrics = note.getFormatterMetrics();\n                metrics.space.mean = durationStats[duration].mean;\n                metrics.duration = duration;\n                metrics.iterations += 1;\n                metrics.space.deviation = metrics.space.used - metrics.space.mean;\n                totalDeviation += Math.pow(metrics.space.deviation, 2);\n            });\n        });\n        this.totalCost = Math.sqrt(totalDeviation);\n        this.lossHistory.push(this.totalCost);\n        return this.totalCost;\n    }\n    /**\n     * Run a single iteration of rejustification. At a high level, this method calculates\n     * the overall \"loss\" (or cost) of this layout, and repositions tickcontexts in an\n     * attempt to reduce the cost. You can call this method multiple times until it finds\n     * and oscillates around a global minimum.\n     * @param options[alpha] the \"learning rate\" for the formatter. It determines how much of a shift\n     * the formatter should make based on its cost function.\n     */\n    tune(options) {\n        var _a;\n        const contexts = this.tickContexts;\n        if (!contexts) {\n            return 0;\n        }\n        const alpha = (_a = options === null || options === void 0 ? void 0 : options.alpha) !== null && _a !== void 0 ? _a : 0.5;\n        // Move `current` tickcontext by `shift` pixels, and adjust the freedom\n        // on adjacent tickcontexts.\n        function move(current, shift, prev, next) {\n            current.setX(current.getX() + shift);\n            current.getFormatterMetrics().freedom.left += shift;\n            current.getFormatterMetrics().freedom.right -= shift;\n            if (prev)\n                prev.getFormatterMetrics().freedom.right += shift;\n            if (next)\n                next.getFormatterMetrics().freedom.left -= shift;\n        }\n        let shift = 0;\n        this.totalShift = 0;\n        contexts.list.forEach((tick, index, list) => {\n            const context = contexts.map[tick];\n            const prevContext = index > 0 ? contexts.map[list[index - 1]] : undefined;\n            const nextContext = index < list.length - 1 ? contexts.map[list[index + 1]] : undefined;\n            move(context, shift, prevContext, nextContext);\n            const cost = -sumArray(context.getTickables().map((t) => t.getFormatterMetrics().space.deviation));\n            if (cost > 0) {\n                shift = -Math.min(context.getFormatterMetrics().freedom.right, Math.abs(cost));\n            }\n            else if (cost < 0) {\n                if (nextContext) {\n                    shift = Math.min(nextContext.getFormatterMetrics().freedom.right, Math.abs(cost));\n                }\n                else {\n                    shift = 0;\n                }\n            }\n            shift *= alpha;\n            this.totalShift += shift;\n        });\n        return this.evaluate();\n    }\n    /**\n     * This is the top-level call for all formatting logic completed\n     * after `x` *and* `y` values have been computed for the notes\n     * in the voices.\n     */\n    postFormat() {\n        this.modifierContexts.forEach((modifierContexts) => {\n            modifierContexts.array.forEach((mc) => mc.postFormat());\n        });\n        this.tickContexts.list.forEach((tick) => {\n            this.tickContexts.map[tick].postFormat();\n        });\n        return this;\n    }\n    /**\n     * Take all `voices` and create `ModifierContext`s out of them. This tells\n     * the formatters that the voices belong on a single stave.\n     */\n    joinVoices(voices) {\n        this.createModifierContexts(voices);\n        this.hasMinTotalWidth = false;\n        return this;\n    }\n    /**\n     * Align rests in voices, justify the contexts, and position the notes\n     * so voices are aligned and ready to render onto the stave. This method\n     * mutates the `x` positions of all tickables in `voices`.\n     *\n     * Voices are full justified to fit in `justifyWidth` pixels.\n     *\n     * Set `options.context` to the rendering context. Set `options.align_rests`\n     * to true to enable rest alignment.\n     */\n    format(voices, justifyWidth, options) {\n        const opts = Object.assign({ align_rests: false }, options);\n        this.voices = voices;\n        const softmaxFactor = this.formatterOptions.softmaxFactor;\n        if (softmaxFactor) {\n            this.voices.forEach((v) => v.setSoftmaxFactor(softmaxFactor));\n        }\n        this.alignRests(voices, opts.align_rests);\n        this.createTickContexts(voices);\n        this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n        // Only postFormat if a stave was supplied for y value formatting\n        if (opts.stave)\n            this.postFormat();\n        return this;\n    }\n    // This method is just like `format` except that the `justifyWidth` is inferred from the `stave`.\n    formatToStave(voices, stave, optionsParam) {\n        const options = Object.assign({ context: stave.getContext() }, optionsParam);\n        // eslint-disable-next-line\n        const justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - Stave.defaultPadding;\n        L('Formatting voices to width: ', justifyWidth);\n        return this.format(voices, justifyWidth, options);\n    }\n    getTickContext(tick) {\n        var _a;\n        return (_a = this.tickContexts) === null || _a === void 0 ? void 0 : _a.map[tick];\n    }\n}\n// To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\nFormatter.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n/**\n * ## Description\n *\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same voice. If they are of different rhythmic\n * values, then options.num_notes must be set.\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes: staveNotes,\n *   notes, etc... any class that inherits stemmableNote at some\n *   point in its prototype chain.\n * @param options: object {\n *\n *   num_notes: fit this many notes into...\n *   notes_occupied: ...the space of this many notes\n *\n *       Together, these two properties make up the tuplet ratio\n *     in the form of num_notes : notes_occupied.\n *       num_notes defaults to the number of notes passed in, so\n *     it is important that if you omit this property, all of\n *     the notes passed should be of the same note value.\n *       notes_occupied defaults to 2 -- so you should almost\n *     certainly pass this parameter for anything other than\n *     a basic triplet.\n *\n *   location:\n *     default 1, which is above the notes: ┌─── 3 ───┐\n *      -1 is below the notes └─── 3 ───┘\n *\n *   bracketed: boolean, draw a bracket around the tuplet number\n *     when true: ┌─── 3 ───┐   when false: 3\n *     defaults to true if notes are not beamed, false otherwise\n *\n *   ratioed: boolean\n *     when true: ┌─── 7:8 ───┐, when false: ┌─── 7 ───┐\n *     defaults to true if the difference between num_notes and\n *     notes_occupied is greater than 1.\n *\n *   y_offset: int, default 0\n *     manually offset a tuplet, for instance to avoid collisions\n *     with articulations, etc...\n * }\n */\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Glyph } from './glyph';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, RuntimeError } from './util';\nexport var TupletLocation;\n(function (TupletLocation) {\n    TupletLocation[TupletLocation[\"BOTTOM\"] = -1] = \"BOTTOM\";\n    TupletLocation[TupletLocation[\"TOP\"] = 1] = \"TOP\";\n})(TupletLocation || (TupletLocation = {}));\nexport class Tuplet extends Element {\n    static get CATEGORY() {\n        return Category.Tuplet;\n    }\n    static get LOCATION_TOP() {\n        return TupletLocation.TOP;\n    }\n    static get LOCATION_BOTTOM() {\n        return TupletLocation.BOTTOM;\n    }\n    static get NESTING_OFFSET() {\n        return 15;\n    }\n    static get metrics() {\n        const tupletMetrics = Tables.currentMusicFont().getMetrics().tuplet;\n        if (!tupletMetrics)\n            throw new RuntimeError('BadMetrics', `tuplet missing`);\n        return tupletMetrics;\n    }\n    constructor(notes, options = {}) {\n        super();\n        this.numerator_glyphs = [];\n        this.denom_glyphs = [];\n        if (!notes || !notes.length) {\n            throw new RuntimeError('BadArguments', 'No notes provided for tuplet.');\n        }\n        this.options = options;\n        this.notes = notes;\n        this.num_notes = this.options.num_notes != undefined ? this.options.num_notes : notes.length;\n        // We accept beats_occupied, but warn that it's deprecated:\n        // the preferred property name is now notes_occupied.\n        if (this.options.beats_occupied) {\n            this.beatsOccupiedDeprecationWarning();\n        }\n        this.notes_occupied = this.options.notes_occupied || this.options.beats_occupied || 2;\n        if (this.options.bracketed != undefined) {\n            this.bracketed = this.options.bracketed;\n        }\n        else {\n            this.bracketed = notes.some((note) => !note.hasBeam());\n        }\n        this.ratioed =\n            this.options.ratioed != undefined ? this.options.ratioed : Math.abs(this.notes_occupied - this.num_notes) > 1;\n        this.point = (Tables.NOTATION_FONT_SCALE * 3) / 5;\n        this.y_pos = 16;\n        this.x_pos = 100;\n        this.width = 200;\n        this.setTupletLocation(this.options.location || Tuplet.LOCATION_TOP);\n        Formatter.AlignRestsToNotes(notes, true, true);\n        this.resolveGlyphs();\n        this.attach();\n    }\n    attach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.setTuplet(this);\n        }\n    }\n    detach() {\n        for (let i = 0; i < this.notes.length; i++) {\n            const note = this.notes[i];\n            note.resetTuplet(this);\n        }\n    }\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed(bracketed) {\n        this.bracketed = !!bracketed;\n        return this;\n    }\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed(ratioed) {\n        this.ratioed = !!ratioed;\n        return this;\n    }\n    /**\n     * Set the tuplet indicator to be displayed either on the top or bottom of the stave.\n     */\n    setTupletLocation(location) {\n        if (location !== Tuplet.LOCATION_TOP && location !== Tuplet.LOCATION_BOTTOM) {\n            // eslint-disable-next-line\n            console.warn(`Invalid tuplet location [${location}]. Using Tuplet.LOCATION_TOP.`);\n            location = Tuplet.LOCATION_TOP;\n        }\n        this.location = location;\n        return this;\n    }\n    getNotes() {\n        return this.notes;\n    }\n    getNoteCount() {\n        return this.num_notes;\n    }\n    beatsOccupiedDeprecationWarning() {\n        // eslint-disable-next-line\n        console.warn('beats_occupied has been deprecated as an option for tuplets. Please use notes_occupied instead.', 'Calls to getBeatsOccupied / setBeatsOccupied should now be routed to getNotesOccupied / setNotesOccupied.', 'The old methods will be removed in VexFlow 5.0.');\n    }\n    getBeatsOccupied() {\n        this.beatsOccupiedDeprecationWarning();\n        return this.getNotesOccupied();\n    }\n    setBeatsOccupied(beats) {\n        this.beatsOccupiedDeprecationWarning();\n        return this.setNotesOccupied(beats);\n    }\n    getNotesOccupied() {\n        return this.notes_occupied;\n    }\n    setNotesOccupied(notes) {\n        this.detach();\n        this.notes_occupied = notes;\n        this.resolveGlyphs();\n        this.attach();\n    }\n    resolveGlyphs() {\n        this.numerator_glyphs = [];\n        let n = this.num_notes;\n        while (n >= 1) {\n            this.numerator_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n        this.denom_glyphs = [];\n        n = this.notes_occupied;\n        while (n >= 1) {\n            this.denom_glyphs.unshift(new Glyph('timeSig' + (n % 10), this.point));\n            n = parseInt((n / 10).toString(), 10);\n        }\n    }\n    // determine how many tuplets are nested within this tuplet\n    // on the same side (above/below), to calculate a y\n    // offset for this tuplet:\n    getNestedTupletCount() {\n        const location = this.location;\n        const first_note = this.notes[0];\n        let maxTupletCount = countTuplets(first_note, location);\n        let minTupletCount = countTuplets(first_note, location);\n        // Count the tuplets that are on the same side (above/below)\n        // as this tuplet:\n        function countTuplets(note, location) {\n            return note.getTupletStack().filter((tuplet) => tuplet.location === location).length;\n        }\n        this.notes.forEach((note) => {\n            const tupletCount = countTuplets(note, location);\n            maxTupletCount = tupletCount > maxTupletCount ? tupletCount : maxTupletCount;\n            minTupletCount = tupletCount < minTupletCount ? tupletCount : minTupletCount;\n        });\n        return maxTupletCount - minTupletCount;\n    }\n    // determine the y position of the tuplet:\n    getYPosition() {\n        // offset the tuplet for any nested tuplets between\n        // it and the notes:\n        const nested_tuplet_y_offset = this.getNestedTupletCount() * Tuplet.NESTING_OFFSET * -this.location;\n        // offset the tuplet for any manual y_offset:\n        const y_offset = this.options.y_offset || 0;\n        // now iterate through the notes and find our highest\n        // or lowest locations, to form a base y_pos\n        const first_note = this.notes[0];\n        let y_pos;\n        if (this.location === Tuplet.LOCATION_TOP) {\n            y_pos = first_note.checkStave().getYForLine(0) - Tuplet.metrics.topModifierOffset;\n            // check modifiers above note to see if they will collide with tuplet beam\n            for (let i = 0; i < this.notes.length; ++i) {\n                const note = this.notes[i];\n                let modLines = 0;\n                const mc = note.getModifierContext();\n                if (mc) {\n                    modLines = Math.max(modLines, mc.getState().top_text_line);\n                }\n                const modY = note.getYForTopText(modLines) - Tuplet.metrics.noteHeadOffset;\n                if (note.hasStem() || note.isRest()) {\n                    const top_y = note.getStemDirection() === Stem.UP\n                        ? note.getStemExtents().topY - Tuplet.metrics.stemOffset\n                        : note.getStemExtents().baseY - Tuplet.metrics.noteHeadOffset;\n                    y_pos = Math.min(top_y, y_pos);\n                    if (modLines > 0) {\n                        y_pos = Math.min(modY, y_pos);\n                    }\n                }\n            }\n        }\n        else {\n            let lineCheck = Tuplet.metrics.bottomLine; // tuplet default on line 4\n            // check modifiers below note to see if they will collide with tuplet beam\n            this.notes.forEach((nn) => {\n                const mc = nn.getModifierContext();\n                if (mc) {\n                    lineCheck = Math.max(lineCheck, mc.getState().text_line + 1);\n                }\n            });\n            y_pos = first_note.checkStave().getYForLine(lineCheck) + Tuplet.metrics.noteHeadOffset;\n            for (let i = 0; i < this.notes.length; ++i) {\n                if (this.notes[i].hasStem() || this.notes[i].isRest()) {\n                    const bottom_y = this.notes[i].getStemDirection() === Stem.UP\n                        ? this.notes[i].getStemExtents().baseY + Tuplet.metrics.noteHeadOffset\n                        : this.notes[i].getStemExtents().topY + Tuplet.metrics.stemOffset;\n                    if (bottom_y > y_pos) {\n                        y_pos = bottom_y;\n                    }\n                }\n            }\n        }\n        return y_pos + nested_tuplet_y_offset + y_offset;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        // determine x value of left bound of tuplet\n        const first_note = this.notes[0];\n        const last_note = this.notes[this.notes.length - 1];\n        if (!this.bracketed) {\n            this.x_pos = first_note.getStemX();\n            this.width = last_note.getStemX() - this.x_pos;\n        }\n        else {\n            this.x_pos = first_note.getTieLeftX() - 5;\n            this.width = last_note.getTieRightX() - this.x_pos + 5;\n        }\n        // determine y value for tuplet\n        this.y_pos = this.getYPosition();\n        const addGlyphWidth = (width, glyph) => width + defined(glyph.getMetrics().width);\n        // calculate total width of tuplet notation\n        let width = this.numerator_glyphs.reduce(addGlyphWidth, 0);\n        if (this.ratioed) {\n            width = this.denom_glyphs.reduce(addGlyphWidth, width);\n            width += this.point * 0.32;\n        }\n        const notation_center_x = this.x_pos + this.width / 2;\n        const notation_start_x = notation_center_x - width / 2;\n        // draw bracket if the tuplet is not beamed\n        if (this.bracketed) {\n            const line_width = this.width / 2 - width / 2 - 5;\n            // only draw the bracket if it has positive length\n            if (line_width > 0) {\n                ctx.fillRect(this.x_pos, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos + this.width / 2 + width / 2 + 5, this.y_pos, line_width, 1);\n                ctx.fillRect(this.x_pos, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n                ctx.fillRect(this.x_pos + this.width, this.y_pos + (this.location === Tuplet.LOCATION_BOTTOM ? 1 : 0), 1, this.location * 10);\n            }\n        }\n        // draw numerator glyphs\n        const shiftY = Tables.currentMusicFont().lookupMetric('digits.shiftY', 0);\n        let x_offset = 0;\n        this.numerator_glyphs.forEach((glyph) => {\n            glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n            x_offset += defined(glyph.getMetrics().width);\n        });\n        // display colon and denominator if the ratio is to be shown\n        if (this.ratioed) {\n            const colon_x = notation_start_x + x_offset + this.point * 0.16;\n            const colon_radius = this.point * 0.06;\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos - this.point * 0.08, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            ctx.beginPath();\n            ctx.arc(colon_x, this.y_pos + this.point * 0.12, colon_radius, 0, Math.PI * 2, false);\n            ctx.closePath();\n            ctx.fill();\n            x_offset += this.point * 0.32;\n            this.denom_glyphs.forEach((glyph) => {\n                glyph.render(ctx, notation_start_x + x_offset, this.y_pos + this.point / 3 - 2 + shiftY);\n                x_offset += defined(glyph.getMetrics().width);\n            });\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Fraction } from './fraction';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { TupletLocation } from './tuplet';\nimport { Category, isStaveNote, isTabNote } from './typeguard';\nimport { RuntimeError } from './util';\nfunction calculateStemDirection(notes) {\n    let lineSum = 0;\n    notes.forEach((note) => {\n        if (note.keyProps) {\n            note.keyProps.forEach((keyProp) => {\n                lineSum += keyProp.line - 3;\n            });\n        }\n    });\n    if (lineSum >= 0) {\n        return Stem.DOWN;\n    }\n    return Stem.UP;\n}\nfunction getStemSlope(firstNote, lastNote) {\n    const firstStemTipY = firstNote.getStemExtents().topY;\n    const firstStemX = firstNote.getStemX();\n    const lastStemTipY = lastNote.getStemExtents().topY;\n    const lastStemX = lastNote.getStemX();\n    return (lastStemTipY - firstStemTipY) / (lastStemX - firstStemX);\n}\nexport const BEAM_LEFT = 'L';\nexport const BEAM_RIGHT = 'R';\nexport const BEAM_BOTH = 'B';\n/** `Beams` span over a set of `StemmableNotes`. */\nexport class Beam extends Element {\n    static get CATEGORY() {\n        return Category.Beam;\n    }\n    /** Get the direction of the beam */\n    getStemDirection() {\n        return this.stem_direction;\n    }\n    /**\n     * Get the default beam groups for a provided time signature.\n     * Attempt to guess if the time signature is not found in table.\n     * Currently this is fairly naive.\n     */\n    static getDefaultBeamGroups(time_sig) {\n        if (!time_sig || time_sig === 'c') {\n            time_sig = '4/4';\n        }\n        const defaults = {\n            '1/2': ['1/2'],\n            '2/2': ['1/2'],\n            '3/2': ['1/2'],\n            '4/2': ['1/2'],\n            '1/4': ['1/4'],\n            '2/4': ['1/4'],\n            '3/4': ['1/4'],\n            '4/4': ['1/4'],\n            '1/8': ['1/8'],\n            '2/8': ['2/8'],\n            '3/8': ['3/8'],\n            '4/8': ['2/8'],\n            '1/16': ['1/16'],\n            '2/16': ['2/16'],\n            '3/16': ['3/16'],\n            '4/16': ['2/16'],\n        };\n        const groups = defaults[time_sig];\n        if (groups === undefined) {\n            // If no beam groups found, naively determine\n            // the beam groupings from the time signature\n            const beatTotal = parseInt(time_sig.split('/')[0], 10);\n            const beatValue = parseInt(time_sig.split('/')[1], 10);\n            const tripleMeter = beatTotal % 3 === 0;\n            if (tripleMeter) {\n                return [new Fraction(3, beatValue)];\n            }\n            else if (beatValue > 4) {\n                return [new Fraction(2, beatValue)];\n            }\n            else if (beatValue <= 4) {\n                return [new Fraction(1, beatValue)];\n            }\n        }\n        else {\n            return groups.map((group) => new Fraction().parse(group));\n        }\n        return [new Fraction(1, 4)];\n    }\n    /**\n     * A helper function to automatically build basic beams for a voice. For more\n     * complex auto-beaming use `Beam.generateBeams()`.\n     * @param voice the voice to generate the beams for\n     * @param stem_direction a stem direction to apply to the entire voice\n     * @param groups an array of `Fraction` representing beat groupings for the beam\n     */\n    static applyAndGetBeams(voice, stem_direction, groups) {\n        return Beam.generateBeams(voice.getTickables(), { groups, stem_direction });\n    }\n    /**\n     * A helper function to autimatically build beams for a voice with\n     * configuration options.\n     *\n     * Example configuration object:\n     *\n     * ```\n     * config = {\n     *   groups: [new Vex.Flow.Fraction(2, 8)],\n     *   stem_direction: -1,\n     *   beam_rests: true,\n     *   beam_middle_only: true,\n     *   show_stemlets: false\n     * };\n     * ```\n     * @param notes an array of notes to create the beams for\n     * @param config the configuration object\n     * @param config.stem_direction set to apply the same direction to all notes\n     * @param config.beam_rests set to `true` to include rests in the beams\n     * @param config.beam_middle_only set to `true` to only beam rests in the middle of the beat\n     * @param config.show_stemlets set to `true` to draw stemlets for rests\n     * @param config.maintain_stem_directions set to `true` to not apply new stem directions\n     * @param config.groups array of `Fractions` that represent the beat structure to beam the notes\n     *\n     */\n    static generateBeams(notes, config = {}) {\n        if (!config.groups || !config.groups.length) {\n            config.groups = [new Fraction(2, 8)];\n        }\n        // Convert beam groups to tick amounts\n        const tickGroups = config.groups.map((group) => {\n            if (!group.multiply) {\n                throw new RuntimeError('InvalidBeamGroups', 'The beam groups must be an array of Vex.Flow.Fractions');\n            }\n            return group.clone().multiply(Tables.RESOLUTION, 1);\n        });\n        const unprocessedNotes = notes;\n        let currentTickGroup = 0;\n        let noteGroups = [];\n        let currentGroup = [];\n        function getTotalTicks(vf_notes) {\n            return vf_notes.reduce((memo, note) => note.getTicks().clone().add(memo), new Fraction(0, 1));\n        }\n        function nextTickGroup() {\n            if (tickGroups.length - 1 > currentTickGroup) {\n                currentTickGroup += 1;\n            }\n            else {\n                currentTickGroup = 0;\n            }\n        }\n        function createGroups() {\n            let nextGroup = [];\n            // number of ticks in current group\n            let currentGroupTotalTicks = new Fraction(0, 1);\n            unprocessedNotes.forEach((unprocessedNote) => {\n                nextGroup = [];\n                if (unprocessedNote.shouldIgnoreTicks()) {\n                    noteGroups.push(currentGroup);\n                    currentGroup = nextGroup;\n                    return; // Ignore untickables (like bar notes)\n                }\n                currentGroup.push(unprocessedNote);\n                const ticksPerGroup = tickGroups[currentTickGroup].clone();\n                const totalTicks = getTotalTicks(currentGroup).add(currentGroupTotalTicks);\n                // Double the amount of ticks in a group, if it's an unbeamable tuplet\n                const unbeamable = Tables.durationToNumber(unprocessedNote.getDuration()) < 8;\n                if (unbeamable && unprocessedNote.getTuplet()) {\n                    ticksPerGroup.numerator *= 2;\n                }\n                // If the note that was just added overflows the group tick total\n                if (totalTicks.greaterThan(ticksPerGroup)) {\n                    // If the overflow note can be beamed, start the next group\n                    // with it. Unbeamable notes leave the group overflowed.\n                    if (!unbeamable) {\n                        const note = currentGroup.pop();\n                        if (note)\n                            nextGroup.push(note);\n                    }\n                    noteGroups.push(currentGroup);\n                    // We have overflown, so we're going to next tick group. As we might have\n                    // overflown by more than 1 group, we need to go forward as many times as\n                    // needed, decreasing currentGroupTotalTicks by as many ticks as there are\n                    // in current groups as we go forward.\n                    do {\n                        currentGroupTotalTicks = totalTicks.subtract(tickGroups[currentTickGroup]);\n                        nextTickGroup();\n                    } while (currentGroupTotalTicks.greaterThanEquals(tickGroups[currentTickGroup]));\n                    currentGroup = nextGroup;\n                }\n                else if (totalTicks.equals(ticksPerGroup)) {\n                    noteGroups.push(currentGroup);\n                    currentGroupTotalTicks = new Fraction(0, 1);\n                    currentGroup = nextGroup;\n                    nextTickGroup();\n                }\n            });\n            // Adds any remainder notes beam\n            if (currentGroup.length > 0) {\n                noteGroups.push(currentGroup);\n            }\n        }\n        function getBeamGroups() {\n            return noteGroups.filter((group) => {\n                if (group.length > 1) {\n                    let beamable = true;\n                    group.forEach((note) => {\n                        if (note.getIntrinsicTicks() >= Tables.durationToTicks('4')) {\n                            beamable = false;\n                        }\n                    });\n                    return beamable;\n                }\n                return false;\n            });\n        }\n        // Splits up groups by Rest\n        function sanitizeGroups() {\n            const sanitizedGroups = [];\n            noteGroups.forEach((group) => {\n                let tempGroup = [];\n                group.forEach((note, index, group) => {\n                    const isFirstOrLast = index === 0 || index === group.length - 1;\n                    const prevNote = group[index - 1];\n                    const breaksOnEachRest = !config.beam_rests && note.isRest();\n                    const breaksOnFirstOrLastRest = config.beam_rests && config.beam_middle_only && note.isRest() && isFirstOrLast;\n                    let breakOnStemChange = false;\n                    if (config.maintain_stem_directions && prevNote && !note.isRest() && !prevNote.isRest()) {\n                        const prevDirection = prevNote.getStemDirection();\n                        const currentDirection = note.getStemDirection();\n                        breakOnStemChange = currentDirection !== prevDirection;\n                    }\n                    const isUnbeamableDuration = parseInt(note.getDuration(), 10) < 8;\n                    // Determine if the group should be broken at this note\n                    const shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest || breakOnStemChange || isUnbeamableDuration;\n                    if (shouldBreak) {\n                        // Add current group\n                        if (tempGroup.length > 0) {\n                            sanitizedGroups.push(tempGroup);\n                        }\n                        // Start a new group. Include the current note if the group\n                        // was broken up by stem direction, as that note needs to start\n                        // the next group of notes\n                        tempGroup = breakOnStemChange ? [note] : [];\n                    }\n                    else {\n                        // Add note to group\n                        tempGroup.push(note);\n                    }\n                });\n                // If there is a remaining group, add it as well\n                if (tempGroup.length > 0) {\n                    sanitizedGroups.push(tempGroup);\n                }\n            });\n            noteGroups = sanitizedGroups;\n        }\n        function formatStems() {\n            noteGroups.forEach((group) => {\n                let stemDirection;\n                if (config.maintain_stem_directions) {\n                    const note = findFirstNote(group);\n                    stemDirection = note ? note.getStemDirection() : Stem.UP;\n                }\n                else {\n                    if (config.stem_direction) {\n                        stemDirection = config.stem_direction;\n                    }\n                    else {\n                        stemDirection = calculateStemDirection(group);\n                    }\n                }\n                applyStemDirection(group, stemDirection);\n            });\n        }\n        function findFirstNote(group) {\n            for (let i = 0; i < group.length; i++) {\n                const note = group[i];\n                if (!note.isRest()) {\n                    return note;\n                }\n            }\n            return false;\n        }\n        function applyStemDirection(group, direction) {\n            group.forEach((note) => {\n                note.setStemDirection(direction);\n            });\n        }\n        // Get all of the tuplets in all of the note groups\n        function getTuplets() {\n            const uniqueTuplets = [];\n            // Go through all of the note groups and inspect for tuplets\n            noteGroups.forEach((group) => {\n                let tuplet;\n                group.forEach((note) => {\n                    const noteTuplet = note.getTuplet();\n                    if (noteTuplet && tuplet !== noteTuplet) {\n                        tuplet = noteTuplet;\n                        uniqueTuplets.push(tuplet);\n                    }\n                });\n            });\n            return uniqueTuplets;\n        }\n        // Using closures to store the variables throughout the various functions\n        // IMO Keeps it this process lot cleaner - but not super consistent with\n        // the rest of the API's style - Silverwolf90 (Cyril)\n        createGroups();\n        sanitizeGroups();\n        formatStems();\n        // Get the notes to be beamed\n        const beamedNoteGroups = getBeamGroups();\n        // Get the tuplets in order to format them accurately\n        const allTuplets = getTuplets();\n        // Create a Vex.Flow.Beam from each group of notes to be beamed\n        const beams = [];\n        beamedNoteGroups.forEach((group) => {\n            const beam = new Beam(group);\n            if (config.show_stemlets) {\n                beam.render_options.show_stemlets = true;\n            }\n            if (config.secondary_breaks) {\n                beam.render_options.secondary_break_ticks = Tables.durationToTicks(config.secondary_breaks);\n            }\n            if (config.flat_beams === true) {\n                beam.render_options.flat_beams = true;\n                beam.render_options.flat_beam_offset = config.flat_beam_offset;\n            }\n            beams.push(beam);\n        });\n        // Reformat tuplets\n        allTuplets.forEach((tuplet) => {\n            // Set the tuplet location based on the stem direction\n            const direction = tuplet.notes[0].stem_direction === Stem.DOWN ? TupletLocation.BOTTOM : TupletLocation.TOP;\n            tuplet.setTupletLocation(direction);\n            // If any of the notes in the tuplet are not beamed, draw a bracket.\n            let bracketed = false;\n            for (let i = 0; i < tuplet.notes.length; i++) {\n                const note = tuplet.notes[i];\n                if (!note.hasBeam()) {\n                    bracketed = true;\n                    break;\n                }\n            }\n            tuplet.setBracketed(bracketed);\n        });\n        return beams;\n    }\n    constructor(notes, auto_stem = false) {\n        super();\n        this.slope = 0;\n        this.y_shift = 0;\n        /**\n         * Overrides to default beam directions for secondary-level beams that do not\n         * connect to any other note. See further explanation at\n         * `setPartialBeamSideAt`\n         */\n        this.forcedPartialDirections = {};\n        if (!notes || notes.length === 0) {\n            throw new RuntimeError('BadArguments', 'No notes provided for beam.');\n        }\n        if (notes.length === 1) {\n            throw new RuntimeError('BadArguments', 'Too few notes for beam.');\n        }\n        // Validate beam line, direction and ticks.\n        this.ticks = notes[0].getIntrinsicTicks();\n        if (this.ticks >= Tables.durationToTicks('4')) {\n            throw new RuntimeError('BadArguments', 'Beams can only be applied to notes shorter than a quarter note.');\n        }\n        let i; // shared iterator\n        let note;\n        this.stem_direction = notes[0].getStemDirection();\n        let stem_direction = this.stem_direction;\n        // Figure out optimal stem direction based on given notes\n        if (auto_stem && isStaveNote(notes[0])) {\n            stem_direction = calculateStemDirection(notes);\n        }\n        else if (auto_stem && isTabNote(notes[0])) {\n            // Auto Stem TabNotes\n            const stem_weight = notes.reduce((memo, note) => memo + note.getStemDirection(), 0);\n            stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n        }\n        // Apply stem directions and attach beam to notes\n        for (i = 0; i < notes.length; ++i) {\n            note = notes[i];\n            if (auto_stem) {\n                note.setStemDirection(stem_direction);\n                this.stem_direction = stem_direction;\n            }\n            note.setBeam(this);\n        }\n        this.postFormatted = false;\n        this.notes = notes;\n        this.beam_count = this.getBeamCount();\n        this.break_on_indices = [];\n        this.render_options = {\n            beam_width: 5,\n            max_slope: 0.25,\n            min_slope: -0.25,\n            slope_iterations: 20,\n            slope_cost: 100,\n            show_stemlets: false,\n            stemlet_extension: 7,\n            partial_beam_length: 10,\n            flat_beams: false,\n            min_flat_beam_offset: 15,\n        };\n    }\n    /** Get the notes in this beam. */\n    getNotes() {\n        return this.notes;\n    }\n    /** Get the max number of beams in the set of notes. */\n    getBeamCount() {\n        const beamCounts = this.notes.map((note) => note.getGlyphProps().beam_count);\n        const maxBeamCount = beamCounts.reduce((max, beamCount) => (beamCount > max ? beamCount : max));\n        return maxBeamCount;\n    }\n    /** Set which note `indices` to break the secondary beam at. */\n    breakSecondaryAt(indices) {\n        this.break_on_indices = indices;\n        return this;\n    }\n    /**\n     * Forces the direction of a partial beam (a secondary-level beam that exists\n     * on one note only of the beam group). This is useful in rhythms such as 6/8\n     * eighth-sixteenth-eighth-sixteenth, where the direction of the beam on the\n     * first sixteenth note can help imply whether the rhythm is to be felt as\n     * three groups of eighth notes (typical) or as two groups of three-sixteenths\n     * (less common):\n     * ```\n     *  ┌───┬──┬──┐      ┌──┬──┬──┐\n     *  │   ├─ │ ─┤  vs  │ ─┤  │ ─┤\n     *  │   │  │  │      │  │  │  │\n     * ```\n     */\n    setPartialBeamSideAt(noteIndex, side) {\n        this.forcedPartialDirections[noteIndex] = side;\n        return this;\n    }\n    /**\n     * Restore the default direction of a partial beam (a secondary-level beam\n     * that does not connect to any other notes).\n     */\n    unsetPartialBeamSideAt(noteIndex) {\n        delete this.forcedPartialDirections[noteIndex];\n        return this;\n    }\n    /** Return the y coordinate for linear function. */\n    getSlopeY(x, first_x_px, first_y_px, slope) {\n        return first_y_px + (x - first_x_px) * slope;\n    }\n    /** Calculate the best possible slope for the provided notes. */\n    calculateSlope() {\n        const { notes, stem_direction: stemDirection, render_options: { max_slope, min_slope, slope_iterations, slope_cost }, } = this;\n        const firstNote = notes[0];\n        const initialSlope = getStemSlope(firstNote, notes[notes.length - 1]);\n        const increment = (max_slope - min_slope) / slope_iterations;\n        let minCost = Number.MAX_VALUE;\n        let bestSlope = 0;\n        let yShift = 0;\n        // iterate through slope values to find best weighted fit\n        for (let slope = min_slope; slope <= max_slope; slope += increment) {\n            let totalStemExtension = 0;\n            let yShiftTemp = 0;\n            // iterate through notes, calculating y shift and stem extension\n            for (let i = 1; i < notes.length; ++i) {\n                const note = notes[i];\n                if (note.hasStem() || note.isRest()) {\n                    const adjustedStemTipY = this.getSlopeY(note.getStemX(), firstNote.getStemX(), firstNote.getStemExtents().topY, slope) + yShiftTemp;\n                    const stemTipY = note.getStemExtents().topY;\n                    // beam needs to be shifted up to accommodate note\n                    if (stemTipY * stemDirection < adjustedStemTipY * stemDirection) {\n                        const diff = Math.abs(stemTipY - adjustedStemTipY);\n                        yShiftTemp += diff * -stemDirection;\n                        totalStemExtension += diff * i;\n                    }\n                    else {\n                        // beam overshoots note, account for the difference\n                        totalStemExtension += (stemTipY - adjustedStemTipY) * stemDirection;\n                    }\n                }\n            }\n            // most engraving books suggest aiming for a slope about half the angle of the\n            // difference between the first and last notes' stem length;\n            const idealSlope = initialSlope / 2;\n            const distanceFromIdeal = Math.abs(idealSlope - slope);\n            // This tries to align most beams to something closer to the idealSlope, but\n            // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n            const cost = slope_cost * distanceFromIdeal + Math.abs(totalStemExtension);\n            // update state when a more ideal slope is found\n            if (cost < minCost) {\n                minCost = cost;\n                bestSlope = slope;\n                yShift = yShiftTemp;\n            }\n        }\n        this.slope = bestSlope;\n        this.y_shift = yShift;\n    }\n    /** Calculate a slope and y-shift for flat beams. */\n    calculateFlatSlope() {\n        const { notes, stem_direction, render_options: { beam_width, min_flat_beam_offset, flat_beam_offset }, } = this;\n        // If a flat beam offset has not yet been supplied or calculated,\n        // generate one based on the notes in this particular note group\n        let total = 0;\n        let extremeY = 0; // Store the highest or lowest note here\n        let extremeBeamCount = 0; // The beam count of the extreme note\n        let currentExtreme = 0;\n        for (let i = 0; i < notes.length; i++) {\n            // Total up all of the offsets so we can average them out later\n            const note = notes[i];\n            const stemTipY = note.getStemExtents().topY;\n            total += stemTipY;\n            // Store the highest (stems-up) or lowest (stems-down) note so the\n            //  offset can be adjusted in case the average isn't enough\n            if (stem_direction === Stem.DOWN && currentExtreme < stemTipY) {\n                currentExtreme = stemTipY;\n                extremeY = Math.max(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n            else if (stem_direction === Stem.UP && (currentExtreme === 0 || currentExtreme > stemTipY)) {\n                currentExtreme = stemTipY;\n                extremeY = Math.min(...note.getYs());\n                extremeBeamCount = note.getBeamCount();\n            }\n        }\n        // Average the offsets to try and come up with a reasonable one that\n        //  works for all of the notes in the beam group.\n        let offset = total / notes.length;\n        // In case the average isn't long enough, add or subtract some more\n        //  based on the highest or lowest note (again, based on the stem\n        //  direction). This also takes into account the added height due to\n        //  the width of the beams.\n        const beamWidth = beam_width * 1.5;\n        const extremeTest = min_flat_beam_offset + extremeBeamCount * beamWidth;\n        const newOffset = extremeY + extremeTest * -stem_direction;\n        if (stem_direction === Stem.DOWN && offset < newOffset) {\n            offset = extremeY + extremeTest;\n        }\n        else if (stem_direction === Stem.UP && offset > newOffset) {\n            offset = extremeY - extremeTest;\n        }\n        if (!flat_beam_offset) {\n            // Set the offset for the group based on the calculations above.\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.DOWN && offset > flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        else if (stem_direction === Stem.UP && offset < flat_beam_offset) {\n            this.render_options.flat_beam_offset = offset;\n        }\n        // for flat beams, the slope and y_shift are simply 0\n        this.slope = 0;\n        this.y_shift = 0;\n    }\n    /** Return the Beam y offset. */\n    getBeamYToDraw() {\n        const firstNote = this.notes[0];\n        const firstStemTipY = firstNote.getStemExtents().topY;\n        let beamY = firstStemTipY;\n        // For flat beams, set the first and last Y to the offset, rather than\n        //  using the note's stem extents.\n        if (this.render_options.flat_beams && this.render_options.flat_beam_offset) {\n            beamY = this.render_options.flat_beam_offset;\n        }\n        return beamY;\n    }\n    /**\n     * Create new stems for the notes in the beam, so that each stem\n     * extends into the beams.\n     */\n    applyStemExtensions() {\n        const { notes, slope, y_shift, beam_count, render_options: { show_stemlets, stemlet_extension, beam_width }, } = this;\n        const firstNote = notes[0];\n        const firstStemTipY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        for (let i = 0; i < notes.length; ++i) {\n            const note = notes[i];\n            const stem = note.getStem();\n            if (stem) {\n                const stemX = note.getStemX();\n                const { topY: stemTipY } = note.getStemExtents();\n                const beamedStemTipY = this.getSlopeY(stemX, firstStemX, firstStemTipY, slope) + y_shift;\n                const preBeamExtension = stem.getExtension();\n                const beamExtension = note.getStemDirection() === Stem.UP ? stemTipY - beamedStemTipY : beamedStemTipY - stemTipY;\n                // Determine necessary extension for cross-stave notes in the beam group\n                let crossStemExtension = 0;\n                if (note.getStemDirection() !== this.stem_direction) {\n                    const beamCount = note.getGlyphProps().beam_count;\n                    crossStemExtension = (1 + (beamCount - 1) * 1.5) * this.render_options.beam_width;\n                    /* This will be required if the partial beams are moved to the note side.\n                    if (i > 0 && note.getGlyph().beam_count > 1) {\n                      const prevBeamCount = this.notes[i - 1].getGlyph().beam_count;\n                      const beamDiff = Math.abs(prevBeamCount - beamCount);\n                      if (beamDiff > 0) crossStemExtension -= beamDiff * (this.render_options.beam_width * 1.5);\n                    }\n                    */\n                }\n                stem.setExtension(preBeamExtension + beamExtension + crossStemExtension);\n                stem.adjustHeightForBeam();\n                if (note.isRest() && show_stemlets) {\n                    const beamWidth = beam_width;\n                    const totalBeamWidth = (beam_count - 1) * beamWidth * 1.5 + beamWidth;\n                    stem.setVisibility(true).setStemlet(true, totalBeamWidth + stemlet_extension);\n                }\n            }\n        }\n    }\n    /** Return upper level beam direction. */\n    lookupBeamDirection(duration, prev_tick, tick, next_tick, noteIndex) {\n        if (duration === '4') {\n            return BEAM_LEFT;\n        }\n        const forcedBeamDirection = this.forcedPartialDirections[noteIndex];\n        if (forcedBeamDirection)\n            return forcedBeamDirection;\n        const lookup_duration = `${Tables.durationToNumber(duration) / 2}`;\n        const prev_note_gets_beam = prev_tick < Tables.durationToTicks(lookup_duration);\n        const next_note_gets_beam = next_tick < Tables.durationToTicks(lookup_duration);\n        const note_gets_beam = tick < Tables.durationToTicks(lookup_duration);\n        if (prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_BOTH;\n        }\n        else if (prev_note_gets_beam && !next_note_gets_beam && note_gets_beam) {\n            return BEAM_LEFT;\n        }\n        else if (!prev_note_gets_beam && next_note_gets_beam && note_gets_beam) {\n            return BEAM_RIGHT;\n        }\n        return this.lookupBeamDirection(lookup_duration, prev_tick, tick, next_tick, noteIndex);\n    }\n    /** Get the x coordinates for the beam lines of specific `duration`. */\n    getBeamLines(duration) {\n        const tick_of_duration = Tables.durationToTicks(duration);\n        let beam_started = false;\n        const beam_lines = [];\n        let current_beam = undefined;\n        const partial_beam_length = this.render_options.partial_beam_length;\n        let previous_should_break = false;\n        let tick_tally = 0;\n        for (let i = 0; i < this.notes.length; ++i) {\n            const note = this.notes[i];\n            // See if we need to break secondary beams on this note.\n            const ticks = note.getTicks().value();\n            tick_tally += ticks;\n            let should_break = false;\n            // 8th note beams are always drawn.\n            if (parseInt(duration, 10) >= 8) {\n                // First, check to see if any indices were set up through breakSecondaryAt()\n                should_break = this.break_on_indices.indexOf(i) !== -1;\n                // If the secondary breaks were auto-configured in the render options,\n                //  handle that as well.\n                if (this.render_options.secondary_break_ticks && tick_tally >= this.render_options.secondary_break_ticks) {\n                    tick_tally = 0;\n                    should_break = true;\n                }\n            }\n            const note_gets_beam = note.getIntrinsicTicks() < tick_of_duration;\n            const stem_x = note.getStemX() - Stem.WIDTH / 2;\n            // Check to see if the next note in the group will get a beam at this\n            //  level. This will help to inform the partial beam logic below.\n            const prev_note = this.notes[i - 1];\n            const next_note = this.notes[i + 1];\n            const next_note_gets_beam = next_note && next_note.getIntrinsicTicks() < tick_of_duration;\n            const prev_note_gets_beam = prev_note && prev_note.getIntrinsicTicks() < tick_of_duration;\n            const beam_alone = prev_note && next_note && note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            // const beam_alone = note_gets_beam && !prev_note_gets_beam && !next_note_gets_beam;\n            if (note_gets_beam) {\n                // This note gets a beam at the current level\n                if (beam_started) {\n                    // We're currently in the middle of a beam. Just continue it on to\n                    //  the stem X of the current note.\n                    current_beam = beam_lines[beam_lines.length - 1];\n                    current_beam.end = stem_x;\n                    // If a secondary beam break is set up, end the beam right now.\n                    if (should_break) {\n                        beam_started = false;\n                        if (next_note && !next_note_gets_beam && current_beam.end === undefined) {\n                            // This note gets a beam,.but the next one does not. This means\n                            //  we need a partial pointing right.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                }\n                else {\n                    // No beam started yet. Start a new one.\n                    current_beam = { start: stem_x, end: undefined };\n                    beam_started = true;\n                    if (beam_alone) {\n                        // previous and next beam exists and does not get a beam but current gets it.\n                        const prev_tick = prev_note.getIntrinsicTicks();\n                        const next_tick = next_note.getIntrinsicTicks();\n                        const tick = note.getIntrinsicTicks();\n                        const beam_direction = this.lookupBeamDirection(duration, prev_tick, tick, next_tick, i);\n                        if ([BEAM_LEFT, BEAM_BOTH].includes(beam_direction)) {\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                        else {\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                    }\n                    else if (!next_note_gets_beam) {\n                        // The next note doesn't get a beam. Draw a partial.\n                        if ((previous_should_break || i === 0) && next_note) {\n                            // This is the first note (but not the last one), or it is\n                            //  following a secondary break. Draw a partial to the right.\n                            current_beam.end = current_beam.start + partial_beam_length;\n                        }\n                        else {\n                            // By default, draw a partial to the left.\n                            current_beam.end = current_beam.start - partial_beam_length;\n                        }\n                    }\n                    else if (should_break) {\n                        // This note should have a secondary break after it. Even though\n                        //  we just started a beam, it needs to end immediately.\n                        current_beam.end = current_beam.start - partial_beam_length;\n                        beam_started = false;\n                    }\n                    beam_lines.push(current_beam);\n                }\n            }\n            else {\n                // The current note does not get a beam.\n                beam_started = false;\n            }\n            // Store the secondary break flag to inform the partial beam logic in\n            //  the next iteration of the loop.\n            previous_should_break = should_break;\n        }\n        // Add a partial beam pointing left if this is the last note in the group\n        const last_beam = beam_lines[beam_lines.length - 1];\n        if (last_beam && last_beam.end === undefined) {\n            last_beam.end = last_beam.start - partial_beam_length;\n        }\n        return beam_lines;\n    }\n    /** Render the stems for each note. */\n    drawStems(ctx) {\n        this.notes.forEach((note) => {\n            const stem = note.getStem();\n            if (stem) {\n                const stem_x = note.getStemX();\n                stem.setNoteHeadXBounds(stem_x, stem_x);\n                stem.setContext(ctx).draw();\n            }\n        }, this);\n    }\n    // Render the beam lines\n    drawBeamLines(ctx) {\n        const valid_beam_durations = ['4', '8', '16', '32', '64'];\n        const firstNote = this.notes[0];\n        let beamY = this.getBeamYToDraw();\n        const firstStemX = firstNote.getStemX();\n        const beamThickness = this.render_options.beam_width * this.stem_direction;\n        // Draw the beams.\n        for (let i = 0; i < valid_beam_durations.length; ++i) {\n            const duration = valid_beam_durations[i];\n            const beamLines = this.getBeamLines(duration);\n            for (let j = 0; j < beamLines.length; ++j) {\n                const beam_line = beamLines[j];\n                const startBeamX = beam_line.start;\n                const startBeamY = this.getSlopeY(startBeamX, firstStemX, beamY, this.slope);\n                const lastBeamX = beam_line.end;\n                if (lastBeamX) {\n                    const lastBeamY = this.getSlopeY(lastBeamX, firstStemX, beamY, this.slope);\n                    ctx.beginPath();\n                    ctx.moveTo(startBeamX, startBeamY);\n                    ctx.lineTo(startBeamX, startBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY + beamThickness);\n                    ctx.lineTo(lastBeamX + 1, lastBeamY);\n                    ctx.closePath();\n                    ctx.fill();\n                }\n                else {\n                    throw new RuntimeError('NoLastBeamX', 'lastBeamX undefined.');\n                }\n            }\n            beamY += beamThickness * 1.5;\n        }\n    }\n    /** Pre-format the beam. */\n    preFormat() {\n        return this;\n    }\n    /**\n     * Post-format the beam. This can only be called after\n     * the notes in the beam have both `x` and `y` values. ie: they've\n     * been formatted and have staves.\n     */\n    postFormat() {\n        if (this.postFormatted)\n            return;\n        // Calculate a smart slope if we're not forcing the beams to be flat.\n        if (isTabNote(this.notes[0]) || this.render_options.flat_beams) {\n            this.calculateFlatSlope();\n        }\n        else {\n            this.calculateSlope();\n        }\n        this.applyStemExtensions();\n        this.postFormatted = true;\n    }\n    /** Render the beam to the canvas context */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        if (this.unbeamable)\n            return;\n        if (!this.postFormatted) {\n            this.postFormat();\n        }\n        this.drawStems(ctx);\n        this.applyStyle();\n        ctx.openGroup('beam', this.getAttribute('id'));\n        this.drawBeamLines(ctx);\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\n// MIT License\nimport { Clef } from './clef';\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Category } from './typeguard';\n/** ClefNote implements clef annotations in measures. */\nexport class ClefNote extends Note {\n    static get CATEGORY() {\n        return Category.ClefNote;\n    }\n    constructor(type, size, annotation) {\n        super({ duration: 'b' });\n        this.type = type;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.size = size === undefined ? 'default' : size;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /** Set clef type, size and annotation. */\n    setType(type, size, annotation) {\n        this.type = type;\n        this.size = size;\n        const clef = new Clef(type, size, annotation);\n        this.clef = clef.clef;\n        this.annotation = clef.annotation;\n        this.setWidth(Glyph.getWidth(this.clef.code, Clef.getPoint(this.size), `clefNote_${this.size}`));\n        return this;\n    }\n    /** Get associated clef. */\n    getClef() {\n        return this.clef;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    /** Render clef note. */\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const abs_x = this.getAbsoluteX();\n        Glyph.renderGlyph(ctx, abs_x, stave.getYForLine(this.clef.line), Clef.getPoint(this.size), this.clef.code, {\n            category: `clefNote_${this.size}`,\n        });\n        // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n        if (this.annotation !== undefined) {\n            const attachment = new Glyph(this.annotation.code, this.annotation.point);\n            attachment.setContext(ctx);\n            attachment.setStave(stave);\n            attachment.setYShift(stave.getYForLine(this.annotation.line) - stave.getYForGlyphs());\n            attachment.setXShift(this.annotation.x_shift);\n            attachment.renderToStave(abs_x);\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nimport { Note } from './note';\nimport { TickContext } from './tickcontext';\nimport { Category } from './typeguard';\nimport { log } from './util';\n// To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Crescendo.DEBUG)\n        log('Vex.Flow.Crescendo', args);\n}\n// Private helper to draw the hairpin\nfunction renderHairpin(ctx, params) {\n    const begin_x = params.begin_x;\n    const end_x = params.end_x;\n    const y = params.y;\n    const half_height = params.height / 2;\n    ctx.beginPath();\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x, y);\n        ctx.lineTo(begin_x, y + half_height);\n    }\n    else {\n        ctx.moveTo(end_x, y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x, y + half_height);\n    }\n    ctx.stroke();\n    ctx.closePath();\n}\nexport class Crescendo extends Note {\n    /** Crescendo category string. */\n    static get CATEGORY() {\n        return Category.Crescendo;\n    }\n    // Initialize the crescendo's properties\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.options = {\n            // Extensions to the length of the crescendo on either side\n            extend_left: 0,\n            extend_right: 0,\n            // Vertical shift\n            y_shift: 0,\n        };\n        // Whether the object is a decrescendo\n        this.decrescendo = false;\n        // The staff line to be placed on\n        this.line = noteStruct.line || 0;\n        // The height at the open end of the cresc/decresc\n        this.height = 15;\n    }\n    // Set the line to center the element on\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Set the full height at the open end\n    setHeight(height) {\n        this.height = height;\n        return this;\n    }\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo(decresc) {\n        this.decrescendo = decresc;\n        return this;\n    }\n    // Preformat the note\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    // Render the Crescendo object onto the canvas\n    draw() {\n        const ctx = this.checkContext();\n        const stave = this.checkStave();\n        this.setRendered();\n        const tick_context = this.getTickContext();\n        const next_context = TickContext.getNextContext(tick_context);\n        const begin_x = this.getAbsoluteX();\n        const end_x = next_context ? next_context.getX() : stave.getX() + stave.getWidth();\n        const y = stave.getYForLine(this.line + -3) + 1;\n        L('Drawing ', this.decrescendo ? 'decrescendo ' : 'crescendo ', this.height, 'x', begin_x - end_x);\n        renderHairpin(ctx, {\n            begin_x: begin_x - this.options.extend_left,\n            end_x: end_x + this.options.extend_right,\n            y: y + this.options.y_shift,\n            height: this.height,\n            reverse: this.decrescendo,\n        });\n    }\n}\nCrescendo.DEBUG = false;\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport var CurvePosition;\n(function (CurvePosition) {\n    CurvePosition[CurvePosition[\"NEAR_HEAD\"] = 1] = \"NEAR_HEAD\";\n    CurvePosition[CurvePosition[\"NEAR_TOP\"] = 2] = \"NEAR_TOP\";\n})(CurvePosition || (CurvePosition = {}));\nexport class Curve extends Element {\n    static get CATEGORY() {\n        return Category.Curve;\n    }\n    static get Position() {\n        return CurvePosition;\n    }\n    static get PositionString() {\n        return {\n            nearHead: CurvePosition.NEAR_HEAD,\n            nearTop: CurvePosition.NEAR_TOP,\n        };\n    }\n    // from: Start note\n    // to: End note\n    // options:\n    //    cps: List of control points\n    //    x_shift: pixels to shift\n    //    y_shift: pixels to shift\n    constructor(from, to, options) {\n        super();\n        this.render_options = Object.assign({ thickness: 2, x_shift: 0, y_shift: 10, position: CurvePosition.NEAR_HEAD, position_end: CurvePosition.NEAR_HEAD, invert: false, cps: [\n                { x: 0, y: 10 },\n                { x: 0, y: 10 },\n            ] }, options);\n        this.from = from;\n        this.to = to;\n    }\n    setNotes(from, to) {\n        if (!from && !to) {\n            throw new RuntimeError('BadArguments', 'Curve needs to have either `from` or `to` set.');\n        }\n        this.from = from;\n        this.to = to;\n        return this;\n    }\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial() {\n        return !this.from || !this.to;\n    }\n    renderCurve(params) {\n        const ctx = this.checkContext();\n        const x_shift = this.render_options.x_shift;\n        const y_shift = this.render_options.y_shift * params.direction;\n        const first_x = params.first_x + x_shift;\n        const first_y = params.first_y + y_shift;\n        const last_x = params.last_x - x_shift;\n        const last_y = params.last_y + y_shift;\n        const thickness = this.render_options.thickness;\n        const cps = this.render_options.cps;\n        const { x: cp0x, y: cp0y } = cps[0];\n        const { x: cp1x, y: cp1y } = cps[1];\n        const cp_spacing = (last_x - first_x) / (cps.length + 2);\n        ctx.beginPath();\n        ctx.moveTo(first_x, first_y);\n        ctx.bezierCurveTo(first_x + cp_spacing + cp0x, first_y + cp0y * params.direction, last_x - cp_spacing + cp1x, last_y + cp1y * params.direction, last_x, last_y);\n        ctx.bezierCurveTo(last_x - cp_spacing + cp1x, last_y + (cp1y + thickness) * params.direction, first_x + cp_spacing + cp0x, first_y + (cp0y + thickness) * params.direction, first_x, first_y);\n        ctx.stroke();\n        ctx.closePath();\n        ctx.fill();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const first_note = this.from;\n        const last_note = this.to;\n        let first_x;\n        let last_x;\n        let first_y;\n        let last_y;\n        let stem_direction = 0;\n        let metric = 'baseY';\n        let end_metric = 'baseY';\n        function getPosition(position) {\n            return typeof position === 'string' ? Curve.PositionString[position] : position;\n        }\n        const position = getPosition(this.render_options.position);\n        const position_end = getPosition(this.render_options.position_end);\n        if (position === CurvePosition.NEAR_TOP) {\n            metric = 'topY';\n            end_metric = 'topY';\n        }\n        if (position_end === CurvePosition.NEAR_HEAD) {\n            end_metric = 'baseY';\n        }\n        else if (position_end === CurvePosition.NEAR_TOP) {\n            end_metric = 'topY';\n        }\n        if (first_note) {\n            first_x = first_note.getTieRightX();\n            stem_direction = first_note.getStemDirection();\n            first_y = first_note.getStemExtents()[metric];\n        }\n        else {\n            const stave = last_note.checkStave();\n            first_x = stave.getTieStartX();\n            first_y = last_note.getStemExtents()[metric];\n        }\n        if (last_note) {\n            last_x = last_note.getTieLeftX();\n            stem_direction = last_note.getStemDirection();\n            last_y = last_note.getStemExtents()[end_metric];\n        }\n        else {\n            const stave = first_note.checkStave();\n            last_x = stave.getTieEndX();\n            last_y = first_note.getStemExtents()[end_metric];\n        }\n        this.renderCurve({\n            first_x,\n            last_x,\n            first_y,\n            last_y,\n            direction: stem_direction * (this.render_options.invert === true ? -1 : 1),\n        });\n        return true;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// A generic text parsing class for VexFlow.\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.Parser.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Parser.DEBUG)\n        log('Vex.Flow.Parser', args);\n}\nconst NO_ERROR_POS = -1;\n// Converts parser results into an easy to reference list that can be\n// used in triggers. This function returns:\n// - nested array in which the leaf elements are string or null\n// - string (including empty strings)\n// - null\nfunction flattenMatches(r) {\n    if ('matchedString' in r)\n        return r.matchedString; // string\n    if ('results' in r)\n        return flattenMatches(r.results);\n    const results = r;\n    if (results.length === 1)\n        return flattenMatches(results[0]);\n    if (results.length === 0)\n        return null;\n    return results.map(flattenMatches); // nested array\n}\n// This is the base parser class. Given an arbitrary context-free grammar, it\n// can parse any line and execute code when specific rules are met (e.g.,\n// when a string is terminated.)\nexport class Parser {\n    // For an example of a simple grammar, take a look at tests/parser_tests.ts or\n    // the EasyScore grammar in easyscore.ts.\n    constructor(grammar) {\n        this.grammar = grammar;\n        this.line = '';\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Parse `line` using current grammar. Returns `{success: true}` if the\n    // line parsed correctly, otherwise returns `{success: false, errorPos: N}`\n    // where `errorPos` is the location of the error in the string.\n    parse(line) {\n        this.line = line;\n        this.pos = 0;\n        this.errorPos = NO_ERROR_POS;\n        const result = this.expect(this.grammar.begin());\n        result.errorPos = this.errorPos;\n        return result;\n    }\n    matchFail(returnPos) {\n        if (this.errorPos === NO_ERROR_POS)\n            this.errorPos = this.pos;\n        this.pos = returnPos;\n    }\n    matchSuccess() {\n        this.errorPos = NO_ERROR_POS;\n    }\n    // Look for `token` in this.line[this.pos], and return success\n    // if one is found. `token` is specified as a regular expression.\n    matchToken(token, noSpace = false) {\n        const regexp = noSpace ? new RegExp('^((' + token + '))') : new RegExp('^((' + token + ')\\\\s*)');\n        const workingLine = this.line.slice(this.pos);\n        const result = workingLine.match(regexp);\n        if (result !== null) {\n            return {\n                success: true,\n                matchedString: result[2],\n                incrementPos: result[1].length,\n                pos: this.pos,\n            };\n        }\n        else {\n            return { success: false, pos: this.pos };\n        }\n    }\n    // Execute rule to match a sequence of tokens (or rules). If `maybe` is\n    // set, then return success even if the token is not found, but reset\n    // the position before exiting.\n    // TODO: expectOne(...) is never called with the `maybe` parameter.\n    expectOne(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let allMatches = true;\n        let oneMatch = false;\n        maybe = maybe === true || rule.maybe === true;\n        // Execute all sub rules in sequence.\n        if (rule.expect) {\n            for (const next of rule.expect) {\n                const localPos = this.pos;\n                const result = this.expect(next);\n                // If `rule.or` is set, then return success if any one\n                // of the subrules match, else all subrules must match.\n                if (result.success) {\n                    results.push(result);\n                    oneMatch = true;\n                    if (rule.or)\n                        break;\n                }\n                else {\n                    allMatches = false;\n                    if (!rule.or) {\n                        this.pos = localPos;\n                        break;\n                    }\n                }\n            }\n        }\n        const gotOne = (rule.or && oneMatch) || allMatches;\n        const success = gotOne || maybe === true;\n        const numMatches = gotOne ? 1 : 0;\n        if (maybe && !gotOne)\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Try to match multiple (one or more) instances of the rule. If `maybe` is set,\n    // then a failed match is also a success (but the position is reset).\n    expectOneOrMore(rule, maybe = false) {\n        const results = [];\n        const pos = this.pos;\n        let numMatches = 0;\n        let more = true;\n        do {\n            const result = this.expectOne(rule);\n            if (result.success && result.results) {\n                numMatches++;\n                results.push(result.results);\n            }\n            else {\n                more = false;\n            }\n        } while (more);\n        const success = numMatches > 0 || maybe === true;\n        if (maybe && !(numMatches > 0))\n            this.pos = pos;\n        if (success) {\n            this.matchSuccess();\n        }\n        else {\n            this.matchFail(pos);\n        }\n        return { success, results, numMatches };\n    }\n    // Match zero or more instances of `rule`. Offloads to `expectOneOrMore`.\n    expectZeroOrMore(rule) {\n        return this.expectOneOrMore(rule, true);\n    }\n    // Execute the rule produced by the provided `rules` function. This\n    // offloads to one of the above matchers and consolidates the results. It is also\n    // responsible for executing any code triggered by the rule (in `rule.run`.)\n    expect(ruleFunc) {\n        L('Evaluating rule function:', ruleFunc);\n        if (!ruleFunc) {\n            throw new RuntimeError('Invalid rule function');\n        }\n        let result;\n        // Get rule from Grammar class.\n        // expect(...) handles both lexing & parsing:\n        // - lexer rules produce tokens.\n        // - parser rules produce expressions which may trigger code via the\n        //   { run: () => ... } trigger functions in easyscore.ts.\n        //   These functions build the VexFlow objects that are displayed on screen.\n        const rule = ruleFunc.bind(this.grammar)();\n        if (rule.token) {\n            // A lexer rule has a `token` property.\n            // Base case: parse the regex and throw an error if the\n            // line doesn't match.\n            result = this.matchToken(rule.token, rule.noSpace === true);\n            if (result.success) {\n                // Token match! Update position and throw away parsed portion\n                // of string.\n                this.pos += result.incrementPos;\n            }\n        }\n        else if (rule.expect) {\n            // A parser rule has an `expect` property.\n            if (rule.oneOrMore) {\n                result = this.expectOneOrMore(rule);\n            }\n            else if (rule.zeroOrMore) {\n                result = this.expectZeroOrMore(rule);\n            }\n            else {\n                result = this.expectOne(rule);\n            }\n        }\n        else {\n            L(rule);\n            throw new RuntimeError('Bad grammar! No `token` or `expect` property ' + rule);\n        }\n        // If there's a trigger attached to this rule, then run it.\n        // Make the matches accessible through `state.matches` in the\n        // `run: (state) => ...` trigger.\n        const matches = [];\n        result.matches = matches;\n        if (result.results) {\n            result.results.forEach((r) => matches.push(flattenMatches(r)));\n        }\n        if (rule.run && result.success) {\n            rule.run({ matches });\n        }\n        return result;\n    }\n}\nParser.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Articulation } from './articulation';\nimport { Dot } from './dot';\nimport { FretHandFinger } from './frethandfinger';\nimport { Music } from './music';\nimport { Parser } from './parser';\nimport { Stem } from './stem';\nimport { defined, log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.EasyScore.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (EasyScore.DEBUG)\n        log('Vex.Flow.EasyScore', args);\n}\nexport class EasyScoreGrammar {\n    constructor(builder) {\n        this.builder = builder;\n    }\n    begin() {\n        return this.LINE;\n    }\n    LINE() {\n        return {\n            expect: [this.PIECE, this.PIECES, this.EOL],\n        };\n    }\n    PIECE() {\n        return {\n            expect: [this.CHORDORNOTE, this.PARAMS],\n            run: () => this.builder.commitPiece(),\n        };\n    }\n    PIECES() {\n        return {\n            expect: [this.COMMA, this.PIECE],\n            zeroOrMore: true,\n        };\n    }\n    PARAMS() {\n        return {\n            expect: [this.DURATION, this.TYPE, this.DOTS, this.OPTS],\n        };\n    }\n    CHORDORNOTE() {\n        return {\n            expect: [this.CHORD, this.SINGLENOTE],\n            or: true,\n        };\n    }\n    CHORD() {\n        return {\n            expect: [this.LPAREN, this.NOTES, this.RPAREN],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addChord(state.matches[1]),\n        };\n    }\n    NOTES() {\n        return {\n            expect: [this.NOTE],\n            oneOrMore: true,\n        };\n    }\n    NOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n        };\n    }\n    SINGLENOTE() {\n        return {\n            expect: [this.NOTENAME, this.ACCIDENTAL, this.OCTAVE],\n            run: (state) => {\n                // eslint-disable-next-line\n                const s = state;\n                this.builder.addSingleNote(s.matches[0], s.matches[1], s.matches[2]);\n            },\n        };\n    }\n    ACCIDENTAL() {\n        return {\n            expect: [this.MICROTONES, this.ACCIDENTALS],\n            maybe: true,\n            or: true,\n        };\n    }\n    DOTS() {\n        return {\n            expect: [this.DOT],\n            zeroOrMore: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDots(state.matches),\n        };\n    }\n    TYPE() {\n        return {\n            expect: [this.SLASH, this.MAYBESLASH, this.TYPES],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteType(state.matches[2]),\n        };\n    }\n    DURATION() {\n        return {\n            expect: [this.SLASH, this.DURATIONS],\n            maybe: true,\n            // eslint-disable-next-line\n            run: (state) => this.builder.setNoteDuration(state.matches[1]),\n        };\n    }\n    OPTS() {\n        return {\n            expect: [this.LBRACKET, this.KEYVAL, this.KEYVALS, this.RBRACKET],\n            maybe: true,\n        };\n    }\n    KEYVALS() {\n        return {\n            expect: [this.COMMA, this.KEYVAL],\n            zeroOrMore: true,\n        };\n    }\n    KEYVAL() {\n        const unquote = (str) => str.slice(1, -1);\n        return {\n            expect: [this.KEY, this.EQUALS, this.VAL],\n            // eslint-disable-next-line\n            run: (state) => this.builder.addNoteOption(state.matches[0], unquote(state.matches[2])),\n        };\n    }\n    VAL() {\n        return {\n            expect: [this.SVAL, this.DVAL],\n            or: true,\n        };\n    }\n    KEY() {\n        return { token: '[a-zA-Z][a-zA-Z0-9]*' };\n    }\n    DVAL() {\n        return { token: '[\"][^\"]*[\"]' };\n    }\n    SVAL() {\n        return { token: \"['][^']*[']\" };\n    }\n    NOTENAME() {\n        return { token: '[a-gA-G]' };\n    }\n    OCTAVE() {\n        return { token: '[0-9]+' };\n    }\n    ACCIDENTALS() {\n        return { token: 'bb|b|##|#|n' };\n    }\n    MICROTONES() {\n        return { token: 'bbs|bss|bs|db|d|\\\\+\\\\+-|\\\\+-|\\\\+\\\\+|\\\\+|k|o' };\n    }\n    DURATIONS() {\n        return { token: '[0-9whq]+' };\n    }\n    TYPES() {\n        return { token: '[rRsSmMhHgG]' };\n    }\n    LPAREN() {\n        return { token: '[(]' };\n    }\n    RPAREN() {\n        return { token: '[)]' };\n    }\n    COMMA() {\n        return { token: '[,]' };\n    }\n    DOT() {\n        return { token: '[.]' };\n    }\n    SLASH() {\n        return { token: '[/]' };\n    }\n    MAYBESLASH() {\n        return { token: '[/]?' };\n    }\n    EQUALS() {\n        return { token: '[=]' };\n    }\n    LBRACKET() {\n        return { token: '\\\\[' };\n    }\n    RBRACKET() {\n        return { token: '\\\\]' };\n    }\n    EOL() {\n        return { token: '$' };\n    }\n}\nexport class Piece {\n    constructor(duration) {\n        this.chord = [];\n        this.dots = 0;\n        this.options = {};\n        this.duration = duration;\n    }\n}\nexport class Builder {\n    constructor(factory) {\n        this.commitHooks = [];\n        this.factory = factory;\n        this.reset();\n    }\n    reset(options) {\n        this.options = Object.assign({ stem: 'auto', clef: 'treble' }, options);\n        this.elements = { notes: [], accidentals: [] };\n        this.rollingDuration = '8';\n        this.resetPiece();\n    }\n    getFactory() {\n        return this.factory;\n    }\n    getElements() {\n        return this.elements;\n    }\n    addCommitHook(commitHook) {\n        this.commitHooks.push(commitHook);\n    }\n    resetPiece() {\n        L('resetPiece');\n        this.piece = new Piece(this.rollingDuration);\n    }\n    setNoteDots(dots) {\n        L('setNoteDots:', dots);\n        if (dots)\n            this.piece.dots = dots.length;\n    }\n    setNoteDuration(duration) {\n        L('setNoteDuration:', duration);\n        this.rollingDuration = this.piece.duration = duration || this.rollingDuration;\n    }\n    setNoteType(type) {\n        L('setNoteType:', type);\n        if (type)\n            this.piece.type = type;\n    }\n    addNoteOption(key, value) {\n        L('addNoteOption: key:', key, 'value:', value);\n        this.piece.options[key] = value;\n    }\n    addNote(key, accid, octave) {\n        L('addNote:', key, accid, octave);\n        this.piece.chord.push({\n            key: key,\n            accid,\n            octave,\n        });\n    }\n    addSingleNote(key, accid, octave) {\n        L('addSingleNote:', key, accid, octave);\n        this.addNote(key, accid, octave);\n    }\n    // notes is an array with 3 entries\n    addChord(notes) {\n        L('startChord');\n        if (typeof notes[0] !== 'object') {\n            this.addSingleNote(notes[0]);\n        }\n        else {\n            notes.forEach((n) => {\n                if (n)\n                    this.addNote(...n); // n => [string, string | null, string]\n            });\n        }\n        L('endChord');\n    }\n    commitPiece() {\n        L('commitPiece');\n        const { factory } = this;\n        if (!factory)\n            return;\n        const options = Object.assign(Object.assign({}, this.options), this.piece.options);\n        // reset() sets this.options.stem & this.options.clef but we check to make sure nothing has changed.\n        // e.g., auto | up | down\n        const stem = defined(options.stem, 'BadArguments', 'options.stem is not defined').toLowerCase();\n        // e.g., treble | bass\n        const clef = defined(options.clef, 'BadArguments', 'options.clef is not defined').toLowerCase();\n        const { chord, duration, dots, type } = this.piece;\n        // Create a string[] that will be assigned to the .keys property of the StaveNote.\n        // Each string in the array represents a note pitch and is of the form: {NoteName}{Accidental}/{Octave}\n        // Only standard accidentals are included in the .keys property. Microtonal accidentals are not included.\n        const standardAccidentals = Music.accidentals;\n        const keys = chord.map((notePiece) => {\n            var _a;\n            return notePiece.key +\n                (standardAccidentals.includes((_a = notePiece.accid) !== null && _a !== void 0 ? _a : '') ? notePiece.accid : '') +\n                '/' +\n                notePiece.octave;\n        });\n        const auto_stem = stem === 'auto'; // StaveNoteStruct expects the underscore & lowercase.\n        // Build a GhostNote or StaveNote using the information we gathered.\n        const note = (type === null || type === void 0 ? void 0 : type.toLowerCase()) == 'g'\n            ? factory.GhostNote({ duration, dots })\n            : factory.StaveNote({ keys, duration, dots, type, clef, auto_stem });\n        if (!auto_stem)\n            note.setStemDirection(stem === 'up' ? Stem.UP : Stem.DOWN);\n        // Attach accidentals.\n        const accidentals = [];\n        chord.forEach((notePiece, index) => {\n            const accid = notePiece.accid;\n            if (typeof accid === 'string') {\n                const accidental = factory.Accidental({ type: accid });\n                note.addModifier(accidental, index);\n                accidentals.push(accidental);\n            }\n            else {\n                accidentals.push(undefined);\n            }\n        });\n        // Attach dots.\n        for (let i = 0; i < dots; i++)\n            Dot.buildAndAttach([note], { all: true });\n        this.commitHooks.forEach((commitHook) => commitHook(options, note, this));\n        this.elements.notes.push(note);\n        this.elements.accidentals.push(accidentals);\n        this.resetPiece();\n    }\n}\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setId(options, note) {\n    if (options.id === undefined)\n        return;\n    note.setAttribute('id', options.id);\n}\n// Used by setClass() below.\nconst commaSeparatedRegex = /\\s*,\\s*/;\n/**\n * Commit hook used by EasyScore.setOptions().\n */\nfunction setClass(options, note) {\n    if (options.class === undefined)\n        return;\n    options.class.split(commaSeparatedRegex).forEach((className) => note.addClass(className));\n}\n/**\n * EasyScore implements a parser for a simple language to generate VexFlow objects.\n */\nexport class EasyScore {\n    constructor(options = {}) {\n        this.defaults = {\n            clef: 'treble',\n            time: '4/4',\n            stem: 'auto',\n        };\n        this.setOptions(options);\n    }\n    /**\n     * Set the score defaults.\n     * clef must be set appropriately to avoid errors when adding Staves.\n     * @param defaults.clef default clef ( treble | bass ...) see {@link Clef.types}\n     * @param defaults.time default time signature ( 4/4 | 9/8 ...)\n     * @param defaults.stem default stem arrangement (auto | up | down)\n     * @returns this\n     */\n    set(defaults) {\n        this.defaults = Object.assign(Object.assign({}, this.defaults), defaults);\n        return this;\n    }\n    /**\n     * @param options.factory is required.\n     * @returns this\n     */\n    setOptions(options) {\n        var _a, _b;\n        // eslint-disable-next-line\n        const factory = options.factory; // ! operator, because options.factory was set in Factory.EasyScore().\n        const builder = (_a = options.builder) !== null && _a !== void 0 ? _a : new Builder(factory);\n        this.options = Object.assign(Object.assign({ commitHooks: [setId, setClass, Articulation.easyScoreHook, FretHandFinger.easyScoreHook], throwOnError: false }, options), { factory,\n            builder });\n        this.factory = factory;\n        this.builder = builder;\n        this.grammar = new EasyScoreGrammar(this.builder);\n        this.parser = new Parser(this.grammar);\n        (_b = this.options.commitHooks) === null || _b === void 0 ? void 0 : _b.forEach((commitHook) => this.addCommitHook(commitHook));\n        return this;\n    }\n    setContext(context) {\n        this.factory.setContext(context);\n        return this;\n    }\n    parse(line, options = {}) {\n        this.builder.reset(options);\n        const result = this.parser.parse(line);\n        if (!result.success && this.options.throwOnError) {\n            L(result);\n            throw new RuntimeError('Error parsing line: ' + line);\n        }\n        return result;\n    }\n    beam(notes, options) {\n        this.factory.Beam({ notes, options });\n        return notes;\n    }\n    tuplet(notes, options) {\n        this.factory.Tuplet({ notes, options });\n        return notes;\n    }\n    notes(line, options = {}) {\n        options = Object.assign({ clef: this.defaults.clef, stem: this.defaults.stem }, options);\n        this.parse(line, options);\n        return this.builder.getElements().notes;\n    }\n    voice(notes, options = {}) {\n        options = Object.assign({ time: this.defaults.time }, options);\n        return this.factory.Voice(options).addTickables(notes);\n    }\n    addCommitHook(commitHook) {\n        this.builder.addCommitHook(commitHook);\n    }\n}\nEasyScore.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\nimport { StemmableNote } from './stemmablenote';\nimport { Category, isAnnotation } from './typeguard';\nimport { RuntimeError } from './util';\nconst ERROR_MSG = 'Ghost note must have valid initialization data to identify duration.';\nexport class GhostNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.GhostNote;\n    }\n    constructor(parameter) {\n        if (!parameter) {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        let noteStruct;\n        if (typeof parameter === 'string') {\n            // Preserve backwards-compatibility\n            noteStruct = { duration: parameter };\n        }\n        else if (typeof parameter === 'object') {\n            noteStruct = parameter;\n        }\n        else {\n            throw new RuntimeError('BadArguments', ERROR_MSG);\n        }\n        super(noteStruct);\n        // Note properties\n        this.setWidth(0);\n    }\n    /**\n     * @returns true if this note is a type of rest. Rests don't have pitches, but take up space in the score.\n     */\n    isRest() {\n        return true;\n    }\n    setStave(stave) {\n        super.setStave(stave);\n        return this;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        // Draw Annotations\n        this.setRendered();\n        for (let i = 0; i < this.modifiers.length; ++i) {\n            const modifier = this.modifiers[i];\n            if (isAnnotation(modifier)) {\n                modifier.setContext(this.getContext());\n                modifier.drawWithStyle();\n            }\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Any glyph that is set to appear on a Stave and take up musical time and graphical space.\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class GlyphNote extends Note {\n    static get CATEGORY() {\n        return Category.GlyphNote;\n    }\n    constructor(glyph, noteStruct, options) {\n        super(noteStruct);\n        this.options = Object.assign({ ignoreTicks: false, line: 2 }, options);\n        // Note properties\n        this.ignore_ticks = this.options.ignoreTicks;\n        this.setGlyph(glyph);\n    }\n    setGlyph(glyph) {\n        this.glyph = glyph;\n        this.setWidth(this.glyph.getMetrics().width);\n        return this;\n    }\n    getBoundingBox() {\n        return this.glyph.getBoundingBox();\n    }\n    preFormat() {\n        if (!this.preFormatted && this.modifierContext) {\n            this.modifierContext.preFormat();\n        }\n        this.preFormatted = true;\n        return this;\n    }\n    drawModifiers() {\n        const ctx = this.checkContext();\n        for (let i = 0; i < this.modifiers.length; i++) {\n            const modifier = this.modifiers[i];\n            modifier.setContext(ctx);\n            modifier.drawWithStyle();\n        }\n    }\n    /** Get the glyph width. */\n    getGlyphWidth() {\n        return this.glyph.getMetrics().width;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = stave.checkContext();\n        this.setRendered();\n        this.applyStyle(ctx);\n        ctx.openGroup('glyphNote', this.getAttribute('id'));\n        // Context is set when setStave is called on Note\n        const glyph = this.glyph;\n        if (!glyph.getContext()) {\n            glyph.setContext(ctx);\n        }\n        glyph.setStave(stave);\n        glyph.setYShift(stave.getYForLine(this.options.line) - stave.getYForGlyphs());\n        const x = this.isCenterAligned() ? this.getAbsoluteX() - this.getWidth() / 2 : this.getAbsoluteX();\n        glyph.renderToStave(x);\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle(ctx);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { StaveNote } from './stavenote';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class GraceNote extends StaveNote {\n    static get CATEGORY() {\n        return Category.GraceNote;\n    }\n    static get LEDGER_LINE_OFFSET() {\n        return 2;\n    }\n    static get SCALE() {\n        return 0.66;\n    }\n    constructor(noteStruct) {\n        super(Object.assign({ glyph_font_scale: Tables.NOTATION_FONT_SCALE * GraceNote.SCALE, stroke_px: GraceNote.LEDGER_LINE_OFFSET }, noteStruct));\n        this.slash = noteStruct.slash || false;\n        this.slur = true;\n        this.buildNoteHeads();\n        this.width = 3;\n    }\n    getStemExtension() {\n        if (this.stem_extension_override) {\n            return this.stem_extension_override;\n        }\n        const glyphProps = this.getGlyphProps();\n        if (glyphProps) {\n            let ret = super.getStemExtension();\n            if (glyphProps.stem) {\n                const staveNoteScale = this.getStaveNoteScale();\n                ret = (Stem.HEIGHT + ret) * staveNoteScale - Stem.HEIGHT;\n            }\n            return ret;\n        }\n        return 0;\n    }\n    getStaveNoteScale() {\n        return this.render_options.glyph_font_scale / Tables.NOTATION_FONT_SCALE;\n    }\n    draw() {\n        super.draw();\n        this.setRendered();\n        const stem = this.stem;\n        if (this.slash && stem) {\n            const staveNoteScale = this.getStaveNoteScale();\n            // some magic numbers are based on the staveNoteScale 0.66.\n            const offsetScale = staveNoteScale / 0.66;\n            let slashBBox = undefined;\n            const beam = this.beam;\n            if (beam) {\n                // FIXME: should render slash after beam?\n                if (!beam.postFormatted) {\n                    beam.postFormat();\n                }\n                slashBBox = this.calcBeamedNotesSlashBBox(8 * offsetScale, 8 * offsetScale, {\n                    stem: 6 * offsetScale,\n                    beam: 5 * offsetScale,\n                });\n            }\n            else {\n                const stem_direction = this.getStemDirection();\n                const noteHeadBounds = this.getNoteHeadBounds();\n                const noteStemHeight = stem.getHeight();\n                let x = this.getAbsoluteX();\n                let y = stem_direction === Stem.DOWN\n                    ? noteHeadBounds.y_top - noteStemHeight\n                    : noteHeadBounds.y_bottom - noteStemHeight;\n                const defaultStemExtention = stem_direction === Stem.DOWN ? this.glyphProps.stem_down_extension : this.glyphProps.stem_up_extension;\n                let defaultOffsetY = Tables.STEM_HEIGHT;\n                defaultOffsetY -= defaultOffsetY / 2.8;\n                defaultOffsetY += defaultStemExtention;\n                y += defaultOffsetY * staveNoteScale * stem_direction;\n                const offsets = stem_direction === Stem.UP\n                    ? {\n                        x1: 1,\n                        y1: 0,\n                        x2: 13,\n                        y2: -9,\n                    }\n                    : {\n                        x1: -4,\n                        y1: 1,\n                        x2: 13,\n                        y2: 9,\n                    };\n                x += offsets.x1 * offsetScale;\n                y += offsets.y1 * offsetScale;\n                slashBBox = {\n                    x1: x,\n                    y1: y,\n                    x2: x + offsets.x2 * offsetScale,\n                    y2: y + offsets.y2 * offsetScale,\n                };\n            }\n            // FIXME: avoid staff lines, ledger lines or others.\n            const ctx = this.checkContext();\n            ctx.save();\n            ctx.setLineWidth(1 * offsetScale); // FIXME: use more appropriate value.\n            ctx.beginPath();\n            ctx.moveTo(slashBBox.x1, slashBBox.y1);\n            ctx.lineTo(slashBBox.x2, slashBBox.y2);\n            ctx.closePath();\n            ctx.stroke();\n            ctx.restore();\n        }\n    }\n    calcBeamedNotesSlashBBox(slashStemOffset, slashBeamOffset, protrusions) {\n        const beam = this.beam;\n        if (!beam)\n            throw new RuntimeError('NoBeam', \"Can't calculate without a beam.\");\n        const beam_slope = beam.slope;\n        const isBeamEndNote = beam.notes[beam.notes.length - 1] === this;\n        const scaleX = isBeamEndNote ? -1 : 1;\n        const beam_angle = Math.atan(beam_slope * scaleX);\n        // slash line intersecting point on beam.\n        const iPointOnBeam = {\n            dx: Math.cos(beam_angle) * slashBeamOffset,\n            dy: Math.sin(beam_angle) * slashBeamOffset,\n        };\n        slashStemOffset *= this.getStemDirection();\n        const slash_angle = Math.atan((iPointOnBeam.dy - slashStemOffset) / iPointOnBeam.dx);\n        const protrusion_stem_dx = Math.cos(slash_angle) * protrusions.stem * scaleX;\n        const protrusion_stem_dy = Math.sin(slash_angle) * protrusions.stem;\n        const protrusion_beam_dx = Math.cos(slash_angle) * protrusions.beam * scaleX;\n        const protrusion_beam_dy = Math.sin(slash_angle) * protrusions.beam;\n        const stemX = this.getStemX();\n        const stem0X = beam.notes[0].getStemX();\n        const stemY = beam.getBeamYToDraw() + (stemX - stem0X) * beam_slope;\n        const ret = {\n            x1: stemX - protrusion_stem_dx,\n            y1: stemY + slashStemOffset - protrusion_stem_dy,\n            x2: stemX + iPointOnBeam.dx * scaleX + protrusion_beam_dx,\n            y2: stemY + iPointOnBeam.dy + protrusion_beam_dy,\n        };\n        return ret;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Mark Meeus 2019\nimport { KeySignature } from './keysignature';\nimport { Note } from './note';\nimport { Category } from './typeguard';\nexport class KeySigNote extends Note {\n    static get CATEGORY() {\n        return Category.KeySigNote;\n    }\n    constructor(keySpec, cancelKeySpec, alterKeySpec) {\n        super({ duration: 'b' });\n        this.keySignature = new KeySignature(keySpec, cancelKeySpec, alterKeySpec);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        this.keySignature.setStave(this.checkStave());\n        this.setWidth(this.keySignature.getWidth());\n        return this;\n    }\n    draw() {\n        const ctx = this.checkStave().checkContext();\n        this.setRendered();\n        this.keySignature.setX(this.getAbsoluteX());\n        this.keySignature.setContext(ctx);\n        this.keySignature.draw();\n    }\n}\n","// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements multiple measure rests.\nimport { Element } from './element';\nimport { Glyph } from './glyph';\nimport { NoteHead } from './notehead';\nimport { StaveModifierPosition } from './stavemodifier';\nimport { Tables } from './tables';\nimport { TimeSignature } from './timesignature';\nimport { Category, isBarline } from './typeguard';\nimport { defined } from './util';\nlet semibreve_rest;\nfunction get_semibreve_rest() {\n    if (!semibreve_rest) {\n        const noteHead = new NoteHead({ duration: 'w', note_type: 'r' });\n        semibreve_rest = {\n            glyph_font_scale: noteHead.render_options.glyph_font_scale,\n            glyph_code: noteHead.glyph_code,\n            width: noteHead.getWidth(),\n        };\n    }\n    return semibreve_rest;\n}\nexport class MultiMeasureRest extends Element {\n    static get CATEGORY() {\n        return Category.MultiMeasureRest;\n    }\n    /**\n     *\n     * @param number_of_measures Number of measures.\n     * @param options The options object.\n     */\n    constructor(number_of_measures, options) {\n        var _a;\n        super();\n        this.xs = { left: NaN, right: NaN };\n        this.hasPaddingLeft = false;\n        this.hasPaddingRight = false;\n        this.hasLineThickness = false;\n        this.hasSymbolSpacing = false;\n        this.number_of_measures = number_of_measures;\n        // Keep track of whether these four options were provided.\n        this.hasPaddingLeft = typeof options.padding_left === 'number';\n        this.hasPaddingRight = typeof options.padding_right === 'number';\n        this.hasLineThickness = typeof options.line_thickness === 'number';\n        this.hasSymbolSpacing = typeof options.symbol_spacing === 'number';\n        const musicFont = Tables.currentMusicFont();\n        this.render_options = Object.assign({ use_symbols: false, show_number: true, number_line: -0.5, number_glyph_point: (_a = musicFont.lookupMetric('digits.point')) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE, line: 2, spacing_between_lines_px: Tables.STAVE_LINE_DISTANCE, serif_thickness: 2, semibreve_rest_glyph_scale: Tables.NOTATION_FONT_SCALE, padding_left: 0, padding_right: 0, line_thickness: 5, symbol_spacing: 0 }, options);\n        const fontLineShift = musicFont.lookupMetric('digits.shiftLine', 0);\n        this.render_options.number_line += fontLineShift;\n    }\n    getXs() {\n        return this.xs;\n    }\n    setStave(stave) {\n        this.stave = stave;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    checkStave() {\n        return defined(this.stave, 'NoStave', 'No stave attached to instance.');\n    }\n    drawLine(stave, ctx, left, right, spacingBetweenLines) {\n        const options = this.render_options;\n        const y = stave.getYForLine(options.line);\n        const padding = (right - left) * 0.1;\n        left += padding;\n        right -= padding;\n        let lineThicknessHalf;\n        if (this.hasLineThickness) {\n            lineThicknessHalf = options.line_thickness * 0.5;\n        }\n        else {\n            lineThicknessHalf = spacingBetweenLines * 0.25;\n        }\n        const serifThickness = options.serif_thickness;\n        const top = y - spacingBetweenLines;\n        const bot = y + spacingBetweenLines;\n        const leftIndented = left + serifThickness;\n        const rightIndented = right - serifThickness;\n        const lineTop = y - lineThicknessHalf;\n        const lineBottom = y + lineThicknessHalf;\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(left, top);\n        ctx.lineTo(leftIndented, top);\n        ctx.lineTo(leftIndented, lineTop);\n        ctx.lineTo(rightIndented, lineTop);\n        ctx.lineTo(rightIndented, top);\n        ctx.lineTo(right, top);\n        ctx.lineTo(right, bot);\n        ctx.lineTo(rightIndented, bot);\n        ctx.lineTo(rightIndented, lineBottom);\n        ctx.lineTo(leftIndented, lineBottom);\n        ctx.lineTo(leftIndented, bot);\n        ctx.lineTo(left, bot);\n        ctx.closePath();\n        ctx.fill();\n    }\n    drawSymbols(stave, ctx, left, right, spacingBetweenLines) {\n        const n4 = Math.floor(this.number_of_measures / 4);\n        const n = this.number_of_measures % 4;\n        const n2 = Math.floor(n / 2);\n        const n1 = n % 2;\n        const options = this.render_options;\n        // FIXME: TODO: invalidate semibreve_rest at the appropriate time\n        // (e.g., if the system font settings are changed).\n        semibreve_rest = undefined;\n        const rest = get_semibreve_rest();\n        const rest_scale = options.semibreve_rest_glyph_scale;\n        const rest_width = rest.width * (rest_scale / rest.glyph_font_scale);\n        const glyphs = {\n            2: {\n                width: rest_width * 0.5,\n                height: spacingBetweenLines,\n            },\n            1: {\n                width: rest_width,\n            },\n        };\n        /* 10: normal spacingBetweenLines */\n        const spacing = this.hasSymbolSpacing ? options.symbol_spacing : 10;\n        const width = n4 * glyphs[2].width + n2 * glyphs[2].width + n1 * glyphs[1].width + (n4 + n2 + n1 - 1) * spacing;\n        let x = left + (right - left) * 0.5 - width * 0.5;\n        const line = options.line;\n        const yTop = stave.getYForLine(line - 1);\n        const yMiddle = stave.getYForLine(line);\n        const yBottom = stave.getYForLine(line + 1);\n        ctx.save();\n        ctx.setStrokeStyle('none');\n        ctx.setLineWidth(0);\n        for (let i = 0; i < n4; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            ctx.fillRect(x, yBottom - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n2; ++i) {\n            ctx.fillRect(x, yMiddle - glyphs[2].height, glyphs[2].width, glyphs[2].height);\n            x += glyphs[2].width + spacing;\n        }\n        for (let i = 0; i < n1; ++i) {\n            Glyph.renderGlyph(ctx, x, yTop, rest_scale, rest.glyph_code);\n            x += glyphs[1].width + spacing;\n        }\n        ctx.restore();\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const stave = this.checkStave();\n        let left = stave.getNoteStartX();\n        let right = stave.getNoteEndX();\n        // FIXME: getNoteStartX() returns x + 5(barline width)\n        //        getNoteEndX() returns x + width(no barline width)\n        // See Stave constructor. How do we fix this?\n        // Here, we subtract the barline width.\n        const begModifiers = stave.getModifiers(StaveModifierPosition.BEGIN);\n        if (begModifiers.length === 1 && isBarline(begModifiers[0])) {\n            left -= begModifiers[0].getWidth();\n        }\n        const options = this.render_options;\n        if (this.hasPaddingLeft) {\n            left = stave.getX() + options.padding_left;\n        }\n        if (this.hasPaddingRight) {\n            right = stave.getX() + stave.getWidth() - options.padding_right;\n        }\n        this.xs.left = left;\n        this.xs.right = right;\n        const spacingBetweenLines = options.spacing_between_lines_px;\n        if (options.use_symbols) {\n            this.drawSymbols(stave, ctx, left, right, spacingBetweenLines);\n        }\n        else {\n            this.drawLine(stave, ctx, left, right, spacingBetweenLines);\n        }\n        if (options.show_number) {\n            const timeSpec = '/' + this.number_of_measures;\n            const timeSig = new TimeSignature(timeSpec, 0, false);\n            timeSig.point = options.number_glyph_point;\n            timeSig.setTimeSig(timeSpec);\n            timeSig.setStave(stave);\n            timeSig.setX(left + (right - left) * 0.5 - timeSig.getInfo().glyph.getMetrics().width * 0.5);\n            timeSig.bottomLine = options.number_line;\n            timeSig.setContext(ctx).draw();\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Glyph } from './glyph';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (PedalMarking.DEBUG)\n        log('Vex.Flow.PedalMarking', args);\n}\n/**\n * Draws a pedal glyph with the provided `name` on a rendering `context`\n * at the coordinates `x` and `y. Takes into account the glyph data\n * coordinate shifts.\n */\nfunction drawPedalGlyph(name, context, x, y, point) {\n    const glyph_data = PedalMarking.GLYPHS[name];\n    const glyph = new Glyph(glyph_data.code, point, { category: 'pedalMarking' });\n    // Center the middle of the glyph with the middle of the note head (Tables.STAVE_LINE_DISTANCE / 2)\n    glyph.render(context, x - (glyph.getMetrics().width - Tables.STAVE_LINE_DISTANCE) / 2, y);\n}\n/**\n * PedalMarking implements different types of pedal markings. These notation\n * elements indicate to the performer when to depress and release the a pedal.\n *\n * In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n * custom text for the release/depress pedal markings.\n */\nexport class PedalMarking extends Element {\n    static get CATEGORY() {\n        return Category.PedalMarking;\n    }\n    /**\n     * Create a sustain pedal marking. Returns the defaults PedalMarking.\n     * Which uses the traditional \"Ped\" and \"*\"\" markings.\n     */\n    static createSustain(notes) {\n        const pedal = new PedalMarking(notes);\n        return pedal;\n    }\n    /** Create a sostenuto pedal marking */\n    static createSostenuto(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.MIXED);\n        pedal.setCustomText('Sost. Ped.');\n        return pedal;\n    }\n    /** Create an una corda pedal marking */\n    static createUnaCorda(notes) {\n        const pedal = new PedalMarking(notes);\n        pedal.setType(PedalMarking.type.TEXT);\n        pedal.setCustomText('una corda', 'tre corda');\n        return pedal;\n    }\n    constructor(notes) {\n        super();\n        this.notes = notes;\n        this.type = PedalMarking.type.TEXT;\n        this.line = 0;\n        // Custom text for the release/depress markings\n        this.custom_depress_text = '';\n        this.custom_release_text = '';\n        this.resetFont();\n        this.render_options = {\n            bracket_height: 10,\n            text_margin_right: 6,\n            bracket_line_width: 1,\n            color: 'black',\n        };\n    }\n    /** Set pedal type. */\n    setType(type) {\n        type = typeof type === 'string' ? PedalMarking.typeString[type] : type;\n        if (type >= PedalMarking.type.TEXT && type <= PedalMarking.type.MIXED) {\n            this.type = type;\n        }\n        return this;\n    }\n    /**\n     * Set custom text for the `depress`/`release` pedal markings. No text is\n     * set if the parameter is falsy.\n     */\n    setCustomText(depress, release) {\n        this.custom_depress_text = depress || '';\n        this.custom_release_text = release || '';\n        return this;\n    }\n    /** Set the staff line to render the markings on. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Draw the bracket based pedal markings. */\n    drawBracketed() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        let prev_x;\n        let prev_y;\n        // Iterate through each note\n        this.notes.forEach((note, index, notes) => {\n            var _a;\n            // Each note triggers the opposite pedal action\n            is_pedal_depressed = !is_pedal_depressed;\n            // Get the initial coordinates for the note\n            const x = note.getAbsoluteX();\n            const y = note.checkStave().getYForBottomText(this.line + 3);\n            // Throw if current note is positioned before the previous note\n            if (x < prev_x) {\n                throw new RuntimeError('InvalidConfiguration', 'The notes provided must be in order of ascending x positions');\n            }\n            // Determine if the previous or next note are the same\n            // as the current note. We need to keep track of this for\n            // when adjustments are made for the release+depress action\n            const next_is_same = notes[index + 1] === note;\n            const prev_is_same = notes[index - 1] === note;\n            let x_shift = 0;\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            if (is_pedal_depressed) {\n                // Adjustment for release+depress\n                x_shift = prev_is_same ? 5 : 0;\n                if (this.type === PedalMarking.type.MIXED && !prev_is_same) {\n                    // For MIXED style, start with text instead of bracket\n                    if (this.custom_depress_text) {\n                        // If we have custom text, use instead of the default \"Ped\" glyph\n                        const text_width = ctx.measureText(this.custom_depress_text).width;\n                        ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                        x_shift = text_width / 2 + this.render_options.text_margin_right;\n                    }\n                    else {\n                        // Render the Ped glyph in position\n                        drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                        x_shift = 20 + this.render_options.text_margin_right;\n                    }\n                }\n                else {\n                    // Draw start bracket\n                    ctx.beginPath();\n                    ctx.moveTo(x, y - this.render_options.bracket_height);\n                    ctx.lineTo(x + x_shift, y);\n                    ctx.stroke();\n                    ctx.closePath();\n                }\n            }\n            else {\n                // Adjustment for release+depress\n                x_shift = next_is_same ? -5 : 0;\n                // Draw end bracket\n                ctx.beginPath();\n                ctx.moveTo(prev_x, prev_y);\n                ctx.lineTo(x + x_shift, y);\n                ctx.lineTo(x, y - this.render_options.bracket_height);\n                ctx.stroke();\n                ctx.closePath();\n            }\n            // Store previous coordinates\n            prev_x = x + x_shift;\n            prev_y = y;\n        });\n    }\n    /**\n     * Draw the text based pedal markings. This defaults to the traditional\n     * \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n     */\n    drawText() {\n        const ctx = this.checkContext();\n        let is_pedal_depressed = false;\n        // Iterate through each note, placing glyphs or custom text accordingly\n        this.notes.forEach((note) => {\n            var _a;\n            is_pedal_depressed = !is_pedal_depressed;\n            const stave = note.checkStave();\n            const x = note.getAbsoluteX();\n            const y = stave.getYForBottomText(this.line + 3);\n            const point = (_a = Tables.currentMusicFont().lookupMetric(`pedalMarking.${is_pedal_depressed ? 'down' : 'up'}.point`)) !== null && _a !== void 0 ? _a : Tables.NOTATION_FONT_SCALE;\n            let text_width = 0;\n            if (is_pedal_depressed) {\n                if (this.custom_depress_text) {\n                    text_width = ctx.measureText(this.custom_depress_text).width;\n                    ctx.fillText(this.custom_depress_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_depress', ctx, x, y, point);\n                }\n            }\n            else {\n                if (this.custom_release_text) {\n                    text_width = ctx.measureText(this.custom_release_text).width;\n                    ctx.fillText(this.custom_release_text, x - text_width / 2, y);\n                }\n                else {\n                    drawPedalGlyph('pedal_release', ctx, x, y, point);\n                }\n            }\n        });\n    }\n    /** Render the pedal marking in position on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        ctx.save();\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n        ctx.setFont(this.textFont);\n        L('Rendering Pedal Marking');\n        if (this.type === PedalMarking.type.BRACKET || this.type === PedalMarking.type.MIXED) {\n            ctx.setLineWidth(this.render_options.bracket_line_width);\n            this.drawBracketed();\n        }\n        else if (this.type === PedalMarking.type.TEXT) {\n            this.drawText();\n        }\n        ctx.restore();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`. */\nPedalMarking.DEBUG = false;\nPedalMarking.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 12,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n/** Glyph data */\nPedalMarking.GLYPHS = {\n    pedal_depress: {\n        code: 'keyboardPedalPed',\n    },\n    pedal_release: {\n        code: 'keyboardPedalUp',\n    },\n};\n/** Pedal type as number. */\nPedalMarking.type = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3,\n};\n/** Pedal type as string. */\nPedalMarking.typeString = {\n    text: PedalMarking.type.TEXT,\n    bracket: PedalMarking.type.BRACKET,\n    mixed: PedalMarking.type.MIXED,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\n// Map `type` to SMuFL glyph code.\nconst CODES = {\n    '1': 'repeat1Bar',\n    '2': 'repeat2Bars',\n    '4': 'repeat4Bars',\n    slash: 'repeatBarSlash',\n};\nexport class RepeatNote extends GlyphNote {\n    static get CATEGORY() {\n        return Category.RepeatNote;\n    }\n    constructor(type, noteStruct, options) {\n        const glyphCode = CODES[type] || 'repeat1Bar';\n        const glyph = new Glyph(glyphCode, Tables.currentMusicFont().lookupMetric('repeatNote.point', 40), {\n            category: 'repeatNote',\n        });\n        super(glyph, Object.assign({ duration: 'q', align_center: type !== 'slash' }, noteStruct), options);\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nimport { Element } from './element';\nimport { Tables } from './tables';\nimport { TextJustification } from './textnote';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n// Attribution: Arrow rendering implementations based off of\n// Patrick Horgan's article, \"Drawing lines and arcs with\n// arrow heads on  HTML5 Canvas\"\n//\n// Draw an arrow head that connects between 3 coordinates.\nfunction drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n    ctx.fill();\n}\nexport class StaveLine extends Element {\n    static get CATEGORY() {\n        return Category.StaveLine;\n    }\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    constructor(notes) {\n        super();\n        this.setNotes(notes);\n        this.text = '';\n        this.resetFont();\n        this.render_options = {\n            // Space to add to the left or the right\n            padding_left: 4,\n            padding_right: 3,\n            // The width of the line in pixels\n            line_width: 1,\n            // An array of line/space lengths. (TODO/QUESTION: Is this supported in SVG?).\n            line_dash: undefined,\n            // Can draw rounded line end, instead of a square. (TODO/QUESTION: Is this supported in SVG?).\n            rounded_end: true,\n            // The color of the line and arrowheads\n            color: undefined,\n            // Flags to draw arrows on each end of the line\n            draw_start_arrow: false,\n            draw_end_arrow: false,\n            // The length of the arrowhead sides\n            arrowhead_length: 10,\n            // The angle of the arrowhead\n            arrowhead_angle: Math.PI / 8,\n            // The position of the text\n            text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n            text_justification: StaveLine.TextJustification.CENTER,\n        };\n    }\n    // The the annotation for the `StaveLine`\n    setText(text) {\n        this.text = text;\n        return this;\n    }\n    // Set the notes for the `StaveLine`\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Notes needs to have either first_note or last_note set.');\n        }\n        if (!notes.first_indices)\n            notes.first_indices = [0];\n        if (!notes.last_indices)\n            notes.last_indices = [0];\n        if (notes.first_indices.length !== notes.last_indices.length) {\n            throw new RuntimeError('BadArguments', 'Connected notes must have same number of indices.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.first_indices = notes.first_indices;\n        this.last_note = notes.last_note;\n        this.last_indices = notes.last_indices;\n        return this;\n    }\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle() {\n        const ctx = this.checkContext();\n        const render_options = this.render_options;\n        if (render_options.line_dash) {\n            ctx.setLineDash(render_options.line_dash);\n        }\n        if (render_options.line_width) {\n            ctx.setLineWidth(render_options.line_width);\n        }\n        if (render_options.rounded_end) {\n            ctx.setLineCap('round');\n        }\n        else {\n            ctx.setLineCap('square');\n        }\n    }\n    // Apply the text styling to the context\n    applyFontStyle() {\n        const ctx = this.checkContext();\n        ctx.setFont(this.textFont);\n        const render_options = this.render_options;\n        const color = render_options.color;\n        if (color) {\n            ctx.setStrokeStyle(color);\n            ctx.setFillStyle(color);\n        }\n    }\n    // Helper function to draw a line with arrow heads\n    drawArrowLine(ctx, pt1, pt2) {\n        const both_arrows = this.render_options.draw_start_arrow && this.render_options.draw_end_arrow;\n        const x1 = pt1.x;\n        const y1 = pt1.y;\n        const x2 = pt2.x;\n        const y2 = pt2.y;\n        // For ends with arrow we actually want to stop before we get to the arrow\n        // so that wide lines won't put a flat end on the arrow.\n        const distance = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        const ratio = (distance - this.render_options.arrowhead_length / 3) / distance;\n        let end_x;\n        let end_y;\n        let start_x;\n        let start_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            end_x = Math.round(x1 + (x2 - x1) * ratio);\n            end_y = Math.round(y1 + (y2 - y1) * ratio);\n        }\n        else {\n            end_x = x2;\n            end_y = y2;\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            start_x = x1 + (x2 - x1) * (1 - ratio);\n            start_y = y1 + (y2 - y1) * (1 - ratio);\n        }\n        else {\n            start_x = x1;\n            start_y = y1;\n        }\n        if (this.render_options.color) {\n            ctx.setStrokeStyle(this.render_options.color);\n            ctx.setFillStyle(this.render_options.color);\n        }\n        // Draw the shaft of the arrow\n        ctx.beginPath();\n        ctx.moveTo(start_x, start_y);\n        ctx.lineTo(end_x, end_y);\n        ctx.stroke();\n        ctx.closePath();\n        // calculate the angle of the line\n        const line_angle = Math.atan2(y2 - y1, x2 - x1);\n        // h is the line length of a side of the arrow head\n        const h = Math.abs(this.render_options.arrowhead_length / Math.cos(this.render_options.arrowhead_angle));\n        let angle1;\n        let angle2;\n        let top_x;\n        let top_y;\n        let bottom_x;\n        let bottom_y;\n        if (this.render_options.draw_end_arrow || both_arrows) {\n            angle1 = line_angle + Math.PI + this.render_options.arrowhead_angle;\n            top_x = x2 + Math.cos(angle1) * h;\n            top_y = y2 + Math.sin(angle1) * h;\n            angle2 = line_angle + Math.PI - this.render_options.arrowhead_angle;\n            bottom_x = x2 + Math.cos(angle2) * h;\n            bottom_y = y2 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n        }\n        if (this.render_options.draw_start_arrow || both_arrows) {\n            angle1 = line_angle + this.render_options.arrowhead_angle;\n            top_x = x1 + Math.cos(angle1) * h;\n            top_y = y1 + Math.sin(angle1) * h;\n            angle2 = line_angle - this.render_options.arrowhead_angle;\n            bottom_x = x1 + Math.cos(angle2) * h;\n            bottom_y = y1 + Math.sin(angle2) * h;\n            drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n        }\n    }\n    // Renders the `StaveLine` on the context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const first_note = this.first_note;\n        const last_note = this.last_note;\n        const render_options = this.render_options;\n        ctx.save();\n        this.applyLineStyle();\n        // Cycle through each set of indices and draw lines\n        let start_position = { x: 0, y: 0 };\n        let end_position = { x: 0, y: 0 };\n        this.first_indices.forEach((first_index, i) => {\n            const last_index = this.last_indices[i];\n            // Get initial coordinates for the start/end of the line\n            start_position = first_note.getModifierStartXY(2, first_index);\n            end_position = last_note.getModifierStartXY(1, last_index);\n            const upwards_slope = start_position.y > end_position.y;\n            // Adjust `x` coordinates for modifiers\n            start_position.x += first_note.getMetrics().modRightPx + render_options.padding_left;\n            end_position.x -= last_note.getMetrics().modLeftPx + render_options.padding_right;\n            // Adjust first `x` coordinates for displacements\n            const notehead_width = first_note.getGlyphProps().getWidth();\n            const first_displaced = first_note.getKeyProps()[first_index].displaced;\n            if (first_displaced && first_note.getStemDirection() === 1) {\n                start_position.x += notehead_width + render_options.padding_left;\n            }\n            // Adjust last `x` coordinates for displacements\n            const last_displaced = last_note.getKeyProps()[last_index].displaced;\n            if (last_displaced && last_note.getStemDirection() === -1) {\n                end_position.x -= notehead_width + render_options.padding_right;\n            }\n            // Adjust y position better if it's not coming from the center of the note\n            start_position.y += upwards_slope ? -3 : 1;\n            end_position.y += upwards_slope ? 2 : 0;\n            this.drawArrowLine(ctx, start_position, end_position);\n        });\n        ctx.restore();\n        // Determine the x coordinate where to start the text\n        const text_width = ctx.measureText(this.text).width;\n        const justification = render_options.text_justification;\n        let x = 0;\n        if (justification === StaveLine.TextJustification.LEFT) {\n            x = start_position.x;\n        }\n        else if (justification === StaveLine.TextJustification.CENTER) {\n            const delta_x = end_position.x - start_position.x;\n            const center_x = delta_x / 2 + start_position.x;\n            x = center_x - text_width / 2;\n        }\n        else if (justification === StaveLine.TextJustification.RIGHT) {\n            x = end_position.x - text_width;\n        }\n        // Determine the y value to start the text\n        let y = 0;\n        const vertical_position = render_options.text_position_vertical;\n        if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n            y = first_note.checkStave().getYForTopText();\n        }\n        else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n            y = first_note.checkStave().getYForBottomText(Tables.TEXT_HEIGHT_OFFSET_HACK);\n        }\n        // Draw the text\n        ctx.save();\n        this.applyFontStyle();\n        ctx.fillText(this.text, x, y);\n        ctx.restore();\n        return this;\n    }\n}\n/** Default text font. */\nStaveLine.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n// Text Positioning\nStaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2,\n};\nStaveLine.TextJustification = TextJustification;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { BoundingBox } from './boundingbox';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { Note } from './note';\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\n/**\n * System implements a musical system, which is a collection of staves,\n * each which can have one or more voices. All voices across all staves in\n * the system are formatted together.\n */\nexport class System extends Element {\n    static get CATEGORY() {\n        return Category.System;\n    }\n    constructor(params = {}) {\n        super();\n        this.setOptions(params);\n        this.partStaves = [];\n        this.partStaveInfos = [];\n        this.partVoices = [];\n    }\n    /** Set formatting options. */\n    setOptions(options = {}) {\n        if (!options.factory) {\n            throw new RuntimeError('NoFactory', 'System.setOptions(options) requires a factory.');\n        }\n        this.factory = options.factory;\n        this.options = Object.assign(Object.assign({ factory: this.factory, x: 10, y: 10, width: 500, spaceBetweenStaves: 12, autoWidth: false, noJustification: false, debugFormatter: false, formatIterations: 0, noPadding: false }, options), { details: Object.assign({ alpha: 0.5 }, options.details), formatOptions: Object.assign({}, options.formatOptions) });\n        if (this.options.noJustification === false && typeof options.width === 'undefined') {\n            this.options.autoWidth = true;\n        }\n    }\n    /** Get origin X. */\n    getX() {\n        return this.options.x;\n    }\n    /** Set origin X. */\n    setX(x) {\n        this.options.x = x;\n        this.partStaves.forEach((s) => {\n            s.setX(x);\n        });\n    }\n    /** Get origin y. */\n    getY() {\n        return this.options.y;\n    }\n    /** Set origin y. */\n    setY(y) {\n        this.options.y = y;\n        this.partStaves.forEach((s) => {\n            s.setY(y);\n        });\n    }\n    /** Get associated staves. */\n    getStaves() {\n        return this.partStaves;\n    }\n    /** Get associated voices. */\n    getVoices() {\n        return this.partVoices;\n    }\n    /** Set associated context. */\n    setContext(context) {\n        super.setContext(context);\n        this.factory.setContext(context);\n        return this;\n    }\n    /**\n     * Add connector between staves.\n     * @param type see {@link StaveConnector.typeString}\n     */\n    addConnector(type = 'double') {\n        this.connector = this.factory.StaveConnector({\n            top_stave: this.partStaves[0],\n            bottom_stave: this.partStaves[this.partStaves.length - 1],\n            type,\n        });\n        return this.connector;\n    }\n    /**\n     * Add a stave to the system.\n     *\n     * Example (one voice):\n     *\n     * `system.addStave({voices: [score.voice(score.notes('C#5/q, B4, A4, G#4'))]});`\n     *\n     * Example (two voices):\n     *\n     * `system.addStave({voices: [`\n     *   `score.voice(score.notes('C#5/q, B4, A4, G#4', {stem: 'up'})),`\n     *   `score.voice(score.notes('C#4/h, C#4', {stem: 'down'}))`\n     * `]});`\n     */\n    addStave(params) {\n        var _a;\n        const staveOptions = Object.assign({ left_bar: false }, params.options);\n        const stave = (_a = params.stave) !== null && _a !== void 0 ? _a : this.factory.Stave({ x: this.options.x, y: this.options.y, width: this.options.width, options: staveOptions });\n        const p = Object.assign(Object.assign({ spaceAbove: 0, spaceBelow: 0, debugNoteMetrics: false, noJustification: false }, params), { options: staveOptions });\n        const ctx = this.getContext();\n        p.voices.forEach((voice) => {\n            voice\n                .setContext(ctx)\n                .setStave(stave)\n                .getTickables()\n                .forEach((tickable) => tickable.setStave(stave));\n            this.partVoices.push(voice);\n        });\n        this.partStaves.push(stave);\n        this.partStaveInfos.push(p);\n        return stave;\n    }\n    /**\n     * Add voices to the system with stave already assigned.\n     */\n    addVoices(voices) {\n        const ctx = this.getContext();\n        voices.forEach((voice) => {\n            voice.setContext(ctx);\n            this.partVoices.push(voice);\n        });\n    }\n    /** Format the system. */\n    format() {\n        const options_details = this.options.details;\n        let justifyWidth = 0;\n        const formatter = new Formatter(options_details);\n        this.formatter = formatter;\n        let y = this.options.y;\n        let startX = 0;\n        const debugNoteMetricsYs = [];\n        this.partStaves.forEach((part, index) => {\n            y = y + part.space(this.partStaveInfos[index].spaceAbove);\n            part.setY(y);\n            y = y + part.space(this.partStaveInfos[index].spaceBelow);\n            y = y + part.space(this.options.spaceBetweenStaves);\n            if (this.partStaveInfos[index].debugNoteMetrics) {\n                debugNoteMetricsYs.push({ y, stave: part });\n                y += 15;\n            }\n            startX = Math.max(startX, part.getNoteStartX());\n        });\n        // Re-assign Stave to update y position\n        this.partVoices.forEach((voice) => {\n            voice.getTickables().forEach((tickable) => {\n                const stave = tickable.getStave();\n                if (stave)\n                    tickable.setStave(stave);\n            });\n        });\n        // Join the voices\n        formatter.joinVoices(this.partVoices);\n        // Update the start position of all staves.\n        this.partStaves.forEach((part) => part.setNoteStartX(startX));\n        if (this.options.autoWidth && this.partVoices.length > 0) {\n            justifyWidth = formatter.preCalculateMinTotalWidth(this.partVoices);\n            this.options.width = justifyWidth + Stave.rightPadding + (startX - this.options.x);\n            this.partStaves.forEach((part) => {\n                part.setWidth(this.options.width);\n            });\n        }\n        else {\n            justifyWidth = this.options.noPadding\n                ? this.options.width - (startX - this.options.x)\n                : this.options.width - (startX - this.options.x) - Stave.defaultPadding;\n        }\n        if (this.partVoices.length > 0) {\n            formatter.format(this.partVoices, this.options.noJustification ? 0 : justifyWidth, this.options.formatOptions);\n        }\n        formatter.postFormat();\n        for (let i = 0; i < this.options.formatIterations; i++) {\n            formatter.tune(options_details);\n        }\n        this.startX = startX;\n        this.debugNoteMetricsYs = debugNoteMetricsYs;\n        this.lastY = y;\n        this.boundingBox = new BoundingBox(this.options.x, this.options.y, this.options.width, this.lastY - this.options.y);\n        Stave.formatBegModifiers(this.partStaves);\n    }\n    /** Render the system. */\n    draw() {\n        // Render debugging information, if requested.\n        const ctx = this.checkContext();\n        if (!this.formatter || !this.startX || !this.lastY || !this.debugNoteMetricsYs) {\n            throw new RuntimeError('NoFormatter', 'format() must be called before draw()');\n        }\n        this.setRendered();\n        if (this.options.debugFormatter) {\n            Formatter.plotDebugging(ctx, this.formatter, this.startX, this.options.y, this.lastY);\n        }\n        this.debugNoteMetricsYs.forEach((d) => {\n            this.partVoices.forEach((voice) => {\n                voice.getTickables().forEach((tickable) => {\n                    if (tickable.getStave() === d.stave)\n                        Note.plotMetrics(ctx, tickable, d.y);\n                });\n            });\n        });\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { Glyph } from './glyph';\nimport { Modifier } from './modifier';\nimport { Stem } from './stem';\nimport { StemmableNote } from './stemmablenote';\nimport { Tables } from './tables';\nimport { Category, isDot } from './typeguard';\nimport { defined, RuntimeError } from './util';\n// Gets the unused strings grouped together if consecutive.\n//\n// Parameters:\n// * num_lines - The number of lines\n// * strings_used - An array of numbers representing which strings have fret positions\nfunction getUnusedStringGroups(num_lines, strings_used) {\n    const stem_through = [];\n    let group = [];\n    for (let string = 1; string <= num_lines; string++) {\n        const is_used = strings_used.indexOf(string) > -1;\n        if (!is_used) {\n            group.push(string);\n        }\n        else {\n            stem_through.push(group);\n            group = [];\n        }\n    }\n    if (group.length > 0)\n        stem_through.push(group);\n    return stem_through;\n}\n// Gets groups of points that outline the partial stem lines\n// between fret positions\n//\n// Parameters:\n// * stem_Y - The `y` coordinate the stem is located on\n// * unused_strings - An array of groups of unused strings\n// * stave - The stave to use for reference\n// * stem_direction - The direction of the stem\nfunction getPartialStemLines(stem_y, unused_strings, stave, stem_direction) {\n    const up_stem = stem_direction !== 1;\n    const down_stem = stem_direction !== -1;\n    const line_spacing = stave.getSpacingBetweenLines();\n    const total_lines = stave.getNumLines();\n    const stem_lines = [];\n    unused_strings.forEach((strings) => {\n        const containsLastString = strings.indexOf(total_lines) > -1;\n        const containsFirstString = strings.indexOf(1) > -1;\n        if ((up_stem && containsFirstString) || (down_stem && containsLastString)) {\n            return;\n        }\n        // If there's only one string in the group, push a duplicate value.\n        // We do this because we need 2 strings to convert into upper/lower y\n        // values.\n        if (strings.length === 1) {\n            strings.push(strings[0]);\n        }\n        const line_ys = [];\n        // Iterate through each group string and store it's y position\n        strings.forEach((string, index, strings) => {\n            const isTopBound = string === 1;\n            const isBottomBound = string === total_lines;\n            // Get the y value for the appropriate staff line,\n            // we adjust for a 0 index array, since string numbers are index 1\n            let y = stave.getYForLine(string - 1);\n            // Unless the string is the first or last, add padding to each side\n            // of the line\n            if (index === 0 && !isTopBound) {\n                y -= line_spacing / 2 - 1;\n            }\n            else if (index === strings.length - 1 && !isBottomBound) {\n                y += line_spacing / 2 - 1;\n            }\n            // Store the y value\n            line_ys.push(y);\n            // Store a subsequent y value connecting this group to the main\n            // stem above/below the stave if it's the top/bottom string\n            if (stem_direction === 1 && isTopBound) {\n                line_ys.push(stem_y - 2);\n            }\n            else if (stem_direction === -1 && isBottomBound) {\n                line_ys.push(stem_y + 2);\n            }\n        });\n        // Add the sorted y values to the\n        stem_lines.push(line_ys.sort((a, b) => a - b));\n    });\n    return stem_lines;\n}\nexport class TabNote extends StemmableNote {\n    static get CATEGORY() {\n        return Category.TabNote;\n    }\n    // Initialize the TabNote with a `noteStruct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    constructor(noteStruct, draw_stem = false) {\n        super(noteStruct);\n        this.glyphPropsArr = [];\n        // Return the number of the greatest string, which is the string lowest on the display\n        this.greatestString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a > b ? a : b));\n        };\n        // Return the number of the least string, which is the string highest on the display\n        this.leastString = () => {\n            return this.positions.map((x) => x.str).reduce((a, b) => (a < b ? a : b));\n        };\n        this.ghost = false; // Renders parenthesis around notes\n        // Note properties\n        // The fret positions in the note. An array of `{ str: X, fret: X }`\n        this.positions = noteStruct.positions || [];\n        // Render Options\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // font size for note heads and rests\n            glyph_font_scale: Tables.TABLATURE_FONT_SCALE, \n            // Flag to draw a stem\n            draw_stem, \n            // Flag to draw dot modifiers\n            draw_dots: draw_stem, \n            // Flag to extend the main stem through the stave and fret positions\n            draw_stem_through_stave: false, \n            // vertical shift from stave line\n            y_shift: 0, \n            // normal glyph scale\n            scale: 1.0, \n            // default tablature font\n            font: `${Font.SIZE}pt ${Font.SANS_SERIF}` });\n        this.glyphProps = Tables.getGlyphProps(this.duration, this.noteType);\n        defined(this.glyphProps, 'BadArguments', `No glyph found for duration '${this.duration}' and type '${this.noteType}'`);\n        this.buildStem();\n        if (noteStruct.stem_direction) {\n            this.setStemDirection(noteStruct.stem_direction);\n        }\n        else {\n            this.setStemDirection(Stem.UP);\n        }\n        // Renders parenthesis around notes\n        this.ghost = false;\n        this.updateWidth();\n    }\n    reset() {\n        super.reset();\n        if (this.stave)\n            this.setStave(this.stave);\n        return this;\n    }\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost(ghost) {\n        this.ghost = ghost;\n        this.updateWidth();\n        return this;\n    }\n    // Determine if the note has a stem\n    hasStem() {\n        if (this.render_options.draw_stem)\n            return true;\n        return false;\n    }\n    // Get the default stem extension for the note\n    getStemExtension() {\n        const glyphProps = this.getGlyphProps();\n        if (this.stem_extension_override != null) {\n            return this.stem_extension_override;\n        }\n        if (glyphProps) {\n            return this.getStemDirection() === Stem.UP\n                ? glyphProps.tabnote_stem_up_extension\n                : glyphProps.tabnote_stem_down_extension;\n        }\n        return 0;\n    }\n    // Calculate and store the width of the note\n    updateWidth() {\n        this.glyphPropsArr = [];\n        this.width = 0;\n        for (let i = 0; i < this.positions.length; ++i) {\n            let fret = this.positions[i].fret;\n            if (this.ghost)\n                fret = '(' + fret + ')';\n            const glyphProps = Tables.tabToGlyphProps(fret.toString(), this.render_options.scale);\n            this.glyphPropsArr.push(glyphProps);\n            this.width = Math.max(glyphProps.getWidth(), this.width);\n        }\n        // For some reason we associate a notehead glyph with a TabNote, and this\n        // glyph is used for certain width calculations. Of course, this is totally\n        // incorrect since a notehead is a poor approximation for the dimensions of\n        // a fret number which can have multiple digits. As a result, we must\n        // overwrite getWidth() to return the correct width\n        this.glyphProps.getWidth = () => this.width;\n    }\n    // Set the `stave` to the note\n    setStave(stave) {\n        super.setStave(stave);\n        const ctx = stave.getContext();\n        this.setContext(ctx);\n        // Calculate the fret number width based on font used\n        if (ctx) {\n            this.width = 0;\n            for (let i = 0; i < this.glyphPropsArr.length; ++i) {\n                const glyphProps = this.glyphPropsArr[i];\n                const text = '' + glyphProps.text;\n                if (text.toUpperCase() !== 'X') {\n                    ctx.save();\n                    ctx.setFont(this.render_options.font);\n                    glyphProps.width = ctx.measureText(text).width;\n                    ctx.restore();\n                    glyphProps.getWidth = () => glyphProps.width;\n                }\n                this.width = Math.max(glyphProps.getWidth(), this.width);\n            }\n            this.glyphProps.getWidth = () => this.width;\n        }\n        // we subtract 1 from `line` because getYForLine expects a 0-based index,\n        // while the position.str is a 1-based index\n        const ys = this.positions.map(({ str: line }) => stave.getYForLine(Number(line) - 1));\n        this.setYs(ys);\n        if (this.stem) {\n            this.stem.setYBounds(this.getStemY(), this.getStemY());\n        }\n        return this;\n    }\n    // Get the fret positions for the note\n    getPositions() {\n        return this.positions;\n    }\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY(position, index) {\n        if (!this.preFormatted) {\n            throw new RuntimeError('UnformattedNote', \"Can't call GetModifierStartXY on an unformatted note\");\n        }\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', 'No Y-Values calculated for this note.');\n        }\n        let x = 0;\n        if (position === Modifier.Position.LEFT) {\n            x = -1 * 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.RIGHT) {\n            x = this.width + 2; // FIXME: modifier padding, move to font file\n        }\n        else if (position === Modifier.Position.BELOW || position === Modifier.Position.ABOVE) {\n            const note_glyph_width = this.glyphProps.getWidth();\n            x = note_glyph_width / 2;\n        }\n        return {\n            x: this.getAbsoluteX() + x,\n            y: this.ys[index],\n        };\n    }\n    // Get the default line for rest\n    getLineForRest() {\n        return Number(this.positions[0].str);\n    }\n    // Pre-render formatting\n    preFormat() {\n        if (this.preFormatted)\n            return;\n        if (this.modifierContext)\n            this.modifierContext.preFormat();\n        // width is already set during init()\n        this.preFormatted = true;\n    }\n    // Get the x position for the stem\n    getStemX() {\n        return this.getCenterGlyphX();\n    }\n    // Get the y position for the stem\n    getStemY() {\n        const num_lines = this.checkStave().getNumLines();\n        // The decimal staff line amounts provide optimal spacing between the\n        // fret number and the stem\n        const stemUpLine = -0.5;\n        const stemDownLine = num_lines - 0.5;\n        const stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n        return this.checkStave().getYForLine(stemStartLine);\n    }\n    // Get the stem extents for the tabnote\n    getStemExtents() {\n        return this.checkStem().getExtents();\n    }\n    // Draw the fal onto the context\n    drawFlag() {\n        var _a;\n        const { beam, glyphProps, render_options: { draw_stem }, } = this;\n        const context = this.checkContext();\n        const shouldDrawFlag = beam == undefined && draw_stem;\n        // Now it's the flag's turn.\n        if (glyphProps.flag && shouldDrawFlag) {\n            const flag_x = this.getStemX();\n            const flag_y = this.getStemDirection() === Stem.DOWN\n                ? // Down stems are below the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() - (this.glyphProps ? this.glyphProps.stem_down_extension : 0)\n                : // Up stems are above the note head and have flags on the right.\n                    this.getStemY() - this.checkStem().getHeight() + (this.glyphProps ? this.glyphProps.stem_up_extension : 0);\n            // Draw the Flag\n            //this.flag?.setOptions({ category: 'flag.tabStem' });\n            (_a = this.flag) === null || _a === void 0 ? void 0 : _a.render(context, flag_x, flag_y);\n            //Glyph.renderGlyph(context, flag_x, flag_y, glyph_font_scale, flag_code, { category: 'flag.tabStem' });\n        }\n    }\n    // Render the modifiers onto the context.\n    drawModifiers() {\n        this.modifiers.forEach((modifier) => {\n            // Only draw the dots if enabled.\n            if (isDot(modifier) && !this.render_options.draw_dots) {\n                return;\n            }\n            modifier.setContext(this.getContext());\n            modifier.drawWithStyle();\n        });\n    }\n    // Render the stem extension through the fret positions\n    drawStemThrough() {\n        const stemX = this.getStemX();\n        const stemY = this.getStemY();\n        const ctx = this.checkContext();\n        const drawStem = this.render_options.draw_stem;\n        const stemThrough = this.render_options.draw_stem_through_stave;\n        if (drawStem && stemThrough) {\n            const numLines = this.checkStave().getNumLines();\n            const stringsUsed = this.positions.map((position) => Number(position.str));\n            const unusedStrings = getUnusedStringGroups(numLines, stringsUsed);\n            const stemLines = getPartialStemLines(stemY, unusedStrings, this.checkStave(), this.getStemDirection());\n            ctx.save();\n            ctx.setLineWidth(Stem.WIDTH);\n            stemLines.forEach((bounds) => {\n                if (bounds.length === 0)\n                    return;\n                ctx.beginPath();\n                ctx.moveTo(stemX, bounds[0]);\n                ctx.lineTo(stemX, bounds[bounds.length - 1]);\n                ctx.stroke();\n                ctx.closePath();\n            });\n            ctx.restore();\n        }\n    }\n    // Render the fret positions onto the context\n    drawPositions() {\n        var _a;\n        const ctx = this.checkContext();\n        const x = this.getAbsoluteX();\n        const ys = this.ys;\n        for (let i = 0; i < this.positions.length; ++i) {\n            const y = ys[i] + this.render_options.y_shift;\n            const glyphProps = this.glyphPropsArr[i];\n            // Center the fret text beneath the notation note head\n            const note_glyph_width = this.glyphProps.getWidth();\n            const tab_x = x + note_glyph_width / 2 - glyphProps.getWidth() / 2;\n            // FIXME: Magic numbers.\n            ctx.clearRect(tab_x - 2, y - 3, glyphProps.getWidth() + 4, 6);\n            if (glyphProps.code) {\n                Glyph.renderGlyph(ctx, tab_x, y, this.render_options.glyph_font_scale * this.render_options.scale, glyphProps.code);\n            }\n            else {\n                ctx.save();\n                ctx.setFont(this.render_options.font);\n                const text = (_a = glyphProps.text) !== null && _a !== void 0 ? _a : '';\n                ctx.fillText(text, tab_x, y + 5 * this.render_options.scale);\n                ctx.restore();\n            }\n        }\n    }\n    // The main rendering function for the entire note.\n    draw() {\n        const ctx = this.checkContext();\n        if (this.ys.length === 0) {\n            throw new RuntimeError('NoYValues', \"Can't draw note without Y values.\");\n        }\n        this.setRendered();\n        const render_stem = this.beam == undefined && this.render_options.draw_stem;\n        this.applyStyle();\n        ctx.openGroup('tabnote', this.getAttribute('id'), { pointerBBox: true });\n        this.drawPositions();\n        this.drawStemThrough();\n        if (this.stem && render_stem) {\n            const stem_x = this.getStemX();\n            this.stem.setNoteHeadXBounds(stem_x, stem_x);\n            this.stem.setContext(ctx).draw();\n        }\n        this.drawFlag();\n        this.drawModifiers();\n        ctx.closeGroup();\n        this.restoreStyle();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\nimport { Stave } from './stave';\nimport { Category } from './typeguard';\nexport class TabStave extends Stave {\n    static get CATEGORY() {\n        return Category.TabStave;\n    }\n    constructor(x, y, width, options) {\n        const tab_options = Object.assign({ spacing_between_lines_px: 13, num_lines: 6, top_text_position: 1 }, options);\n        super(x, y, width, tab_options);\n    }\n    getYForGlyphs() {\n        return this.getYForLine(2.5);\n    }\n    // Deprecated\n    addTabGlyph() {\n        this.addClef('tab');\n        return this;\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// This file implements `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\nimport { Element } from './element';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Renderer } from './renderer';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { log, RuntimeError } from './util';\n// To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nexport class TextBracket extends Element {\n    static get CATEGORY() {\n        return Category.TextBracket;\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    /**\n     * @deprecated Use `TextBracket.Position` instead.\n     */\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    /**\n     * @deprecated Use `TextBracket.PositionString` instead.\n     */\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            // In the BOTTOM position, the bracket line can extend\n            // under the superscript.\n            underline_superscript: true,\n        };\n    }\n    /**\n     * Apply the text backet styling to the provided context.\n     * @param ctx\n     * @returns this\n     */\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    // Set the rendering `context` for the octave bracket\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    // Draw the octave bracket on the rendering context\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        // Get the preliminary start and stop coordintates for the bracket\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        // Draw text\n        ctx.fillText(this.text, start.x, start.y);\n        // Get the width and height for the octave number\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        // Calculate the y position for the super script\n        const super_y = start.y - main_height / 2.5;\n        // We called this.resetFont() in the constructor, so we know this.textFont is available.\n        // eslint-disable-next-line\n        const { family, size, weight, style } = this.textFont;\n        // To draw the superscript, we scale the font size by 1/1.4.\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        // Determine width and height of the superscript\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        // Setup initial coordinates for the bracket line\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n        // Adjust x and y coordinates based on position\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            // Main line\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            // Ending Bracket\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            // Main line\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                // Ending bracket\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Glyph } from './glyph';\nimport { Note } from './note';\nimport { Tables } from './tables';\nimport { Category } from './typeguard';\nimport { defined, log, RuntimeError } from './util';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (TextDynamics.DEBUG)\n        log('Vex.Flow.TextDynamics', args);\n}\n/**\n * `TextDynamics` renders traditional\n * text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n *\n * You can render any dynamics string that contains a combination of\n * the following letters:  P, M, F, Z, R, S\n */\nexport class TextDynamics extends Note {\n    static get CATEGORY() {\n        return Category.TextDynamics;\n    }\n    /** The glyph data for each dynamics letter. */\n    static get GLYPHS() {\n        return {\n            f: {\n                code: 'dynamicForte',\n                width: 12,\n            },\n            p: {\n                code: 'dynamicPiano',\n                width: 14,\n            },\n            m: {\n                code: 'dynamicMezzo',\n                width: 17,\n            },\n            s: {\n                code: 'dynamicSforzando',\n                width: 10,\n            },\n            z: {\n                code: 'dynamicZ',\n                width: 12,\n            },\n            r: {\n                code: 'dynamicRinforzando',\n                width: 12,\n            },\n        };\n    }\n    /**\n     * Create the dynamics marking.\n     *\n     * A `TextDynamics` object inherits from `Note` so that it can be formatted\n     * within a `Voice`.\n     *\n     * @param noteStruct an object that contains a `duration` property and a\n     * `sequence` of letters that represents the letters to render.\n     */\n    constructor(noteStruct) {\n        super(noteStruct);\n        this.sequence = (noteStruct.text || '').toLowerCase();\n        this.line = noteStruct.line || 0;\n        this.glyphs = [];\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { glyph_font_size: Tables.NOTATION_FONT_SCALE });\n        L('New Dynamics Text: ', this.sequence);\n    }\n    /** Set the Stave line on which the note should be placed. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Preformat the dynamics text. */\n    preFormat() {\n        let total_width = 0;\n        // length of this.glyphs must be <=\n        // length of this.sequence, so if we're formatted before\n        // create new glyphs.\n        this.glyphs = [];\n        // Iterate through each letter\n        this.sequence.split('').forEach((letter) => {\n            // Get the glyph data for the letter\n            const glyph_data = TextDynamics.GLYPHS[letter];\n            if (!glyph_data)\n                throw new RuntimeError('Invalid dynamics character: ' + letter);\n            const size = defined(this.render_options.glyph_font_size);\n            const glyph = new Glyph(glyph_data.code, size, { category: 'textNote' });\n            // Add the glyph\n            this.glyphs.push(glyph);\n            total_width += glyph_data.width;\n        });\n        // Store the width of the text\n        this.setWidth(total_width);\n        this.preFormatted = true;\n        return this;\n    }\n    /** Draw the dynamics text on the rendering context. */\n    draw() {\n        this.setRendered();\n        const x = this.getAbsoluteX();\n        const y = this.checkStave().getYForLine(this.line + -3);\n        L('Rendering Dynamics: ', this.sequence);\n        let letter_x = x;\n        this.glyphs.forEach((glyph, index) => {\n            const current_letter = this.sequence[index];\n            glyph.render(this.checkContext(), letter_x, y);\n            letter_x += TextDynamics.GLYPHS[current_letter].width;\n        });\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`. */\nTextDynamics.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author Taehoon Moon 2014\nimport { Note } from './note';\nimport { TimeSignature } from './timesignature';\nimport { Category } from './typeguard';\nexport class TimeSigNote extends Note {\n    static get CATEGORY() {\n        return Category.TimeSigNote;\n    }\n    constructor(timeSpec, customPadding) {\n        super({ duration: 'b' });\n        this.timeSig = new TimeSignature(timeSpec, customPadding);\n        this.setWidth(this.timeSig.getGlyph().getMetrics().width);\n        // Note properties\n        this.ignore_ticks = true;\n    }\n    /* Overridden to ignore */\n    // eslint-disable-next-line\n    addToModifierContext(mc) {\n        // DO NOTHING.\n        return this;\n    }\n    preFormat() {\n        this.preFormatted = true;\n        return this;\n    }\n    draw() {\n        const stave = this.checkStave();\n        const ctx = this.checkContext();\n        this.setRendered();\n        const tsGlyph = this.timeSig.getGlyph();\n        if (!tsGlyph.getContext()) {\n            tsGlyph.setContext(ctx);\n        }\n        tsGlyph.setStave(stave);\n        tsGlyph.setYShift(stave.getYForLine(2) - stave.getYForGlyphs());\n        tsGlyph.renderToStave(this.getAbsoluteX());\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Balazs Forian-Szabo\n// MIT License\nimport { Element } from './element';\nimport { Category } from './typeguard';\nimport { log } from './util';\nimport { Vibrato } from './vibrato';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (VibratoBracket.DEBUG)\n        log('Vex.Flow.VibratoBracket', args);\n}\n/** `VibratoBracket` renders vibrato effect between two notes. */\nexport class VibratoBracket extends Element {\n    static get CATEGORY() {\n        return Category.VibratoBracket;\n    }\n    /**\n     * Either the stop or start note must be set, or both of them.\n     * An undefined value for the start or stop note indicates that the vibrato\n     * is drawn from the beginning or until the end of the stave accordingly.\n     */\n    constructor(bracket_data) {\n        super();\n        if (bracket_data.start)\n            this.start = bracket_data.start;\n        if (bracket_data.stop)\n            this.stop = bracket_data.stop;\n        this.line = 1;\n        this.render_options = {\n            harsh: false,\n            wave_height: 6,\n            wave_width: 4,\n            wave_girth: 2,\n            vibrato_width: 0,\n        };\n    }\n    /** Set line position of the vibrato bracket. */\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    /** Set harsh vibrato bracket. */\n    setHarsh(harsh) {\n        this.render_options.harsh = harsh;\n        return this;\n    }\n    /** Draw the vibrato bracket on the rendering context. */\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        const y = (this.start && this.start.checkStave().getYForTopText(this.line)) ||\n            (this.stop && this.stop.checkStave().getYForTopText(this.line)) ||\n            0;\n        // If start note is not set then vibrato will be drawn\n        // from the beginning of the stave\n        const start_x = (this.start && this.start.getAbsoluteX()) || (this.stop && this.stop.checkStave().getTieStartX()) || 0;\n        // If stop note is not set then vibrato will be drawn\n        // until the end of the stave\n        const stop_x = (this.stop && this.stop.getAbsoluteX() - this.stop.getWidth() - 5) ||\n            (this.start && this.start.checkStave().getTieEndX() - 10) ||\n            0;\n        this.render_options.vibrato_width = stop_x - start_x;\n        L('Rendering VibratoBracket: start_x:', start_x, 'stop_x:', stop_x, 'y:', y);\n        Vibrato.renderVibrato(ctx, start_x, y, this.render_options);\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.VibratoBracket.DEBUG` to `true`. */\nVibratoBracket.DEBUG = false;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Mohit Cheppudira\n// MIT License\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { ChordSymbol } from './chordsymbol';\nimport { ClefNote } from './clefnote';\nimport { Curve } from './curve';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Formatter } from './formatter';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { KeySigNote } from './keysignote';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { PedalMarking } from './pedalmarking';\nimport { Renderer } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { StaveConnector } from './staveconnector';\nimport { StaveLine } from './staveline';\nimport { StaveNote } from './stavenote';\nimport { StaveTie } from './stavetie';\nimport { StringNumber } from './stringnumber';\nimport { System } from './system';\nimport { TabNote } from './tabnote';\nimport { TabStave } from './tabstave';\nimport { TextBracket } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSigNote } from './timesignote';\nimport { Tuplet } from './tuplet';\nimport { defined, log, RuntimeError } from './util';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice } from './voice';\nimport { isHTMLCanvas } from './web';\n// eslint-disable-next-line\nfunction L(...args) {\n    if (Factory.DEBUG)\n        log('Vex.Flow.Factory', args);\n}\n/**\n * Factory implements a high level API around VexFlow.\n */\nexport class Factory {\n    /**\n     * Static simplified function to access constructor without providing FactoryOptions\n     *\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = Vex.Flow.Factory.newFromElementId('boo', 1200, 600 );`\n     */\n    static newFromElementId(elementId, width = 500, height = 200) {\n        return new Factory({ renderer: { elementId, width, height } });\n    }\n    /**\n     * Example:\n     *\n     * Create an SVG renderer and attach it to the DIV element named \"boo\" to render using <page-width> 1200 and <page-height> 600\n     *\n     * `const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});`\n     */\n    constructor(options = {}) {\n        L('New factory: ', options);\n        this.options = {\n            stave: {\n                space: 10,\n            },\n            renderer: {\n                elementId: '',\n                width: 500,\n                height: 200,\n                background: '#FFF',\n            },\n            font: Factory.TEXT_FONT,\n        };\n        this.setOptions(options);\n    }\n    reset() {\n        this.renderQ = [];\n        this.systems = [];\n        this.staves = [];\n        this.voices = [];\n        this.stave = undefined; // current stave\n    }\n    setOptions(options) {\n        this.options = Object.assign(Object.assign({}, this.options), options);\n        this.initRenderer();\n        this.reset();\n    }\n    initRenderer() {\n        const { elementId, width, height, background } = this.options.renderer;\n        if (elementId == null) {\n            return;\n        }\n        if (elementId == '') {\n            L(this);\n            throw new RuntimeError('renderer.elementId not set in FactoryOptions');\n        }\n        let backend = this.options.renderer.backend;\n        if (backend === undefined) {\n            const elem = document.getElementById(elementId);\n            // We use a custom type check here, because node-canvas mimics canvas,\n            // but is not an instance of window.HTMLCanvasElement.\n            // In fact, `window` might be undefined here.\n            // See: https://www.npmjs.com/package/canvas\n            if (isHTMLCanvas(elem)) {\n                backend = Renderer.Backends.CANVAS;\n            }\n            else {\n                backend = Renderer.Backends.SVG;\n            }\n        }\n        this.context = Renderer.buildContext(elementId, backend, width, height, background);\n    }\n    getContext() {\n        return this.context;\n    }\n    setContext(context) {\n        this.context = context;\n        return this;\n    }\n    getStave() {\n        return this.stave;\n    }\n    getVoices() {\n        return this.voices;\n    }\n    /** Return pixels from current stave spacing. */\n    Stave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.0 } }, params);\n        const stave = new Stave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    TabStave(params) {\n        const staveSpace = this.options.stave.space;\n        const p = Object.assign({ x: 0, y: 0, width: this.options.renderer.width - staveSpace * 1.0, options: { spacing_between_lines_px: staveSpace * 1.3 } }, params);\n        const stave = new TabStave(p.x, p.y, p.width, p.options);\n        this.staves.push(stave);\n        stave.setContext(this.context);\n        this.stave = stave;\n        return stave;\n    }\n    StaveNote(noteStruct) {\n        const note = new StaveNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GlyphNote(glyph, noteStruct, options) {\n        const note = new GlyphNote(glyph, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    RepeatNote(type, noteStruct, options) {\n        const note = new RepeatNote(type, noteStruct, options);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GhostNote(noteStruct) {\n        const ghostNote = new GhostNote(noteStruct);\n        if (this.stave)\n            ghostNote.setStave(this.stave);\n        ghostNote.setContext(this.context);\n        this.renderQ.push(ghostNote);\n        return ghostNote;\n    }\n    TextNote(noteStruct) {\n        const textNote = new TextNote(noteStruct);\n        if (this.stave)\n            textNote.setStave(this.stave);\n        textNote.setContext(this.context);\n        this.renderQ.push(textNote);\n        return textNote;\n    }\n    BarNote(params = {}) {\n        const barNote = new BarNote(params.type);\n        if (this.stave)\n            barNote.setStave(this.stave);\n        barNote.setContext(this.context);\n        this.renderQ.push(barNote);\n        return barNote;\n    }\n    ClefNote(params) {\n        const p = Object.assign({ type: 'treble', options: {\n                size: 'default',\n                annotation: undefined,\n            } }, params);\n        const clefNote = new ClefNote(p.type, p.options.size, p.options.annotation);\n        if (this.stave)\n            clefNote.setStave(this.stave);\n        clefNote.setContext(this.context);\n        this.renderQ.push(clefNote);\n        return clefNote;\n    }\n    TimeSigNote(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const timeSigNote = new TimeSigNote(p.time);\n        if (this.stave)\n            timeSigNote.setStave(this.stave);\n        timeSigNote.setContext(this.context);\n        this.renderQ.push(timeSigNote);\n        return timeSigNote;\n    }\n    KeySigNote(params) {\n        const keySigNote = new KeySigNote(params.key, params.cancelKey, params.alterKey);\n        if (this.stave)\n            keySigNote.setStave(this.stave);\n        keySigNote.setContext(this.context);\n        this.renderQ.push(keySigNote);\n        return keySigNote;\n    }\n    TabNote(noteStruct) {\n        const note = new TabNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        this.renderQ.push(note);\n        return note;\n    }\n    GraceNote(noteStruct) {\n        const note = new GraceNote(noteStruct);\n        if (this.stave)\n            note.setStave(this.stave);\n        note.setContext(this.context);\n        return note;\n    }\n    GraceNoteGroup(params) {\n        const group = new GraceNoteGroup(params.notes, params.slur);\n        group.setContext(this.context);\n        return group;\n    }\n    Accidental(params) {\n        const accid = new Accidental(params.type);\n        accid.setContext(this.context);\n        return accid;\n    }\n    Annotation(params) {\n        const p = Object.assign({ text: 'p', hJustify: AnnotationHorizontalJustify.CENTER, vJustify: AnnotationVerticalJustify.BOTTOM }, params);\n        const annotation = new Annotation(p.text);\n        annotation.setJustification(p.hJustify);\n        annotation.setVerticalJustification(p.vJustify);\n        annotation.setFont(p.font);\n        annotation.setContext(this.context);\n        return annotation;\n    }\n    ChordSymbol(params) {\n        const p = Object.assign({ vJustify: 'top', hJustify: 'center', kerning: true, reportWidth: true }, params);\n        const chordSymbol = new ChordSymbol();\n        chordSymbol.setHorizontal(p.hJustify);\n        chordSymbol.setVertical(p.vJustify);\n        chordSymbol.setEnableKerning(p.kerning);\n        chordSymbol.setReportWidth(p.reportWidth);\n        // There is a default font based on the engraving font.  Only set then\n        // font if it is specific, else use the default\n        if (typeof p.fontFamily === 'string' && typeof p.fontSize === 'number') {\n            if (typeof p.fontWeight === 'string')\n                chordSymbol.setFont(p.fontFamily, p.fontSize, p.fontWeight);\n            else\n                chordSymbol.setFont(p.fontFamily, p.fontSize, '');\n        }\n        else if (typeof p.fontSize === 'number') {\n            chordSymbol.setFontSize(p.fontSize);\n        }\n        chordSymbol.setContext(this.context);\n        return chordSymbol;\n    }\n    Articulation(params) {\n        var _a;\n        const articulation = new Articulation((_a = params === null || params === void 0 ? void 0 : params.type) !== null && _a !== void 0 ? _a : 'a.');\n        if ((params === null || params === void 0 ? void 0 : params.position) != undefined)\n            articulation.setPosition(params.position);\n        if ((params === null || params === void 0 ? void 0 : params.betweenLines) != undefined)\n            articulation.setBetweenLines(params.betweenLines);\n        articulation.setContext(this.context);\n        return articulation;\n    }\n    Ornament(type, params) {\n        const options = Object.assign({ type, position: 0, accidental: '' }, params);\n        const ornament = new Ornament(type);\n        ornament.setPosition(options.position);\n        if (options.upperAccidental) {\n            ornament.setUpperAccidental(options.upperAccidental);\n        }\n        if (options.lowerAccidental) {\n            ornament.setLowerAccidental(options.lowerAccidental);\n        }\n        if (typeof options.delayed !== 'undefined') {\n            ornament.setDelayed(options.delayed);\n        }\n        ornament.setContext(this.context);\n        return ornament;\n    }\n    TextDynamics(params) {\n        const p = Object.assign({ text: 'p', duration: 'q', dots: 0, line: 0 }, params);\n        const text = new TextDynamics({\n            text: p.text,\n            line: p.line,\n            duration: p.duration,\n            dots: p.dots,\n        });\n        if (this.stave)\n            text.setStave(this.stave);\n        text.setContext(this.context);\n        this.renderQ.push(text);\n        return text;\n    }\n    Fingering(params) {\n        const p = Object.assign({ number: '0', position: 'left' }, params);\n        const fingering = new FretHandFinger(p.number);\n        fingering.setPosition(p.position);\n        fingering.setContext(this.context);\n        return fingering;\n    }\n    StringNumber(params, drawCircle = true) {\n        const stringNumber = new StringNumber(params.number);\n        stringNumber.setPosition(params.position);\n        stringNumber.setContext(this.context);\n        stringNumber.setDrawCircle(drawCircle);\n        return stringNumber;\n    }\n    TickContext() {\n        return new TickContext();\n    }\n    ModifierContext() {\n        return new ModifierContext();\n    }\n    MultiMeasureRest(params) {\n        const numMeasures = defined(params.number_of_measures, 'NoNumberOfMeasures');\n        const multiMeasureRest = new MultiMeasureRest(numMeasures, params);\n        multiMeasureRest.setContext(this.context);\n        this.renderQ.push(multiMeasureRest);\n        return multiMeasureRest;\n    }\n    Voice(params) {\n        const p = Object.assign({ time: '4/4' }, params);\n        const voice = new Voice(p.time);\n        this.voices.push(voice);\n        return voice;\n    }\n    StaveConnector(params) {\n        const connector = new StaveConnector(params.top_stave, params.bottom_stave);\n        connector.setType(params.type).setContext(this.context);\n        this.renderQ.push(connector);\n        return connector;\n    }\n    Formatter(options) {\n        return new Formatter(options);\n    }\n    Tuplet(params) {\n        const p = Object.assign({ notes: [], options: {} }, params);\n        const tuplet = new Tuplet(p.notes, p.options).setContext(this.context);\n        this.renderQ.push(tuplet);\n        return tuplet;\n    }\n    Beam(params) {\n        var _a, _b, _c, _d, _e;\n        const beam = new Beam(params.notes, (_a = params.options) === null || _a === void 0 ? void 0 : _a.autoStem).setContext(this.context);\n        beam.breakSecondaryAt((_c = (_b = params.options) === null || _b === void 0 ? void 0 : _b.secondaryBeamBreaks) !== null && _c !== void 0 ? _c : []);\n        if ((_d = params.options) === null || _d === void 0 ? void 0 : _d.partialBeamDirections) {\n            Object.entries((_e = params.options) === null || _e === void 0 ? void 0 : _e.partialBeamDirections).forEach(([noteIndex, direction]) => {\n                beam.setPartialBeamSideAt(Number(noteIndex), direction);\n            });\n        }\n        this.renderQ.push(beam);\n        return beam;\n    }\n    Curve(params) {\n        const curve = new Curve(params.from, params.to, params.options).setContext(this.context);\n        this.renderQ.push(curve);\n        return curve;\n    }\n    StaveTie(params) {\n        var _a;\n        const tie = new StaveTie({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        }, params.text);\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.direction)\n            tie.setDirection(params.options.direction);\n        tie.setContext(this.context);\n        this.renderQ.push(tie);\n        return tie;\n    }\n    StaveLine(params) {\n        var _a, _b;\n        const line = new StaveLine({\n            first_note: params.from,\n            last_note: params.to,\n            first_indices: params.first_indices,\n            last_indices: params.last_indices,\n        });\n        if ((_a = params.options) === null || _a === void 0 ? void 0 : _a.text)\n            line.setText(params.options.text);\n        if ((_b = params.options) === null || _b === void 0 ? void 0 : _b.font)\n            line.setFont(params.options.font);\n        line.setContext(this.context);\n        this.renderQ.push(line);\n        return line;\n    }\n    VibratoBracket(params) {\n        const vibratoBracket = new VibratoBracket({\n            start: params.from,\n            stop: params.to,\n        });\n        if (params.options.line)\n            vibratoBracket.setLine(params.options.line);\n        if (params.options.harsh)\n            vibratoBracket.setHarsh(params.options.harsh);\n        vibratoBracket.setContext(this.context);\n        this.renderQ.push(vibratoBracket);\n        return vibratoBracket;\n    }\n    TextBracket(params) {\n        const textBracket = new TextBracket({\n            start: params.from,\n            stop: params.to,\n            text: params.text,\n            superscript: params.options.superscript,\n            position: params.options.position,\n        });\n        if (params.options.line)\n            textBracket.setLine(params.options.line);\n        if (params.options.font)\n            textBracket.setFont(params.options.font);\n        textBracket.setContext(this.context);\n        this.renderQ.push(textBracket);\n        return textBracket;\n    }\n    System(params = {}) {\n        params.factory = this;\n        const system = new System(params).setContext(this.context);\n        this.systems.push(system);\n        return system;\n    }\n    /**\n     * Creates EasyScore. Normally the first step after constructing a Factory. For example:\n     * ```\n     * const vf: Factory = new Vex.Flow.Factory({renderer: { elementId: 'boo', width: 1200, height: 600 }});\n     * const score: EasyScore = vf.EasyScore();\n     * ```\n     * @param options.factory optional instance of Factory\n     * @param options.builder instance of Builder\n     * @param options.commitHooks function to call after a note element is created\n     * @param options.throwOnError throw error in case of parsing error\n     */\n    EasyScore(options = {}) {\n        options.factory = this;\n        return new EasyScore(options);\n    }\n    PedalMarking(params) {\n        const p = Object.assign({ notes: [], options: {\n                style: 'mixed',\n            } }, params);\n        const pedal = new PedalMarking(p.notes);\n        pedal.setType(PedalMarking.typeString[p.options.style]);\n        pedal.setContext(this.context);\n        this.renderQ.push(pedal);\n        return pedal;\n    }\n    NoteSubGroup(params) {\n        const p = Object.assign({ notes: [] }, params);\n        const group = new NoteSubGroup(p.notes);\n        group.setContext(this.context);\n        return group;\n    }\n    /** Render the score. */\n    draw() {\n        const ctx = this.context;\n        this.systems.forEach((s) => s.setContext(ctx).format());\n        this.staves.forEach((s) => s.setContext(ctx).draw());\n        this.voices.forEach((v) => v.setContext(ctx).draw());\n        this.renderQ.forEach((e) => {\n            if (!e.isRendered())\n                e.setContext(ctx).draw();\n        });\n        this.systems.forEach((s) => s.setContext(ctx).draw());\n        this.reset();\n    }\n}\n/** To enable logging for this class. Set `Vex.Flow.Factory.DEBUG` to `true`. */\nFactory.DEBUG = false;\n/** Default text font. */\nFactory.TEXT_FONT = Object.assign({}, Element.TEXT_FONT);\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// @author Balazs Forian-Szabo\n//\n// ## Description\n//\n// A basic implementation of grace notes\n// to be rendered on a tab stave.\n//\n// See `tests/gracetabnote_tests.ts` for usage examples.\nimport { Font } from './font';\nimport { TabNote } from './tabnote';\nimport { Category } from './typeguard';\nexport class GraceTabNote extends TabNote {\n    static get CATEGORY() {\n        return Category.GraceTabNote;\n    }\n    constructor(noteStruct) {\n        super(noteStruct, false);\n        this.render_options = Object.assign(Object.assign({}, this.render_options), { \n            // vertical shift from stave line\n            y_shift: 0.3, \n            // grace glyph scale\n            scale: 0.6, \n            // grace tablature font\n            font: `7.5pt ${Font.SANS_SERIF}` });\n        this.updateWidth();\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements diatonic key management.\nimport { Music } from './music';\nimport { RuntimeError } from './util';\nexport class KeyManager {\n    constructor(key) {\n        this.music = new Music();\n        this.setKey(key);\n    }\n    setKey(key) {\n        this.key = key;\n        this.reset();\n        return this;\n    }\n    getKey() {\n        return this.key;\n    }\n    reset() {\n        this.keyParts = this.music.getKeyParts(this.key);\n        this.keyString = this.keyParts.root;\n        if (this.keyParts.accidental)\n            this.keyString += this.keyParts.accidental;\n        const is_supported_type = Music.scaleTypes[this.keyParts.type];\n        if (!is_supported_type) {\n            throw new RuntimeError('BadArguments', `Unsupported key type: ${this.key}`);\n        }\n        this.scale = this.music.getScaleTones(this.music.getNoteValue(this.keyString), Music.scaleTypes[this.keyParts.type]);\n        this.scaleMap = {};\n        this.scaleMapByValue = {};\n        this.originalScaleMapByValue = {};\n        const noteLocation = Music.root_indices[this.keyParts.root];\n        for (let i = 0; i < Music.roots.length; ++i) {\n            const index = (noteLocation + i) % Music.roots.length;\n            const rootName = Music.roots[index];\n            const noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n            this.scaleMap[rootName] = noteName;\n            this.scaleMapByValue[this.scale[i]] = noteName;\n            this.originalScaleMapByValue[this.scale[i]] = noteName;\n        }\n        return this;\n    }\n    getAccidental(key) {\n        const root = this.music.getKeyParts(key).root;\n        const parts = this.music.getNoteParts(this.scaleMap[root]);\n        return {\n            note: this.scaleMap[root],\n            accidental: parts.accidental,\n        };\n    }\n    selectNote(note) {\n        note = note.toLowerCase();\n        const parts = this.music.getNoteParts(note);\n        // First look for matching note in our altered scale\n        const scaleNote = this.scaleMap[parts.root];\n        const modparts = this.music.getNoteParts(scaleNote);\n        if (scaleNote === note) {\n            return {\n                note: scaleNote,\n                accidental: parts.accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in our altered scale\n        const valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n        if (valueNote != null) {\n            return {\n                note: valueNote,\n                accidental: this.music.getNoteParts(valueNote).accidental,\n                change: false,\n            };\n        }\n        // Then search for a note of equivalent value in the original scale\n        const originalValueNote = this.originalScaleMapByValue[this.music.getNoteValue(note)];\n        if (originalValueNote != null) {\n            this.scaleMap[modparts.root] = originalValueNote;\n            delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n            this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n            return {\n                note: originalValueNote,\n                accidental: this.music.getNoteParts(originalValueNote).accidental,\n                change: true,\n            };\n        }\n        // Then try to unmodify a currently modified note.\n        if (modparts.root === note) {\n            delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n            this.scaleMapByValue[this.music.getNoteValue(modparts.root)] = modparts.root;\n            this.scaleMap[modparts.root] = modparts.root;\n            return {\n                note: modparts.root,\n                accidental: undefined,\n                change: true,\n            };\n        }\n        // Last resort -- shitshoot\n        delete this.scaleMapByValue[this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n        delete this.scaleMap[modparts.root];\n        this.scaleMap[modparts.root] = note;\n        return {\n            note,\n            accidental: parts.accidental,\n            change: true,\n        };\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n// Author: Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either crescendo or decrescendo.\nimport { Element } from './element';\nimport { Modifier } from './modifier';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class StaveHairpin extends Element {\n    static get CATEGORY() {\n        return Category.StaveHairpin;\n    }\n    /* Helper function to convert ticks into pixels.\n     * Requires a Formatter with voices joined and formatted (to\n     * get pixels per tick)\n     *\n     * options is struct that has:\n     *\n     *  {\n     *   height: px,\n     *   y_shift: px,         // vertical offset\n     *   left_shift_ticks: 0, // left horizontal offset expressed in ticks\n     *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n     *  }\n     *\n     **/\n    static FormatByTicksAndDraw(ctx, formatter, notes, type, position, options) {\n        var _a, _b;\n        const ppt = formatter.pixelsPerTick;\n        if (ppt == null) {\n            throw new RuntimeError('BadArguments', 'A valid Formatter must be provide to draw offsets by ticks.');\n        }\n        const l_shift_px = ppt * ((_a = options.left_shift_ticks) !== null && _a !== void 0 ? _a : 0);\n        const r_shift_px = ppt * ((_b = options.right_shift_ticks) !== null && _b !== void 0 ? _b : 0);\n        const hairpin_options = {\n            height: options.height,\n            y_shift: options.y_shift,\n            left_shift_px: l_shift_px,\n            right_shift_px: r_shift_px,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n        new StaveHairpin({\n            first_note: notes.first_note,\n            last_note: notes.last_note,\n        }, type)\n            .setContext(ctx)\n            .setRenderOptions(hairpin_options)\n            .setPosition(position)\n            .draw();\n    }\n    /**\n     * Create a new hairpin from the specified notes.\n     *\n     * @param {!Object} notes The notes to tie up.\n     * Notes is a struct that has:\n     *\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *  }\n     * @param {!Object} type The type of hairpin\n     */\n    constructor(notes, type) {\n        super();\n        this.setNotes(notes);\n        this.hairpin = type;\n        this.position = Modifier.Position.BELOW;\n        this.render_options = {\n            height: 10,\n            y_shift: 0,\n            left_shift_px: 0,\n            right_shift_px: 0,\n            right_shift_ticks: 0,\n            left_shift_ticks: 0,\n        };\n    }\n    setPosition(position) {\n        if (position === Modifier.Position.ABOVE || position === Modifier.Position.BELOW) {\n            this.position = position;\n        }\n        return this;\n    }\n    setRenderOptions(options) {\n        if (options.height != null &&\n            options.y_shift != null &&\n            options.left_shift_px != null &&\n            options.right_shift_px != null) {\n            this.render_options = options;\n        }\n        return this;\n    }\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes(notes) {\n        if (!notes.first_note && !notes.last_note) {\n            throw new RuntimeError('BadArguments', 'Hairpin needs to have either first_note or last_note set.');\n        }\n        this.notes = notes;\n        this.first_note = notes.first_note;\n        this.last_note = notes.last_note;\n        return this;\n    }\n    renderHairpin(params) {\n        const ctx = this.checkContext();\n        let dis = this.render_options.y_shift + 20;\n        let y_shift = params.first_y;\n        if (this.position === Modifier.Position.ABOVE) {\n            dis = -dis + 30;\n            y_shift = params.first_y - params.staff_height;\n        }\n        const l_shift = this.render_options.left_shift_px;\n        const r_shift = this.render_options.right_shift_px;\n        ctx.beginPath();\n        switch (this.hairpin) {\n            case StaveHairpin.type.CRESC:\n                ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n                break;\n            case StaveHairpin.type.DECRESC:\n                ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n                ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height / 2 + dis);\n                ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n                break;\n            default:\n                // Default is NONE, so nothing to draw\n                break;\n        }\n        ctx.stroke();\n        ctx.closePath();\n    }\n    draw() {\n        this.checkContext();\n        this.setRendered();\n        const firstNote = this.first_note;\n        const lastNote = this.last_note;\n        if (!firstNote || !lastNote)\n            throw new RuntimeError('NoNote', 'Notes required to draw');\n        const start = firstNote.getModifierStartXY(this.position, 0);\n        const end = lastNote.getModifierStartXY(this.position, 0);\n        this.renderHairpin({\n            first_x: start.x,\n            last_x: end.x,\n            first_y: firstNote.checkStave().getY() + firstNote.checkStave().getHeight(),\n            last_y: lastNote.checkStave().getY() + lastNote.checkStave().getHeight(),\n            staff_height: firstNote.checkStave().getHeight(),\n        });\n    }\n}\nStaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\nimport { Font, FontStyle, FontWeight } from './font';\nimport { TabTie } from './tabtie';\nimport { Category } from './typeguard';\nimport { RuntimeError } from './util';\nexport class TabSlide extends TabTie {\n    static get CATEGORY() {\n        return Category.TabSlide;\n    }\n    static get SLIDE_UP() {\n        return 1;\n    }\n    static get SLIDE_DOWN() {\n        return -1;\n    }\n    static createSlideUp(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_UP);\n    }\n    static createSlideDown(notes) {\n        return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n    }\n    /**\n     * @param notes is a struct of the form:\n     *  {\n     *    first_note: Note,\n     *    last_note: Note,\n     *    first_indices: [n1, n2, n3],\n     *    last_indices: [n1, n2, n3]\n     *  }\n     * @param notes.first_note the starting note of the slide\n     * @param notes.last_note the ending note of the slide\n     * @param notes.first_indices specifies which string + fret positions of the TabNote are used in this slide. zero indexed.\n     * @param notes.last_indices currently unused. we assume it's the same as first_indices.\n     *\n     * @param direction TabSlide.SLIDE_UP or TabSlide.SLIDE_DOWN\n     */\n    constructor(notes, direction) {\n        super(notes, 'sl.');\n        // Determine the direction automatically if it is not provided.\n        if (!direction) {\n            let first_fret = notes.first_note.getPositions()[0].fret;\n            if (typeof first_fret === 'string') {\n                first_fret = parseInt(first_fret, 10);\n            }\n            let last_fret = notes.last_note.getPositions()[0].fret;\n            if (typeof last_fret === 'string') {\n                last_fret = parseInt(last_fret, 10);\n            }\n            // If either of the frets are 'X', parseInt() above will return NaN.\n            // Choose TabSlide.SLIDE_UP by default.\n            if (isNaN(first_fret) || isNaN(last_fret)) {\n                direction = TabSlide.SLIDE_UP;\n            }\n            else {\n                direction = first_fret > last_fret ? TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP;\n            }\n        }\n        this.direction = direction;\n        this.render_options.cp1 = 11;\n        this.render_options.cp2 = 14;\n        this.render_options.y_shift = 0.5;\n        this.resetFont();\n    }\n    renderTie(params) {\n        if (params.first_ys.length === 0 || params.last_ys.length === 0) {\n            throw new RuntimeError('BadArguments', 'No Y-values to render');\n        }\n        const ctx = this.checkContext();\n        const first_x_px = params.first_x_px;\n        const first_ys = params.first_ys;\n        const last_x_px = params.last_x_px;\n        const direction = params.direction;\n        if (direction !== TabSlide.SLIDE_UP && direction !== TabSlide.SLIDE_DOWN) {\n            throw new RuntimeError('BadSlide', 'Invalid slide direction');\n        }\n        // eslint-disable-next-line\n        const first_indices = this.notes.first_indices;\n        for (let i = 0; i < first_indices.length; ++i) {\n            const slide_y = first_ys[first_indices[i]] + this.render_options.y_shift;\n            if (isNaN(slide_y)) {\n                throw new RuntimeError('BadArguments', 'Bad indices for slide rendering.');\n            }\n            ctx.beginPath();\n            ctx.moveTo(first_x_px, slide_y + 3 * direction);\n            ctx.lineTo(last_x_px, slide_y - 3 * direction);\n            ctx.closePath();\n            ctx.stroke();\n        }\n        this.setRendered();\n    }\n}\nTabSlide.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 10,\n    weight: FontWeight.BOLD,\n    style: FontStyle.ITALIC,\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Mike Corrigan <corrigan@gmail.com>\n// MIT License\nimport { Glyph } from './glyph';\nimport { GraceNote } from './gracenote';\nimport { Modifier } from './modifier';\nimport { Note } from './note';\nimport { Stem } from './stem';\nimport { Tables } from './tables';\nimport { Category, isGraceNote } from './typeguard';\n/** Tremolo implements tremolo notation. */\nexport class Tremolo extends Modifier {\n    static get CATEGORY() {\n        return Category.Tremolo;\n    }\n    /**\n     * @param num number of bars\n     */\n    constructor(num) {\n        super();\n        this.num = num;\n        this.position = Modifier.Position.CENTER;\n        this.code = 'tremolo1';\n        // big strokes scales initialised to 1 (no scale)\n        this.y_spacing_scale = 1;\n        this.extra_stroke_scale = 1;\n    }\n    /** Draw the tremolo on the rendering context. */\n    draw() {\n        var _a;\n        const ctx = this.checkContext();\n        const note = this.checkAttachedNote();\n        this.setRendered();\n        const stemDirection = note.getStemDirection();\n        const start = note.getModifierStartXY(this.position, this.index);\n        let x = start.x;\n        const gn = isGraceNote(note);\n        const scale = gn ? GraceNote.SCALE : 1;\n        const category = `tremolo.${gn ? 'grace' : 'default'}`;\n        const musicFont = Tables.currentMusicFont();\n        let y_spacing = musicFont.lookupMetric(`${category}.spacing`) * stemDirection;\n        // add y_spacing_scale for big strokes (#1258)\n        y_spacing *= this.y_spacing_scale;\n        const height = this.num * y_spacing;\n        let y = note.getStemExtents().baseY - height;\n        if (stemDirection < 0) {\n            y += musicFont.lookupMetric(`${category}.offsetYStemDown`) * scale;\n        }\n        else {\n            y += musicFont.lookupMetric(`${category}.offsetYStemUp`) * scale;\n        }\n        const fontScale = (_a = musicFont.lookupMetric(`${category}.point`)) !== null && _a !== void 0 ? _a : Note.getPoint(gn ? 'grace' : 'default');\n        x += musicFont.lookupMetric(`${category}.offsetXStem${stemDirection === Stem.UP ? 'Up' : 'Down'}`);\n        for (let i = 0; i < this.num; ++i) {\n            Glyph.renderGlyph(ctx, x, y, fontScale, this.code, { category, scale: this.extra_stroke_scale });\n            y += y_spacing;\n        }\n    }\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Tables } from './tables';\nimport { RuntimeError } from './util';\n/** `Tuning` implements varies types of tunings for tablature. */\nexport class Tuning {\n    static get names() {\n        return {\n            standard: 'E/5,B/4,G/4,D/4,A/3,E/3',\n            dagdad: 'D/5,A/4,G/4,D/4,A/3,D/3',\n            dropd: 'E/5,B/4,G/4,D/4,A/3,D/3',\n            eb: 'Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3',\n            standardBanjo: 'D/5,B/4,G/4,D/4,G/5',\n            doubleCBanjo: 'D/5,C/5,G/4,C/4,G/5',\n            doubleDBanjo: 'E/5,D/5,A/4,D/4,A/5',\n            sawmillBanjo: 'D/5,C/5,G/4,D/4,G/5',\n        };\n    }\n    /**\n     * Constructor.\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    constructor(tuningString = 'E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2') {\n        this.tuningValues = [];\n        // Default to standard tuning.\n        this.setTuning(tuningString);\n    }\n    /** Return the note number associated to the note string. */\n    noteToInteger(noteString) {\n        var _a;\n        return (_a = Tables.keyProperties(noteString).int_value) !== null && _a !== void 0 ? _a : -1;\n    }\n    /**\n     * Set tuning identified by tuning name (eg. 'dagdad')\n     * @param tuningString tuning name (eg. 'dagdad') or comma separated note strings\n     */\n    setTuning(tuningString) {\n        if (Tuning.names[tuningString]) {\n            tuningString = Tuning.names[tuningString];\n        }\n        this.tuningValues = [];\n        const keys = tuningString.split(/\\s*,\\s*/);\n        if (keys.length === 0) {\n            throw new RuntimeError('BadArguments', `Invalid tuning string: ${tuningString}`);\n        }\n        for (let i = 0; i < keys.length; ++i) {\n            this.tuningValues[i] = this.noteToInteger(keys[i]);\n        }\n    }\n    /** Return the note number associated with a tablature string. */\n    getValueForString(stringNum) {\n        const s = Number(stringNum);\n        if (s < 1 || s > this.tuningValues.length) {\n            throw new RuntimeError('BadArguments', `String number must be between 1 and ${this.tuningValues.length}:${stringNum}`);\n        }\n        return this.tuningValues[s - 1];\n    }\n    /** Return the note number associated with a tablature string and fret. */\n    getValueForFret(fretNum, stringNum) {\n        const stringValue = this.getValueForString(stringNum);\n        const f = Number(fretNum);\n        if (f < 0) {\n            throw new RuntimeError('BadArguments', `Fret number must be 0 or higher: ${fretNum}`);\n        }\n        return stringValue + f;\n    }\n    /** Return the note string associated with tablature string and fret. */\n    getNoteForFret(fretNum, stringNum) {\n        const noteValue = this.getValueForFret(fretNum, stringNum);\n        const octave = Math.floor(noteValue / 12);\n        const value = noteValue % 12;\n        return `${Tables.integerToNote(value)}/${octave}`;\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Accidental } from './accidental';\nimport { Annotation, AnnotationHorizontalJustify, AnnotationVerticalJustify } from './annotation';\nimport { Articulation } from './articulation';\nimport { BarNote } from './barnote';\nimport { Beam } from './beam';\nimport { Bend } from './bend';\nimport { BoundingBox } from './boundingbox';\nimport { BoundingBoxComputation } from './boundingboxcomputation';\nimport { CanvasContext } from './canvascontext';\nimport { ChordSymbol, ChordSymbolHorizontalJustify, ChordSymbolVerticalJustify, SymbolModifiers, SymbolTypes, } from './chordsymbol';\nimport { Clef } from './clef';\nimport { ClefNote } from './clefnote';\nimport { Crescendo } from './crescendo';\nimport { Curve, CurvePosition } from './curve';\nimport { Dot } from './dot';\nimport { EasyScore } from './easyscore';\nimport { Element } from './element';\nimport { Factory } from './factory';\nimport { Font, FontStyle, FontWeight } from './font';\nimport { Formatter } from './formatter';\nimport { Fraction } from './fraction';\nimport { FretHandFinger } from './frethandfinger';\nimport { GhostNote } from './ghostnote';\nimport { Glyph } from './glyph';\nimport { GlyphNote } from './glyphnote';\nimport { GraceNote } from './gracenote';\nimport { GraceNoteGroup } from './gracenotegroup';\nimport { GraceTabNote } from './gracetabnote';\nimport { KeyManager } from './keymanager';\nimport { KeySignature } from './keysignature';\nimport { KeySigNote } from './keysignote';\nimport { Modifier, ModifierPosition } from './modifier';\nimport { ModifierContext } from './modifiercontext';\nimport { MultiMeasureRest } from './multimeasurerest';\nimport { Music } from './music';\nimport { Note } from './note';\nimport { NoteHead } from './notehead';\nimport { NoteSubGroup } from './notesubgroup';\nimport { Ornament } from './ornament';\nimport { Parenthesis } from './parenthesis';\nimport { Parser } from './parser';\nimport { PedalMarking } from './pedalmarking';\nimport { Registry } from './registry';\nimport { RenderContext } from './rendercontext';\nimport { Renderer, RendererBackends, RendererLineEndType } from './renderer';\nimport { RepeatNote } from './repeatnote';\nimport { Stave } from './stave';\nimport { Barline, BarlineType } from './stavebarline';\nimport { StaveConnector } from './staveconnector';\nimport { StaveHairpin } from './stavehairpin';\nimport { StaveLine } from './staveline';\nimport { StaveModifier, StaveModifierPosition } from './stavemodifier';\nimport { StaveNote } from './stavenote';\nimport { Repetition } from './staverepetition';\nimport { StaveTempo } from './stavetempo';\nimport { StaveText } from './stavetext';\nimport { StaveTie } from './stavetie';\nimport { Volta, VoltaType } from './stavevolta';\nimport { Stem } from './stem';\nimport { StringNumber } from './stringnumber';\nimport { Stroke } from './strokes';\nimport { SVGContext } from './svgcontext';\nimport { System } from './system';\nimport { Tables } from './tables';\nimport { TabNote } from './tabnote';\nimport { TabSlide } from './tabslide';\nimport { TabStave } from './tabstave';\nimport { TabTie } from './tabtie';\nimport { TextBracket, TextBracketPosition } from './textbracket';\nimport { TextDynamics } from './textdynamics';\nimport { TextFormatter } from './textformatter';\nimport { TextJustification, TextNote } from './textnote';\nimport { TickContext } from './tickcontext';\nimport { TimeSignature } from './timesignature';\nimport { TimeSigNote } from './timesignote';\nimport { Tremolo } from './tremolo';\nimport { Tuning } from './tuning';\nimport { Tuplet } from './tuplet';\nimport { DATE, ID, VERSION } from './version';\nimport { Vibrato } from './vibrato';\nimport { VibratoBracket } from './vibratobracket';\nimport { Voice, VoiceMode } from './voice';\nexport class Flow {\n    static get BUILD() {\n        return {\n            /** version number. */\n            VERSION: VERSION,\n            /** git commit ID that this library was built from. */\n            ID: ID,\n            /** The date when this library was compiled. */\n            DATE: DATE,\n        };\n    }\n    /**\n     * Examples:\n     * ```\n     * Vex.Flow.setMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Bravura', 'Gonville');\n     * ```\n     *\n     * **CASE 1**: You are using `vexflow.js`, which includes all music fonts (Bravura, Gonville, Petaluma, Custom).\n     * In this case, calling this method is optional, since VexFlow already defaults to a music font stack of:\n     * 'Bravura', 'Gonville', 'Custom'.\n     *\n     * **CASE 2**: You are using `vexflow-bravura.js` or `vexflow-petaluma.js` or `vexflow-gonville.js`,\n     * which includes a single music font. Calling this method is unnecessary.\n     *\n     * **CASE 3**: You are using the light weight `vexflow-core.js` to take advantage of lazy loading for fonts.\n     * In this case, the default music font stack is empty.\n     * Example:\n     * ```\n     * await Vex.Flow.fetchMusicFont('Petaluma');\n     * Vex.Flow.setMusicFont('Petaluma');\n     * ... (do VexFlow stuff) ...\n     * ```\n     * See `demos/fonts/` for more examples.\n     *\n     * @returns an array of Font objects corresponding to the provided `fontNames`.\n     */\n    static setMusicFont(...fontNames) {\n        // Convert the array of font names into an array of Font objects.\n        const fonts = fontNames.map((fontName) => Font.load(fontName));\n        Tables.MUSIC_FONT_STACK = fonts;\n        Glyph.MUSIC_FONT_STACK = fonts.slice();\n        Glyph.CURRENT_CACHE_KEY = fontNames.join(',');\n        return fonts;\n    }\n    /**\n     * Used with vexflow-core which supports dynamic font loading.\n     */\n    // eslint-disable-next-line\n    static fetchMusicFont(fontName, fontModuleOrPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // The default implementation does nothing.\n            // See vexflow-core.ts for the implementation that vexflow-core.js uses.\n        });\n    }\n    static getMusicFont() {\n        const fonts = Tables.MUSIC_FONT_STACK;\n        return fonts.map((font) => font.getName());\n    }\n    static getMusicFontStack() {\n        return Tables.MUSIC_FONT_STACK;\n    }\n    static get RENDER_PRECISION_PLACES() {\n        return Tables.RENDER_PRECISION_PLACES;\n    }\n    static set RENDER_PRECISION_PLACES(precision) {\n        Tables.RENDER_PRECISION_PLACES = precision;\n    }\n    static get SOFTMAX_FACTOR() {\n        return Tables.SOFTMAX_FACTOR;\n    }\n    static set SOFTMAX_FACTOR(factor) {\n        Tables.SOFTMAX_FACTOR = factor;\n    }\n    static get NOTATION_FONT_SCALE() {\n        return Tables.NOTATION_FONT_SCALE;\n    }\n    static set NOTATION_FONT_SCALE(value) {\n        Tables.NOTATION_FONT_SCALE = value;\n    }\n    static get TABLATURE_FONT_SCALE() {\n        return Tables.TABLATURE_FONT_SCALE;\n    }\n    static set TABLATURE_FONT_SCALE(value) {\n        Tables.TABLATURE_FONT_SCALE = value;\n    }\n    static get RESOLUTION() {\n        return Tables.RESOLUTION;\n    }\n    static set RESOLUTION(value) {\n        Tables.RESOLUTION = value;\n    }\n    static get SLASH_NOTEHEAD_WIDTH() {\n        return Tables.SLASH_NOTEHEAD_WIDTH;\n    }\n    static set SLASH_NOTEHEAD_WIDTH(value) {\n        Tables.SLASH_NOTEHEAD_WIDTH = value;\n    }\n    static get STAVE_LINE_DISTANCE() {\n        return Tables.STAVE_LINE_DISTANCE;\n    }\n    static set STAVE_LINE_DISTANCE(value) {\n        Tables.STAVE_LINE_DISTANCE = value;\n    }\n    static get STAVE_LINE_THICKNESS() {\n        return Tables.STAVE_LINE_THICKNESS;\n    }\n    static set STAVE_LINE_THICKNESS(value) {\n        Tables.STAVE_LINE_THICKNESS = value;\n    }\n    static get STEM_HEIGHT() {\n        return Tables.STEM_HEIGHT;\n    }\n    static set STEM_HEIGHT(value) {\n        Tables.STEM_HEIGHT = value;\n    }\n    static get STEM_WIDTH() {\n        return Tables.STEM_WIDTH;\n    }\n    static set STEM_WIDTH(value) {\n        Tables.STEM_WIDTH = value;\n    }\n    static get TIME4_4() {\n        return Tables.TIME4_4;\n    }\n    static get accidentalMap() {\n        return Tables.accidentalMap;\n    }\n    static get unicode() {\n        return Tables.unicode;\n    }\n    static keySignature(spec) {\n        return Tables.keySignature(spec);\n    }\n    static hasKeySignature(spec) {\n        return Tables.hasKeySignature(spec);\n    }\n    static getKeySignatures() {\n        return Tables.getKeySignatures();\n    }\n    static clefProperties(clef) {\n        return Tables.clefProperties(clef);\n    }\n    // eslint-disable-next-line\n    static keyProperties(key, clef, params) {\n        return Tables.keyProperties(key, clef, params);\n    }\n    static durationToTicks(duration) {\n        return Tables.durationToTicks(duration);\n    }\n}\nFlow.Accidental = Accidental;\nFlow.Annotation = Annotation;\nFlow.Articulation = Articulation;\nFlow.Barline = Barline;\nFlow.BarNote = BarNote;\nFlow.Beam = Beam;\nFlow.Bend = Bend;\nFlow.BoundingBox = BoundingBox;\nFlow.BoundingBoxComputation = BoundingBoxComputation;\nFlow.CanvasContext = CanvasContext;\nFlow.ChordSymbol = ChordSymbol;\nFlow.Clef = Clef;\nFlow.ClefNote = ClefNote;\nFlow.Crescendo = Crescendo;\nFlow.Curve = Curve;\nFlow.Dot = Dot;\nFlow.EasyScore = EasyScore;\nFlow.Element = Element;\nFlow.Factory = Factory;\nFlow.Font = Font;\nFlow.Formatter = Formatter;\nFlow.Fraction = Fraction;\nFlow.FretHandFinger = FretHandFinger;\nFlow.GhostNote = GhostNote;\nFlow.Glyph = Glyph;\nFlow.GlyphNote = GlyphNote;\nFlow.GraceNote = GraceNote;\nFlow.GraceNoteGroup = GraceNoteGroup;\nFlow.GraceTabNote = GraceTabNote;\nFlow.KeyManager = KeyManager;\nFlow.KeySignature = KeySignature;\nFlow.KeySigNote = KeySigNote;\nFlow.Modifier = Modifier;\nFlow.ModifierContext = ModifierContext;\nFlow.MultiMeasureRest = MultiMeasureRest;\nFlow.Music = Music;\nFlow.Note = Note;\nFlow.NoteHead = NoteHead;\nFlow.NoteSubGroup = NoteSubGroup;\nFlow.Ornament = Ornament;\nFlow.Parenthesis = Parenthesis;\nFlow.Parser = Parser;\nFlow.PedalMarking = PedalMarking;\nFlow.Registry = Registry;\nFlow.RenderContext = RenderContext;\nFlow.Renderer = Renderer;\nFlow.RepeatNote = RepeatNote;\nFlow.Repetition = Repetition;\nFlow.Stave = Stave;\nFlow.StaveConnector = StaveConnector;\nFlow.StaveHairpin = StaveHairpin;\nFlow.StaveLine = StaveLine;\nFlow.StaveModifier = StaveModifier;\nFlow.StaveNote = StaveNote;\nFlow.StaveTempo = StaveTempo;\nFlow.StaveText = StaveText;\nFlow.StaveTie = StaveTie;\nFlow.Stem = Stem;\nFlow.StringNumber = StringNumber;\nFlow.Stroke = Stroke;\nFlow.SVGContext = SVGContext;\nFlow.System = System;\nFlow.TabNote = TabNote;\nFlow.TabSlide = TabSlide;\nFlow.TabStave = TabStave;\nFlow.TabTie = TabTie;\nFlow.TextBracket = TextBracket;\nFlow.TextDynamics = TextDynamics;\nFlow.TextFormatter = TextFormatter;\nFlow.TextNote = TextNote;\nFlow.TickContext = TickContext;\nFlow.TimeSignature = TimeSignature;\nFlow.TimeSigNote = TimeSigNote;\nFlow.Tremolo = Tremolo;\nFlow.Tuning = Tuning;\nFlow.Tuplet = Tuplet;\nFlow.Vibrato = Vibrato;\nFlow.VibratoBracket = VibratoBracket;\nFlow.Voice = Voice;\nFlow.Volta = Volta;\n// Exported Enums.\n// Sorted by the module / file they are exported from.\nFlow.AnnotationHorizontalJustify = AnnotationHorizontalJustify;\nFlow.AnnotationVerticalJustify = AnnotationVerticalJustify;\nFlow.ChordSymbolHorizontalJustify = ChordSymbolHorizontalJustify;\nFlow.ChordSymbolVerticalJustify = ChordSymbolVerticalJustify;\nFlow.SymbolTypes = SymbolTypes;\nFlow.SymbolModifiers = SymbolModifiers;\nFlow.CurvePosition = CurvePosition;\nFlow.FontWeight = FontWeight;\nFlow.FontStyle = FontStyle;\nFlow.ModifierPosition = ModifierPosition;\nFlow.RendererBackends = RendererBackends;\nFlow.RendererLineEndType = RendererLineEndType;\nFlow.BarlineType = BarlineType;\nFlow.StaveModifierPosition = StaveModifierPosition;\nFlow.VoltaType = VoltaType;\nFlow.TextBracketPosition = TextBracketPosition;\nFlow.TextJustification = TextJustification;\nFlow.VoiceMode = VoiceMode;\n","export const VERSION = '4.2.6';\nexport const ID = 'dcb5c922ed0631e41d51b600541bc1ffc7b0a213';\nexport const DATE = '2025-01-25T00:18:44.444Z';\n","export const CommonMetrics = {\n    smufl: true,\n    stave: {\n        padding: 12,\n        endPaddingMax: 10,\n        endPaddingMin: 5,\n        unalignedNotePadding: 10,\n    },\n    accidental: {\n        noteheadAccidentalPadding: 1,\n        leftPadding: 2,\n        accidentalSpacing: 3,\n    },\n    chordSymbol: {\n        global: {\n            superscriptOffset: -400,\n            subscriptOffset: 300,\n            kerningOffset: -250,\n            lowerKerningText: ['D', 'F', 'P', 'T', 'V', 'Y'],\n            upperKerningText: ['A', 'L'],\n            spacing: 100,\n            superSubRatio: 0.66,\n        },\n        glyphs: {\n            csymDiminished: {\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymHalfDiminished: {\n                leftSideBearing: -32,\n                advanceWidth: 506,\n                yOffset: 0,\n            },\n            csymAugmented: {\n                leftSideBearing: 0,\n                advanceWidth: 530,\n                yOffset: 0,\n            },\n            csymParensLeftTall: {\n                leftSideBearing: -20,\n                advanceWidth: 184,\n                yOffset: 250,\n            },\n            csymParensRightTall: {\n                leftSideBearing: 0,\n                advanceWidth: 189,\n                yOffset: 250,\n            },\n            csymBracketLeftTall: {\n                leftSideBearing: 0,\n                advanceWidth: 328,\n                yOffset: 0,\n            },\n            csymBracketRightTall: {\n                leftSideBearing: 1,\n                advanceWidth: 600,\n                yOffset: 0,\n            },\n            csymParensLeftVeryTall: {\n                leftSideBearing: 50,\n                advanceWidth: 121,\n                yOffset: 350,\n            },\n            csymParensRightVeryTall: {\n                leftSideBearing: 0,\n                advanceWidth: 111,\n                yOffset: 350,\n            },\n            csymDiagonalArrangementSlash: {\n                leftSideBearing: 250,\n                advanceWidth: 990,\n                yOffset: 300,\n            },\n            csymMinor: {\n                leftSideBearing: 0,\n                advanceWidth: 482,\n                yOffset: 0,\n            },\n            csymMajorSeventh: {\n                leftSideBearing: 200,\n                yOffset: 0,\n                advanceWidth: 600,\n            },\n            accidentalSharp: {\n                leftSideBearing: 20,\n                advanceWidth: 250,\n                yOffset: -302,\n            },\n            accidentalFlat: {\n                leftSideBearing: -20,\n                advanceWidth: 226,\n                yOffset: -184,\n            },\n        },\n    },\n    clef_default: {\n        width: 26,\n        annotations: {\n            '8va': {\n                treble: {\n                    line: -2,\n                    shiftX: 12,\n                },\n            },\n            '8vb': {\n                treble: {\n                    line: 6.5,\n                    shiftX: 10,\n                },\n                bass: {\n                    line: 4,\n                    shiftX: 1,\n                },\n            },\n        },\n    },\n    clef_small: {\n        width: 20,\n        annotations: {\n            '8va': {\n                treble: {\n                    line: -0.2,\n                    shiftX: 8,\n                },\n            },\n            '8vb': {\n                treble: {\n                    line: 5.3,\n                    shiftX: 6,\n                },\n                bass: {\n                    line: 3.1,\n                    shiftX: 0.5,\n                },\n            },\n        },\n    },\n    ornament: {\n        brassScoop: {\n            xOffset: -12,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 20,\n        },\n        brassDoitMedium: {\n            xOffset: 16,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 22,\n        },\n        brassFallLipShort: {\n            xOffset: 16,\n            yOffset: 0,\n            stemUpYOffset: 0,\n            reportedWidth: 15,\n        },\n        brassLiftMedium: {\n            xOffset: 16,\n            yOffset: 5,\n            stemUpYOffset: 0,\n            reportedWidth: 5,\n        },\n        brassFallRoughMedium: {\n            xOffset: 16,\n            yOffset: 28,\n            stemUpYOffset: 0,\n            reportedWidth: 5,\n        },\n        brassBend: {\n            xOffset: 2,\n            yOffset: -8,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassMuteClosed: {\n            xOffset: 3,\n            yOffset: -8,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassMuteOpen: {\n            xOffset: 3,\n            yOffset: -7,\n            stemUpYOffset: 25,\n            reportedWidth: 5,\n        },\n        brassFlip: {\n            xOffset: 10,\n            yOffset: 0,\n            stemUpYOffset: 7,\n            reportedWidth: 10,\n        },\n        brassJazzTurn: {\n            xOffset: 0,\n            yOffset: 0,\n            stemUpYOffset: 8,\n            reportedWidth: 31,\n        },\n        brassSmear: {\n            xOffset: 10,\n            yOffset: 0,\n            stemUpYOffset: 8,\n            reportedWidth: 5,\n        },\n    },\n    parenthesis: {\n        default: {\n            width: 7,\n        },\n        gracenote: {\n            width: 3,\n        },\n    },\n    pedalMarking: {},\n    // These are for numeric digits, such as in time signatures\n    digits: {\n        // used by TimeSignature objects\n        shiftLine: -1,\n        // used by tuplets\n        shiftY: -6,\n    },\n    articulation: {\n        articStaccatissimoAbove: {\n            padding: 2,\n        },\n        articStaccatissimoBelow: {\n            padding: 2,\n        },\n    },\n    tremolo: {\n        default: {\n            spacing: 7,\n            offsetYStemUp: -8,\n            offsetYStemDown: 8,\n            offsetXStemUp: 11,\n            offsetXStemDown: 1,\n        },\n        grace: {\n            spacing: (7 * 3) / 5,\n            offsetYStemUp: -(8 * 3) / 5,\n            offsetYStemDown: (8 * 3) / 5,\n            offsetXStemUp: 7,\n            offsetXStemDown: 1,\n        },\n    },\n    staveRepetition: {\n        symbolText: {\n            offsetX: 12,\n            offsetY: 25,\n            spacing: 5,\n        },\n        coda: {\n            offsetY: 25,\n        },\n        segno: {\n            offsetY: 10,\n        },\n    },\n    noteHead: {\n        minPadding: 2,\n    },\n    stem: {\n        heightAdjustmentForFlag: -3,\n        // These are stem (Y) offsets to the note heads. To shift the\n        // noteheads (x-position) themselves, see glyphs.notehead.custom.\n        noteHead: {\n            noteheadTriangleUpHalf: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpBlack: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadTriangleUpWhole: {\n                offsetYBaseStemUp: 5,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXHalf: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXBlack: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadXWhole: {\n                offsetYBaseStemUp: -4,\n                offsetYBaseStemDown: 4,\n            },\n            noteheadHalf: {\n                offsetYBaseStemUp: -2.55,\n                offsetYBaseStemDown: 2.65,\n            },\n            noteheadBlack: {\n                offsetYBaseStemUp: -2,\n                offsetYBaseStemDown: 2,\n            },\n            noteheadSquareWhite: {\n                offsetYBaseStemDown: -5,\n                offsetYBaseStemUp: 5,\n            },\n        },\n    },\n    stringNumber: {\n        verticalPadding: 8,\n        stemPadding: 2,\n        leftPadding: 5,\n        rightPadding: 6,\n    },\n    tuplet: {\n        noteHeadOffset: 20,\n        stemOffset: 10,\n        bottomLine: 4,\n        topModifierOffset: 15,\n    },\n    // Values under here are used by the Glyph class to reposition and rescale\n    // glyphs based on their category. This should be the first stop for\n    // custom font glyph repositioning.\n    //\n    // The glyph loader first looks up a specific set of settings based on the\n    // glyph code, and if not found, uses the defaults from the category. See\n    // glyphs.textNote for an example of this.\n    //\n    // Details in Glyph.lookupFontMetrics.\n    glyphs: {\n        coda: {\n            shiftX: -7,\n            shiftY: 8,\n        },\n        segno: {\n            shiftX: -7,\n        },\n        flag: {\n            shiftX: -0.75,\n            staveTempo: {\n                shiftX: -1,\n            },\n        },\n        clef_default: {},\n        clef_small: {\n            gClef: {\n                shiftY: 1.5,\n            },\n        },\n        clefNote_default: {},\n        clefNote_small: {},\n        stroke_straight: {\n            arrowheadBlackDown: {\n                shiftX: -4.5,\n            },\n            arrowheadBlackUp: {\n                shiftX: -0.85,\n            },\n        },\n        stroke_wiggly: {\n            arrowheadBlackDown: {\n                shiftX: -1,\n                shiftY: 1,\n            },\n            arrowheadBlackUp: {\n                shiftX: -1,\n                shiftY: 1,\n            },\n        },\n        textNote: {\n            breathMarkTick: {\n                shiftY: 9,\n            },\n            breathMarkComma: {},\n            segno: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            coda: {\n                shiftX: -7,\n                shiftY: 8,\n            },\n            ornamentTrill: {\n                shiftX: -8,\n                shiftY: 8,\n            },\n            ornamentTurn: {},\n            ornamentTurnSlash: {},\n            ornamentMordent: {\n                shiftX: -8,\n            },\n            ornamentShortTrill: {\n                shiftX: -8,\n            },\n        },\n        noteHead: {},\n        chordSymbol: {\n            scale: 0.8,\n        },\n    },\n};\n","export const CustomFont = {\n    resolution: 1000,\n    fontFamily: 'VexFlowCustom',\n    glyphs: {\n        vexAccidentalMicrotonal1: {\n            x_min: -171.5,\n            x_max: 483.1875,\n            ha: 493,\n            o: 'm -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 ',\n        },\n        vexAccidentalMicrotonal3: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm -146 537 b -138 538 -143 538 -141 538 b -118 525 -129 538 -121 533 b -117 390 -117 522 -117 521 b -115 259 -117 268 -117 259 b -115 259 -115 259 -115 259 b -59 272 -104 263 -62 272 b -39 259 -50 272 -42 267 b -37 209 -38 257 -37 233 b -39 159 -37 185 -38 162 b -85 138 -43 149 -44 149 l -117 131 l -117 21 b -115 -88 -117 -80 -117 -88 b -115 -88 -115 -88 -115 -88 b -59 -75 -104 -84 -62 -75 b -44 -81 -52 -75 -48 -77 b -38 -124 -38 -87 -38 -85 b -38 -138 -38 -124 -38 -138 b -38 -152 -38 -138 -38 -152 b -44 -195 -38 -191 -38 -190 b -85 -209 -48 -200 -48 -200 l -117 -217 l -117 -349 b -118 -486 -117 -481 -117 -482 b -138 -499 -121 -494 -129 -499 b -153 -493 -143 -499 -149 -497 b -159 -415 -158 -487 -159 -496 b -159 -355 -159 -398 -159 -379 b -159 -227 -159 -284 -159 -227 b -205 -238 -159 -227 -180 -232 b -250 -249 -230 -244 -250 -249 b -251 -386 -251 -249 -251 -311 b -252 -525 -251 -521 -251 -522 b -272 -538 -255 -534 -264 -538 b -287 -532 -277 -538 -283 -536 b -293 -452 -292 -527 -293 -536 b -293 -391 -293 -436 -293 -415 b -294 -260 -293 -269 -293 -260 b -294 -260 -294 -260 -294 -260 b -348 -272 -306 -264 -345 -272 b -368 -259 -357 -272 -365 -267 b -369 -209 -369 -257 -369 -233 b -368 -159 -369 -185 -369 -162 b -323 -139 -364 -149 -362 -148 l -293 -131 l -293 -22 b -294 87 -293 80 -293 87 b -294 87 -294 87 -294 87 b -348 75 -306 84 -345 75 b -368 88 -357 75 -365 80 b -369 138 -369 91 -369 114 b -368 188 -369 162 -369 186 b -323 209 -364 198 -362 199 l -293 216 l -293 349 b -292 486 -293 481 -293 482 b -272 499 -288 494 -280 499 b -257 493 -266 499 -261 497 b -251 414 -251 487 -251 496 b -251 354 -251 398 -251 378 b -251 226 -251 284 -251 226 b -205 238 -250 226 -230 231 b -159 249 -180 244 -159 249 b -159 385 -159 249 -159 310 b -157 525 -159 521 -159 522 b -146 537 -156 530 -151 535 z m -159 11 b -159 120 -159 98 -159 120 l -159 120 b -175 116 -160 120 -167 119 b -221 105 -184 114 -204 109 l -251 98 l -251 -12 b -251 -121 -251 -72 -251 -121 b -205 -110 -250 -121 -230 -116 b -159 -99 -180 -104 -159 -99 b -159 11 -159 -99 -159 -49 z m 89 517 b 97 519 92 518 94 519 b 117 505 106 519 114 513 b 119 376 119 502 119 501 l 119 249 l 145 258 b 176 267 169 266 172 267 b 177 267 176 267 177 267 b 196 255 186 267 192 263 l 197 252 l 197 205 b 197 181 197 195 197 187 b 193 149 197 153 197 153 b 152 131 190 144 187 143 l 119 120 l 119 10 b 119 -100 119 -62 119 -100 b 145 -91 120 -100 131 -96 b 173 -82 159 -86 171 -82 b 176 -81 174 -81 175 -81 b 196 -94 185 -81 193 -87 b 198 -151 197 -97 198 -125 b 197 -194 198 -172 197 -192 b 153 -218 193 -203 192 -204 l 119 -230 l 119 -367 l 118 -504 l 117 -507 b 97 -519 113 -514 105 -519 b 82 -512 92 -519 87 -517 b 76 -434 77 -507 76 -516 b 76 -374 76 -418 76 -398 b 76 -245 76 -303 76 -245 b 52 -254 76 -245 65 -249 b 19 -263 34 -260 25 -263 b 6 -257 13 -263 10 -261 b 0 -214 0 -251 0 -253 b 0 -200 0 -210 0 -205 b 0 -188 0 -196 0 -192 b 6 -143 0 -147 0 -149 b 46 -126 10 -139 10 -139 l 76 -115 l 76 -5 b 76 106 76 56 76 106 b 51 98 76 106 64 102 b 18 89 34 92 25 89 b 6 95 13 89 10 91 b 0 139 0 101 0 99 b 0 153 0 143 0 148 b 0 179 0 163 0 172 b 44 225 0 215 3 211 l 76 236 l 76 369 b 78 505 76 501 76 502 b 89 517 80 510 85 515 z ',\n        },\n        vexAccidentalMicrotonal4: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 283 633 b 291 634 286 634 289 634 b 311 621 300 634 308 629 b 313 505 313 618 313 617 b 313 393 313 443 313 393 b 378 425 313 393 343 407 l 443 458 l 448 458 b 449 458 449 458 449 458 b 471 437 462 458 471 448 b 469 429 471 434 470 432 b 387 382 466 421 469 423 l 313 344 l 313 247 l 313 150 l 315 152 b 433 201 353 184 394 201 b 479 193 448 201 464 198 b 549 86 524 177 549 135 b 526 1 549 59 541 29 b 395 -143 504 -39 475 -71 b 316 -214 351 -182 341 -191 b 292 -229 302 -228 300 -229 b 272 -216 283 -229 275 -224 b 271 55 271 -212 271 -212 b 270 323 271 203 270 323 b 205 291 270 323 241 308 l 140 258 l 135 258 b 134 258 135 258 134 258 b 112 279 121 258 112 267 b 114 287 112 281 113 284 b 196 334 117 295 114 293 l 271 371 l 271 495 b 272 621 271 617 271 618 b 283 633 274 626 279 631 z m 404 133 b 391 134 400 134 395 134 b 384 134 388 134 386 134 b 318 88 358 130 335 114 l 313 81 l 313 -37 l 313 -156 l 316 -152 b 439 83 391 -71 439 22 l 439 84 b 404 133 439 115 430 128 z m -8 633 l -8 633 b 0 634 -6 634 -3 634 b 20 621 8 634 17 629 b 21 384 21 618 21 617 l 21 150 l 24 152 b 141 201 62 184 102 201 b 187 193 157 201 172 198 b 257 86 232 177 257 135 b 234 1 257 59 250 29 b 103 -143 212 -39 183 -71 b 24 -214 60 -182 49 -191 b 0 -229 10 -228 8 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 203 l -21 618 l -20 621 b -8 633 -18 626 -13 631 z m 113 133 l 113 133 b 99 134 109 134 103 134 b 93 134 97 134 94 134 b 26 88 66 130 43 114 l 21 81 l 21 -37 l 21 -156 l 25 -152 b 148 83 99 -71 148 22 l 148 84 b 113 133 148 115 138 128 z ',\n        },\n        vexNoteHeadRectBlack: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 ',\n        },\n        vexNoteHeadRectWhite: {\n            x_min: 0,\n            x_max: 430.75,\n            ha: 360,\n            o: 'm 0 150 l 0 -150 l 430 -150 l 430 150 l 0 150 l 50 100 l 380 100 l 380 -100 l 50 -100 l 50 100',\n        },\n        vexWiggleArpeggioUp: {\n            x_min: 58.53125,\n            x_max: 228.671875,\n            ha: 294,\n            o: 'm 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 ',\n        },\n    },\n};\n","export const LelandFont = {\n    glyphs: {\n        bracketTop: {\n            x_min: 0,\n            x_max: 491,\n            y_min: 0,\n            y_max: 279,\n            ha: 279,\n            o: 'm 697 399 b 687 402 694 400 690 402 b 671 395 681 402 674 400 b 249 168 668 390 524 168 l 20 168 b 0 150 9 168 0 161 l 0 20 l 0 0 l 176 0 b 706 374 619 0 704 370 b 707 382 706 376 707 379 b 697 399 707 389 703 395 z',\n        },\n        bracketBottom: {\n            x_min: 0,\n            x_max: 491,\n            y_min: -279,\n            y_max: 0,\n            ha: 279,\n            o: 'm 697 -399 b 707 -382 703 -395 707 -389 b 706 -374 707 -379 706 -376 b 176 0 704 -370 619 0 l 0 0 l 0 -20 l 0 -150 b 20 -168 0 -161 9 -168 l 249 -168 b 671 -395 524 -168 668 -390 b 687 -402 674 -400 681 -402 b 697 -399 690 -402 694 -400 z',\n        },\n        segno: {\n            x_min: 0,\n            x_max: 654,\n            y_min: 0,\n            y_max: 869,\n            ha: 869,\n            o: 'm 546 690 l 838 1207 b 841 1215 840 1210 841 1212 b 832 1233 841 1221 837 1230 l 809 1248 b 798 1251 806 1250 801 1251 b 780 1241 792 1251 783 1247 l 487 721 l 217 860 b 99 995 147 897 99 924 b 236 1165 99 1120 179 1165 b 343 1073 288 1165 325 1130 b 454 988 357 1022 405 988 b 477 991 461 988 469 989 b 541 1076 526 1002 541 1045 b 540 1089 541 1080 541 1084 b 294 1225 534 1116 514 1225 b 0 939 72 1225 0 1053 b 125 706 0 825 42 753 l 397 563 l 104 45 b 102 35 102 42 102 37 b 111 19 102 29 107 22 l 132 3 b 144 0 135 1 141 0 b 148 0 145 0 147 0 b 161 10 153 1 158 6 l 456 531 l 704 403 b 842 256 780 361 842 318 b 706 86 842 131 763 86 b 599 177 654 86 616 120 b 488 262 585 228 537 262 b 465 259 481 262 472 261 b 402 177 418 248 402 206 b 403 163 402 171 402 167 b 649 26 409 135 429 26 b 942 312 871 26 942 199 b 821 549 942 426 901 507 z m 52 444 b 118 416 69 426 95 416 b 183 444 141 416 166 426 b 210 508 200 461 210 485 b 183 573 210 531 200 556 b 118 600 166 590 141 600 b 52 573 95 600 69 590 b 24 508 35 556 24 531 b 52 444 24 485 35 461 z m 760 730 b 825 703 778 713 802 703 b 890 730 848 703 873 713 b 917 795 907 747 917 772 b 890 861 917 818 907 844 b 825 888 873 878 848 888 b 760 861 802 888 778 878 b 733 795 743 844 733 818 b 760 730 733 772 743 747 z',\n        },\n        coda: {\n            x_min: 0,\n            x_max: 745,\n            y_min: -113,\n            y_max: 735,\n            ha: 848,\n            o: 'm 924 467 b 560 896 916 697 757 881 l 560 1038 b 540 1058 560 1050 552 1058 l 524 1058 b 505 1038 513 1058 505 1050 l 505 896 b 150 467 311 877 158 693 l 20 467 b 0 446 9 467 0 458 l 0 432 b 20 412 0 420 9 412 l 150 412 b 505 0 166 193 317 17 l 505 -143 b 524 -163 505 -154 513 -163 l 540 -163 b 560 -143 552 -163 560 -154 l 560 0 b 923 412 753 13 907 190 l 1054 412 b 1073 432 1066 412 1073 420 l 1073 446 b 1054 467 1073 458 1066 467 z m 560 467 l 560 852 b 773 467 716 837 773 671 z m 505 467 l 301 467 b 505 851 301 668 357 831 z m 505 412 l 505 45 b 301 412 366 65 301 219 z m 560 412 l 772 412 b 560 45 772 215 706 60 z',\n        },\n        gClef: {\n            x_min: 0,\n            x_max: 640,\n            y_min: -666,\n            y_max: 1112,\n            ha: 1778,\n            o: 'm 809 -30 b 665 -279 809 -132 768 -238 b 586 186 635 -107 596 122 b 809 -30 716 186 809 98 z m 605 -297 b 521 -305 576 -302 549 -305 b 140 56 315 -305 140 -161 b 390 498 140 232 264 389 b 459 562 415 520 438 540 b 492 357 472 484 482 416 b 272 45 361 318 272 180 b 467 -194 272 -56 351 -194 b 491 -176 478 -194 491 -189 b 459 -144 491 -163 477 -156 b 372 -1 403 -109 372 -72 b 521 177 372 86 436 157 z m 478 1184 b 632 1392 491 1241 557 1392 b 688 1223 654 1392 688 1322 b 478 863 688 1073 577 960 b 462 1037 469 920 462 976 b 478 1184 462 1090 467 1139 z m 176 -739 b 444 -959 176 -834 249 -959 b 622 -910 511 -959 570 -942 b 720 -670 700 -855 720 -760 b 697 -467 720 -613 711 -549 b 675 -338 693 -438 684 -395 b 922 3 816 -292 922 -145 b 557 367 922 220 768 367 b 516 619 543 454 528 539 b 773 1188 668 779 773 959 b 710 1477 773 1319 733 1426 b 608 1601 675 1551 634 1601 b 505 1528 598 1601 553 1584 b 387 1113 413 1418 387 1234 b 419 804 387 1035 395 965 b 312 701 418 802 343 726 b 0 117 181 579 0 405 b 503 -364 0 -153 235 -364 b 616 -354 544 -364 583 -360 b 660 -670 644 -492 660 -593 b 438 -899 660 -819 583 -899 b 370 -891 403 -899 373 -891 b 366 -887 369 -890 366 -888 b 373 -881 366 -884 369 -883 b 508 -721 441 -871 508 -814 b 341 -562 508 -644 449 -562 b 176 -739 240 -562 176 -644 z',\n        },\n        cClef: {\n            x_min: 0,\n            x_max: 627,\n            y_min: -480,\n            y_max: 482,\n            ha: 962,\n            o: 'm 19 675 b 0 657 9 675 0 667 l 0 -654 b 19 -672 0 -664 9 -672 l 122 -672 b 141 -654 132 -672 141 -664 l 141 657 b 122 675 141 667 132 675 z m 903 -376 b 619 -58 903 -197 808 -58 b 505 -95 586 -58 562 -60 b 426 1 503 -89 474 -32 b 505 98 474 35 503 92 b 641 60 560 65 579 60 b 903 379 816 60 903 223 b 580 694 903 580 755 694 b 318 517 472 694 318 649 b 438 400 318 446 367 400 b 546 510 501 400 546 446 b 425 615 546 589 494 615 b 547 651 458 638 503 651 b 723 400 698 651 723 530 b 593 128 723 289 720 128 b 438 279 467 128 441 265 b 418 300 438 281 438 300 b 396 279 397 300 396 281 b 264 29 383 200 344 62 l 264 657 b 246 675 264 667 256 675 b 228 657 236 675 228 667 l 228 -654 b 246 -672 228 -664 236 -672 b 264 -654 256 -672 264 -664 l 264 -26 b 396 -278 348 -60 380 -197 b 418 -297 396 -279 397 -297 b 438 -278 438 -297 438 -279 b 593 -125 441 -262 467 -125 b 723 -397 720 -125 723 -287 b 547 -648 723 -527 698 -648 b 425 -612 503 -648 458 -635 b 441 -613 426 -612 432 -613 b 546 -507 504 -613 546 -569 b 438 -397 546 -444 501 -397 b 318 -514 367 -397 318 -444 b 580 -691 318 -647 472 -691 b 903 -376 755 -691 903 -577 z',\n        },\n        fClef: {\n            x_min: 0,\n            x_max: 664,\n            y_min: -617,\n            y_max: 251,\n            ha: 868,\n            o: 'm 366 361 b 167 298 256 361 168 298 b 37 112 84 236 50 163 b 27 36 30 86 27 60 b 46 -58 27 1 33 -30 b 140 -138 63 -96 96 -124 b 194 -147 157 -144 176 -147 b 287 -122 226 -147 259 -138 b 359 10 331 -98 359 -46 b 289 134 359 60 333 107 b 206 160 259 154 230 160 b 160 153 189 160 173 157 b 109 122 145 147 121 132 b 147 215 114 150 131 192 b 219 279 163 238 194 266 b 351 308 255 300 301 308 b 570 -52 498 308 570 190 b 477 -399 570 -186 520 -314 b 310 -635 429 -494 366 -585 b 17 -837 160 -772 19 -837 b 0 -864 17 -837 0 -847 b 1 -871 0 -867 1 -868 b 27 -888 6 -886 19 -888 b 35 -887 29 -888 33 -887 b 331 -717 36 -887 200 -819 b 528 -544 405 -664 471 -606 b 661 -367 580 -488 625 -428 b 760 -50 724 -259 760 -147 b 670 239 760 69 729 168 b 366 361 602 320 500 361 z m 818 179 b 887 107 818 138 850 107 b 956 179 924 107 956 138 b 887 252 956 219 924 252 b 818 179 850 252 818 219 z m 818 -177 b 887 -251 818 -217 850 -251 b 956 -177 924 -251 956 -217 b 887 -104 956 -137 924 -104 b 818 -177 850 -104 818 -137 z',\n        },\n        unpitchedPercussionClef1: {\n            x_min: 0,\n            x_max: 352,\n            y_min: -252,\n            y_max: 252,\n            ha: 504,\n            o: 'm 19 363 b 0 344 9 363 0 354 l 0 -344 b 19 -363 0 -354 9 -363 l 177 -363 b 196 -344 187 -363 196 -354 l 196 344 b 177 363 196 354 187 363 z m 330 363 b 311 344 320 363 311 354 l 311 -344 b 330 -363 311 -354 320 -363 l 488 -363 b 507 -344 498 -363 507 -354 l 507 344 b 488 363 507 354 498 363 z',\n        },\n        '6stringTabClef': {\n            x_min: 0,\n            x_max: 439,\n            y_min: -743,\n            y_max: 746,\n            ha: 1489,\n            o: 'm 52 1074 l 52 958 l 249 958 l 249 419 l 387 419 l 387 958 l 583 958 l 583 1074 z m 0 -333 l 145 -333 l 192 -196 l 436 -196 l 481 -333 l 632 -333 l 396 334 l 238 334 z m 315 181 l 400 -81 l 229 -81 z m 566 -474 b 393 -402 531 -428 475 -403 l 71 -402 l 71 -1070 l 372 -1070 b 374 -1070 373 -1070 373 -1070 b 465 -1061 405 -1070 435 -1067 b 541 -1027 494 -1056 520 -1043 b 588 -975 560 -1012 575 -995 b 618 -868 608 -943 618 -907 b 592 -770 618 -829 609 -798 b 514 -711 575 -743 549 -724 b 566 -674 537 -700 554 -688 b 596 -576 586 -649 596 -616 b 566 -474 596 -536 586 -503 z m 348 -518 b 428 -528 380 -518 408 -521 b 464 -590 452 -539 464 -559 b 436 -649 464 -619 455 -638 b 366 -665 418 -661 395 -665 l 203 -665 l 203 -518 z m 367 -776 b 435 -788 396 -776 419 -780 b 477 -858 464 -801 477 -824 b 433 -942 477 -900 462 -927 b 366 -953 418 -949 395 -953 l 203 -953 l 203 -776 z',\n        },\n        timeSig0: {\n            x_min: 15,\n            x_max: 389,\n            y_min: -254,\n            y_max: 255,\n            ha: 509,\n            o: 'm 291 367 b 22 0 138 367 22 209 b 291 -366 22 -209 138 -366 b 560 0 444 -366 560 -209 b 291 367 560 209 444 367 z m 376 -200 b 291 -308 376 -252 353 -308 b 206 -200 229 -308 206 -252 l 206 200 b 291 308 206 252 229 308 b 376 200 353 308 376 252 z',\n        },\n        timeSig1: {\n            x_min: 15,\n            x_max: 336,\n            y_min: -243,\n            y_max: 245,\n            ha: 488,\n            o: 'm 359 -284 l 359 336 b 341 353 359 346 351 353 l 199 353 b 190 350 196 353 193 351 b 184 344 189 348 186 346 l 23 65 b 22 56 22 62 22 59 b 30 42 22 50 26 45 l 58 26 b 66 23 60 24 63 23 b 81 32 72 23 78 27 l 183 207 l 183 -284 l 73 -284 b 56 -301 63 -284 56 -291 l 56 -333 b 73 -350 56 -343 63 -350 l 468 -350 b 484 -333 478 -350 484 -343 l 484 -301 b 468 -284 484 -291 478 -284 z',\n        },\n        timeSig2: {\n            x_min: 15,\n            x_max: 377,\n            y_min: -243,\n            y_max: 245,\n            ha: 488,\n            o: 'm 492 -56 b 382 -192 481 -88 452 -192 b 190 -134 288 -192 268 -134 b 153 -138 179 -134 167 -135 b 341 -36 153 -138 189 -84 b 533 173 494 12 533 86 b 288 353 533 233 505 353 b 30 156 71 353 30 222 b 138 49 30 96 79 49 b 245 156 197 49 245 96 b 179 255 245 196 216 240 b 168 271 174 256 168 264 b 202 297 168 279 176 289 b 251 304 209 300 229 304 b 311 288 271 304 294 300 b 348 180 338 271 348 245 b 65 -150 348 12 148 -24 b 22 -278 65 -150 22 -210 b 73 -350 22 -346 56 -350 b 121 -305 96 -350 121 -331 b 117 -287 121 -300 120 -294 b 105 -239 108 -266 105 -251 b 107 -226 105 -235 105 -230 b 154 -203 108 -217 120 -203 b 238 -289 196 -203 212 -252 b 350 -350 264 -327 304 -350 b 484 -264 396 -350 458 -317 b 543 -63 510 -210 543 -102 b 518 -36 543 -45 531 -36 b 492 -56 508 -36 498 -42 z',\n        },\n        timeSig3: {\n            x_min: 15,\n            x_max: 364,\n            y_min: -244,\n            y_max: 244,\n            ha: 488,\n            o: 'm 392 23 b 514 168 507 68 514 143 b 514 176 514 171 514 174 b 262 351 514 189 510 351 b 22 176 14 351 22 176 l 23 176 l 22 173 b 115 81 22 121 63 81 b 207 173 167 81 207 121 b 135 264 207 215 176 255 b 140 268 137 265 138 266 b 215 289 160 282 187 289 b 340 176 275 289 340 253 b 255 69 340 85 272 72 b 140 60 238 66 157 60 b 121 40 122 60 121 40 l 121 12 b 140 -6 121 12 124 -4 b 243 -14 164 -7 197 -7 b 340 -167 307 -23 340 -66 b 215 -289 340 -264 275 -289 b 121 -266 174 -289 137 -278 b 207 -174 168 -264 207 -222 b 115 -81 207 -122 167 -81 b 22 -174 63 -81 22 -122 b 22 -180 22 -174 22 -177 b 78 -298 22 -199 26 -251 b 236 -351 134 -350 204 -351 b 524 -147 374 -351 524 -304 b 389 23 524 -42 452 3 z',\n        },\n        timeSig4: {\n            x_min: 14,\n            x_max: 442,\n            y_min: -248,\n            y_max: 249,\n            ha: 497,\n            o: 'm 300 -183 l 300 -289 l 180 -289 b 160 -310 170 -289 160 -298 l 160 -337 b 180 -357 160 -348 170 -357 l 616 -357 b 636 -337 628 -357 636 -348 l 636 -310 b 616 -289 636 -298 628 -289 l 487 -289 l 487 -183 l 616 -183 b 636 -161 628 -183 636 -173 l 636 -134 b 616 -114 636 -124 628 -114 l 487 -114 l 487 115 b 477 134 487 124 482 131 l 459 143 b 452 144 456 144 455 144 b 449 144 451 144 451 144 b 436 140 445 144 439 143 l 305 20 b 300 4 301 16 300 10 l 300 -114 l 132 -114 b 464 287 132 -114 294 59 b 471 307 469 294 471 301 b 467 321 471 314 468 320 l 435 353 b 420 359 431 356 426 359 b 206 359 412 359 217 359 b 187 341 196 359 189 350 b 143 118 187 341 180 235 b 24 -124 105 1 62 -71 b 20 -140 24 -124 20 -131 b 22 -148 20 -143 20 -145 b 36 -174 26 -158 36 -174 b 52 -183 36 -174 39 -183 z',\n        },\n        timeSig5: {\n            x_min: 15,\n            x_max: 362,\n            y_min: -244,\n            y_max: 246,\n            ha: 490,\n            o: 'm 39 314 b 46 170 39 314 46 245 b 46 151 46 164 46 157 b 39 -24 45 71 39 -24 b 39 -29 39 -24 39 -26 b 49 -48 39 -35 40 -46 b 99 -59 62 -50 92 -58 b 107 -59 102 -59 104 -59 b 121 -49 112 -59 118 -58 b 235 45 128 -30 144 45 b 356 -112 337 45 356 -43 b 238 -292 356 -184 333 -288 b 226 -292 233 -292 230 -292 b 166 -282 193 -292 174 -288 b 158 -274 161 -281 158 -276 b 164 -264 158 -269 160 -266 b 222 -168 177 -255 222 -239 b 117 -71 222 -98 173 -71 b 22 -171 60 -71 22 -122 b 111 -318 22 -220 36 -275 b 252 -351 147 -338 199 -351 b 456 -275 325 -351 405 -328 b 521 -109 503 -228 521 -167 b 433 79 521 -32 487 43 b 271 124 397 104 336 124 b 131 84 223 124 173 112 b 125 82 130 82 127 82 b 115 92 120 82 115 86 l 115 183 b 131 199 115 192 122 199 l 132 199 b 252 192 154 197 202 192 b 372 209 295 192 340 196 b 474 320 439 236 462 289 b 477 334 475 324 477 330 b 451 354 477 346 469 354 b 431 351 445 354 439 353 b 252 328 360 334 305 328 b 88 343 200 328 150 334 b 71 344 88 343 81 344 b 39 320 56 344 39 340 b 39 314 39 317 39 315 z',\n        },\n        timeSig6: {\n            x_min: 15,\n            x_max: 387,\n            y_min: -244,\n            y_max: 245,\n            ha: 489,\n            o: 'm 356 69 b 216 22 268 69 236 43 b 209 98 212 52 209 75 b 216 167 209 121 212 141 b 338 287 225 220 261 287 b 410 259 374 287 396 275 b 356 174 380 246 356 207 b 448 82 356 122 396 82 b 541 174 500 82 541 122 l 541 177 b 541 179 541 177 541 177 b 533 225 541 192 539 213 b 310 353 514 276 454 353 b 58 163 180 353 86 229 b 22 -23 43 128 22 58 b 131 -285 22 -111 46 -210 b 318 -351 215 -348 268 -351 b 557 -125 369 -351 557 -292 b 356 69 557 16 446 69 z m 302 -291 b 216 -145 255 -291 216 -226 b 302 1 216 -65 255 1 b 390 -145 350 1 390 -65 b 302 -291 390 -226 350 -291 z',\n        },\n        timeSig7: {\n            x_min: 15,\n            x_max: 366,\n            y_min: -250,\n            y_max: 251,\n            ha: 501,\n            o: 'm 233 -177 b 160 -336 202 -225 160 -282 b 180 -360 160 -351 164 -360 b 264 -351 203 -360 217 -354 b 278 -350 268 -351 274 -350 b 369 -360 320 -350 359 -360 b 405 -331 382 -360 406 -344 b 405 -327 405 -330 405 -328 b 396 -226 405 -324 396 -279 b 408 -130 396 -196 399 -161 b 503 151 425 -62 471 60 b 527 308 518 196 527 275 b 526 341 527 321 527 327 b 510 361 524 356 518 361 b 484 361 503 361 491 361 b 467 341 477 361 467 356 b 406 228 467 327 464 228 b 235 351 346 228 328 351 b 86 252 145 351 91 261 l 86 321 b 71 337 86 330 79 337 l 37 337 b 22 321 29 337 22 330 l 22 55 b 37 39 22 46 29 39 l 71 39 b 86 55 79 39 86 46 l 86 101 b 158 179 86 134 108 179 b 328 124 209 179 213 124 b 425 143 357 124 410 128 b 233 -177 413 120 266 -130 z',\n        },\n        timeSig8: {\n            x_min: 15,\n            x_max: 393,\n            y_min: -248,\n            y_max: 246,\n            ha: 494,\n            o: 'm 467 26 b 547 166 514 62 547 108 b 294 354 547 269 433 354 b 40 166 154 354 40 269 b 122 13 40 108 55 56 b 22 -147 58 -24 22 -78 b 294 -357 22 -264 144 -357 b 566 -147 444 -357 566 -264 b 467 26 566 -78 541 -13 z m 294 -276 b 122 -145 202 -276 122 -226 b 197 -26 122 -49 197 -26 b 435 -187 295 -59 435 -108 b 294 -276 435 -226 384 -276 z m 386 65 b 180 209 288 96 180 144 b 294 288 180 265 232 288 b 444 180 383 288 444 246 b 386 65 444 111 412 78 z',\n        },\n        timeSig9: {\n            x_min: 15,\n            x_max: 387,\n            y_min: -244,\n            y_max: 245,\n            ha: 489,\n            o: 'm 223 -68 b 363 -20 311 -68 343 -42 b 370 -96 367 -50 370 -73 b 363 -166 370 -120 367 -140 b 240 -285 354 -219 318 -285 b 168 -258 204 -285 183 -274 b 223 -173 199 -245 223 -206 b 131 -81 223 -121 183 -81 b 37 -173 79 -81 37 -121 l 37 -176 b 37 -177 37 -176 37 -176 b 46 -223 37 -190 40 -212 b 269 -351 65 -275 125 -351 b 521 -161 399 -351 492 -228 b 557 24 536 -127 557 -56 b 448 287 557 112 533 212 b 261 353 364 350 311 353 b 22 127 210 353 22 294 b 223 -68 22 -14 132 -68 z m 276 294 b 363 147 324 294 363 228 b 276 1 363 66 324 1 b 189 147 229 1 189 66 b 276 294 189 228 229 294 z',\n        },\n        timeSigCommon: {\n            x_min: 0,\n            x_max: 463,\n            y_min: -256,\n            y_max: 258,\n            ha: 514,\n            o: 'm 468 258 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 521 17 415 71 462 24 b 537 17 526 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 350 372 651 239 595 372 b 0 17 36 372 0 111 b 382 -369 0 -154 22 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 l 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 196 -128 256 -323 196 -255 l 196 147 b 356 320 196 228 228 320 b 469 271 423 320 454 295 b 471 264 471 268 471 266 b 468 258 471 262 471 259 z',\n        },\n        timeSigCutCommon: {\n            x_min: 0,\n            x_max: 463,\n            y_min: -376,\n            y_max: 388,\n            ha: 764,\n            o: 'm 611 -120 b 599 -131 605 -120 599 -125 b 382 -323 593 -251 508 -323 b 369 -323 377 -323 373 -323 l 369 320 b 469 269 428 317 455 292 b 471 264 471 266 471 265 b 468 258 471 261 471 259 b 406 147 432 235 406 193 b 408 130 406 141 406 135 b 523 17 415 71 464 24 b 537 17 527 17 533 17 b 667 147 609 17 667 75 b 667 156 667 147 667 151 b 664 177 667 161 665 171 b 369 370 651 236 598 364 l 369 543 b 353 559 369 552 361 559 l 314 559 b 298 543 305 559 298 552 l 298 369 b 0 17 32 341 0 105 b 298 -364 0 -140 17 -334 l 298 -526 b 314 -541 298 -534 305 -541 l 353 -541 b 369 -526 361 -541 369 -534 l 369 -369 b 382 -369 373 -369 377 -369 b 641 -131 524 -369 635 -285 b 629 -120 641 -124 636 -120 z m 196 147 b 298 312 196 215 216 289 l 298 -310 b 196 -128 229 -285 196 -223 z',\n        },\n        timeSigPlus: {\n            x_min: 0,\n            x_max: 408,\n            y_min: -204,\n            y_max: 204,\n            ha: 408,\n            o: 'm 327 33 l 327 275 b 308 294 327 285 318 294 l 279 294 b 261 275 269 294 261 285 l 261 33 l 19 33 b 0 14 9 33 0 24 l 0 -13 b 19 -33 0 -23 9 -33 l 261 -33 l 261 -274 b 279 -294 261 -284 269 -294 l 308 -294 b 327 -274 318 -294 327 -284 l 327 -33 l 567 -33 b 588 -13 577 -33 588 -23 l 588 14 b 567 33 588 24 577 33 z',\n        },\n        noteheadDoubleWhole: {\n            x_min: 0,\n            x_max: 538,\n            y_min: -178,\n            y_max: 179,\n            ha: 357,\n            o: 'm 33 258 b 20 258 27 258 26 258 b 0 238 9 258 0 249 b 0 -236 0 226 0 -226 b 20 -256 0 -246 9 -256 b 33 -256 26 -256 27 -256 b 53 -236 43 -256 53 -245 b 53 238 53 -228 53 226 b 33 258 53 249 45 258 z m 649 258 b 636 258 644 258 642 258 b 616 238 625 258 616 249 b 616 125 616 235 616 187 b 389 196 573 167 500 196 b 160 125 276 196 203 167 b 160 238 160 187 160 235 b 140 258 160 249 151 258 b 127 258 134 258 132 258 b 107 238 115 258 107 249 b 107 -236 107 226 107 -226 b 127 -256 107 -246 115 -256 b 140 -256 132 -256 134 -256 b 160 -236 150 -256 160 -245 b 160 -122 160 -233 160 -186 b 389 -194 203 -166 276 -194 b 616 -122 500 -194 573 -166 b 616 -236 616 -186 616 -233 b 636 -256 616 -246 625 -256 b 649 -256 642 -256 644 -256 b 670 -236 660 -256 670 -245 b 670 238 670 -228 670 226 b 649 258 670 249 661 258 z m 462 -140 b 400 -148 445 -144 422 -148 b 314 -101 360 -148 333 -135 b 268 68 295 -65 269 29 b 268 76 268 71 268 73 b 314 141 268 109 282 130 b 377 150 331 145 354 150 b 462 102 416 150 442 140 b 510 -66 482 63 510 -29 b 462 -140 510 -104 497 -128 z m 755 258 b 742 258 749 258 747 258 b 721 238 730 258 721 249 b 721 -236 721 226 721 -226 b 742 -256 721 -246 730 -256 b 755 -256 747 -256 749 -256 b 775 -236 765 -256 775 -245 b 775 238 775 -228 775 226 b 755 258 775 249 766 258 z',\n        },\n        noteheadWhole: {\n            x_min: 0,\n            x_max: 373,\n            y_min: -134,\n            y_max: 136,\n            ha: 270,\n            o: 'm 269 196 b 0 1 71 196 0 95 b 269 -193 0 -92 71 -193 b 537 1 468 -193 537 -92 b 269 196 537 95 468 196 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 194 141 145 107 160 130 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 343 -138 389 -102 377 -128 z',\n        },\n        noteheadHalf: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -133,\n            y_max: 132,\n            ha: 265,\n            o: 'm 307 190 b 0 -60 167 190 0 73 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 z m 268 -63 b 108 -124 264 -66 158 -124 b 50 -72 60 -124 50 -85 b 200 62 50 -12 194 59 b 360 122 206 65 308 122 b 418 71 395 122 418 102 b 268 -63 418 9 272 -60 z',\n        },\n        noteheadBlack: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -133,\n            y_max: 132,\n            ha: 265,\n            o: 'm 0 -60 b 161 -192 0 -122 45 -192 b 468 58 311 -192 468 -69 b 307 190 468 143 396 190 b 0 -60 167 190 0 72 z',\n        },\n        noteheadXBlack: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -132,\n            y_max: 132,\n            ha: 264,\n            o: 'm 461 138 b 468 153 465 141 468 147 l 468 154 b 462 167 468 160 465 164 l 445 184 b 431 190 441 187 436 190 b 418 186 426 190 420 189 l 235 40 l 50 186 b 37 190 48 189 42 190 b 24 184 32 190 29 187 l 6 167 b 0 153 3 164 0 158 b 7 138 0 147 3 141 l 183 0 l 7 -138 b 0 -153 3 -141 0 -147 b 6 -166 0 -157 3 -163 l 23 -184 b 37 -190 26 -189 32 -190 b 50 -186 42 -190 48 -189 l 235 -40 l 418 -186 b 431 -190 420 -189 426 -190 b 445 -184 436 -190 442 -189 l 462 -166 b 468 -153 465 -163 468 -157 b 461 -138 468 -147 465 -141 l 285 0 z',\n        },\n        noteheadCircleX: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -162,\n            y_max: 163,\n            ha: 325,\n            o: 'm 265 0 l 395 105 b 426 0 415 75 426 39 b 387 -115 426 -43 412 -84 z m 233 -27 l 360 -145 b 235 -192 327 -174 282 -192 b 99 -137 183 -192 134 -171 z m 202 1 l 73 -105 b 42 0 53 -75 42 -39 b 81 115 42 43 56 84 z m 235 29 l 108 145 b 233 193 141 174 186 193 b 369 138 285 193 334 173 z m 233 235 b 0 0 104 235 0 130 b 233 -233 0 -130 104 -233 b 468 0 363 -233 468 -130 b 233 235 468 130 363 235 z',\n        },\n        noteheadDoubleWholeSquare: {\n            x_min: 0,\n            x_max: 432,\n            y_min: -179,\n            y_max: 177,\n            ha: 356,\n            o: 'm 590 255 b 570 235 579 255 570 246 l 570 203 l 53 203 l 53 235 b 33 255 53 246 45 255 l 20 255 b 0 235 9 255 0 246 l 0 -230 b 20 -251 0 -242 9 -251 l 33 -251 b 53 -230 45 -251 53 -242 l 53 -200 l 570 -200 l 570 -238 b 590 -258 570 -249 579 -258 l 603 -258 b 622 -238 615 -258 622 -249 l 622 235 b 603 255 622 246 615 255 z m 570 -101 l 53 -101 l 53 105 l 570 105 z',\n        },\n        noteheadSquareWhite: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 395 128 l 395 -128 l 52 -128 l 52 128 z m 446 180 l 0 180 l 0 -180 l 446 -180 z',\n        },\n        noteheadSquareBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 446 180 l 0 180 l 0 -180 l 446 -180 z',\n        },\n        noteheadTriangleUpBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -136,\n            y_max: 122,\n            ha: 258,\n            o: 'm 223 176 l 0 -196 l 446 -196 z',\n        },\n        noteheadSlashedDoubleWhole1: {\n            x_min: -66,\n            x_max: 456,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 652 298 b 638 305 649 304 644 305 b 626 301 634 305 629 304 l 560 248 b 543 256 557 253 550 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 204 510 235 510 223 l 455 161 b 281 194 413 181 356 194 b 53 124 168 194 96 166 b 53 236 53 186 53 233 b 29 256 53 253 42 256 b 20 256 26 256 23 256 b 0 236 9 256 0 248 b 0 -204 0 228 0 -98 l -88 -272 b -95 -288 -92 -276 -95 -282 b -91 -300 -95 -291 -94 -295 b -76 -307 -86 -304 -82 -307 b -65 -302 -72 -307 -68 -305 l 3 -248 b 20 -258 6 -253 12 -258 b 53 -238 33 -258 52 -255 b 53 -206 53 -236 53 -225 l 107 -161 b 281 -196 148 -183 206 -196 b 510 -124 393 -196 465 -166 b 510 -238 510 -187 510 -235 b 530 -258 510 -248 518 -258 b 563 -238 543 -258 563 -255 b 563 204 563 -229 563 98 l 649 272 b 657 288 655 276 657 282 b 652 298 657 291 655 295 z m 160 75 b 269 148 160 138 219 148 b 356 101 310 148 334 140 b 363 85 357 96 360 91 l 189 -56 b 160 66 174 -14 161 40 b 160 75 160 69 160 72 z m 53 -163 b 53 -124 53 -151 53 -138 b 76 -144 60 -131 68 -138 z m 402 -68 b 292 -148 402 -138 351 -148 b 207 -101 252 -150 226 -137 b 199 -84 204 -96 202 -91 l 373 56 b 402 -68 389 13 402 -40 z m 510 124 b 485 144 503 131 494 137 l 510 163 b 510 124 510 151 510 137 z',\n        },\n        noteheadSlashedWhole1: {\n            x_min: -75,\n            x_max: 448,\n            y_min: -211,\n            y_max: 214,\n            ha: 425,\n            o: 'm 641 301 b 625 308 636 305 631 308 b 613 304 621 307 618 307 l 439 160 b 269 196 399 181 343 196 b 0 1 71 196 0 95 b 69 -138 0 -49 20 -101 l -101 -271 b -108 -287 -105 -275 -108 -281 b -104 -298 -107 -291 -107 -294 b -88 -304 -99 -302 -94 -304 b -76 -301 -85 -304 -81 -304 l 98 -157 b 269 -193 138 -179 194 -193 b 537 1 468 -193 537 -92 b 468 141 537 52 517 104 l 638 274 b 645 289 642 278 645 284 b 641 301 644 292 644 297 z m 148 68 b 148 78 148 72 148 75 b 194 141 148 111 163 131 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 350 86 346 98 348 92 l 177 -55 b 148 68 163 -12 150 42 z m 389 -65 b 343 -138 389 -102 377 -128 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 187 -82 192 -95 190 -89 l 279 -6 l 361 58 b 389 -65 376 16 389 -39 z',\n        },\n        noteheadSlashedHalf1: {\n            x_min: -98,\n            x_max: 424,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 163 b 307 190 383 180 347 190 b 153 148 258 190 204 176 b 0 -60 58 98 0 13 b 14 -120 0 -81 4 -101 b 32 -143 20 -128 26 -135 l -134 -274 b -141 -288 -138 -276 -141 -282 b -137 -300 -141 -292 -140 -297 b -122 -307 -134 -304 -128 -307 b -111 -302 -118 -307 -114 -305 l 56 -164 b 161 -192 85 -181 121 -192 b 315 -151 210 -192 264 -179 b 468 58 410 -101 468 -16 b 454 117 468 78 464 98 b 436 141 449 125 444 134 l 603 272 b 611 287 608 275 611 281 b 606 298 611 291 609 295 z m 56 -98 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 199 60 99 1 147 32 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 361 121 360 121 360 121 l 225 9 l 69 -114 b 56 -98 65 -109 60 -104 z m 410 94 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 266 -65 367 -6 318 -36 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 104 -125 107 -125 105 -125 l 245 -9 l 396 111 b 410 94 402 107 408 101 z',\n        },\n        noteheadSlashedBlack1: {\n            x_min: -98,\n            x_max: 424,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 606 298 b 592 305 602 302 598 305 b 580 301 588 305 583 304 l 412 161 b 307 190 383 180 347 190 b 0 -60 167 190 0 72 b 32 -144 0 -89 10 -120 l -134 -274 b -141 -288 -138 -278 -141 -284 b -137 -301 -141 -292 -140 -297 b -122 -307 -134 -305 -128 -307 b -111 -304 -118 -307 -114 -307 l 56 -164 b 161 -192 82 -181 117 -192 b 468 58 311 -192 468 -71 b 436 141 468 91 456 120 l 603 271 b 611 285 608 275 611 281 b 606 298 611 289 609 294 z',\n        },\n        noteheadSlashedDoubleWhole2: {\n            x_min: -66,\n            x_max: 456,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 563 -204 b 563 236 563 -98 563 228 b 543 256 563 249 554 256 b 530 256 537 256 536 256 b 510 236 518 256 510 248 b 510 124 510 233 510 187 b 281 194 467 166 393 194 b 107 161 207 194 150 181 l 53 204 b 53 236 53 223 53 235 b 33 256 53 249 45 256 b 20 256 27 256 26 256 b 3 246 12 256 6 253 l -63 301 b -76 305 -68 304 -72 305 b -91 298 -81 305 -86 304 b -95 287 -94 295 -95 291 b -88 272 -95 281 -92 276 l 0 204 b 0 -238 0 98 0 -229 b 20 -258 0 -248 9 -258 b 33 -258 26 -258 27 -258 b 53 -238 43 -258 53 -246 b 53 -124 53 -235 53 -187 b 281 -196 96 -166 170 -196 b 456 -161 356 -196 413 -183 l 510 -206 b 510 -238 510 -225 510 -236 b 530 -258 510 -248 518 -258 b 543 -258 536 -258 537 -258 b 560 -246 549 -258 556 -252 l 626 -302 b 638 -307 631 -305 634 -307 b 654 -300 645 -307 649 -304 b 657 -288 655 -295 657 -292 b 651 -272 657 -282 655 -276 z m 207 140 b 269 148 225 144 248 148 b 356 101 310 148 336 140 b 402 -68 376 62 402 -30 b 402 -78 402 -71 402 -75 l 292 9 l 168 109 b 207 140 176 124 189 134 z m 78 144 b 53 124 69 137 60 131 b 53 163 53 137 53 150 z m 356 -141 b 294 -148 338 -145 315 -148 b 207 -101 253 -148 226 -137 b 161 66 189 -66 163 27 b 160 72 161 69 160 71 b 161 78 160 75 160 76 l 271 -9 l 395 -109 b 356 -141 387 -124 374 -134 z m 485 -144 b 510 -124 494 -138 503 -131 b 510 -163 510 -138 510 -151 z',\n        },\n        noteheadSlashedWhole2: {\n            x_min: -75,\n            x_max: 448,\n            y_min: -212,\n            y_max: 214,\n            ha: 426,\n            o: 'm 468 -138 b 537 1 517 -101 537 -49 b 269 196 537 95 468 196 b 98 160 196 196 140 181 l -76 304 b -88 308 -81 307 -84 307 b -104 301 -94 308 -99 305 b -108 289 -107 297 -107 292 b -101 274 -108 284 -105 278 l 69 141 b 0 1 20 104 0 52 b 269 -193 0 -92 71 -193 b 441 -157 343 -193 399 -179 l 613 -301 b 625 -305 618 -304 622 -305 b 641 -298 631 -305 636 -302 b 645 -287 644 -294 644 -291 b 638 -271 645 -281 642 -275 z m 194 141 b 256 150 212 147 235 150 b 343 102 297 150 323 141 b 389 -65 363 63 389 -29 b 389 -76 389 -69 389 -73 l 279 10 l 156 112 b 194 141 163 125 176 135 z m 343 -138 b 281 -147 325 -144 302 -147 b 194 -99 240 -147 213 -135 b 148 68 176 -63 150 29 b 148 76 148 71 148 73 b 148 81 148 78 148 79 l 258 -6 l 382 -108 b 343 -138 374 -122 361 -132 z',\n        },\n        noteheadSlashedHalf2: {\n            x_min: -98,\n            x_max: 424,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 386 -102 b 468 58 438 -55 468 4 b 454 117 468 78 464 98 b 307 190 428 164 373 190 b 153 148 258 190 204 176 b 108 120 137 140 122 130 l -111 301 b -122 305 -114 304 -118 305 b -137 298 -128 305 -134 302 b -141 287 -140 295 -141 291 b -134 272 -141 281 -138 275 l 85 101 b 0 -60 32 53 0 -7 b 14 -120 0 -81 4 -101 b 161 -192 40 -167 95 -192 b 315 -151 210 -192 264 -179 b 361 -122 333 -143 347 -132 l 580 -302 b 592 -307 583 -305 588 -307 b 606 -300 598 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 611 -282 608 -276 z m 199 60 b 337 118 251 89 302 111 b 359 121 344 120 351 121 b 410 94 382 121 400 112 b 416 69 415 86 416 78 b 392 19 416 53 408 36 b 308 -42 374 0 343 -20 l 245 7 l 189 55 b 199 60 192 56 196 58 z m 266 -65 b 128 -122 215 -94 163 -115 b 107 -125 121 -124 114 -125 b 56 -98 84 -125 66 -117 b 49 -73 52 -91 49 -82 b 75 -23 49 -58 59 -39 b 163 39 94 -4 125 17 l 225 -9 l 282 -56 b 266 -65 276 -59 272 -62 z',\n        },\n        noteheadSlashedBlack2: {\n            x_min: -98,\n            x_max: 424,\n            y_min: -213,\n            y_max: 212,\n            ha: 425,\n            o: 'm 384 -102 b 468 58 435 -58 468 0 b 307 190 468 143 396 190 b 108 121 239 190 167 163 l -111 301 b -124 305 -115 304 -120 305 b -138 298 -128 305 -134 302 b -141 289 -140 295 -141 292 b -141 287 -141 288 -143 288 b -135 272 -141 281 -140 275 l 84 101 b 0 -60 35 56 0 0 b 161 -192 0 -122 45 -192 b 361 -122 232 -192 304 -164 l 579 -302 b 590 -307 583 -305 588 -307 b 606 -300 596 -307 602 -304 b 611 -288 609 -297 611 -292 b 603 -274 609 -282 608 -276 z',\n        },\n        noteheadDiamondDoubleWhole: {\n            x_min: 0,\n            x_max: 373,\n            y_min: -178,\n            y_max: 179,\n            ha: 357,\n            o: 'm 504 258 b 484 238 494 258 484 248 l 484 46 b 282 187 415 95 285 186 b 268 192 279 190 275 192 b 255 187 262 192 258 190 l 52 45 l 52 238 b 33 258 52 248 43 258 l 20 258 b 0 238 9 258 0 248 l 0 -236 b 20 -256 0 -248 9 -256 l 33 -256 b 52 -236 43 -256 52 -248 l 52 -45 l 249 -181 b 268 -190 258 -189 264 -190 b 282 -186 274 -190 279 -189 b 484 -43 285 -184 413 -94 l 484 -236 b 504 -256 484 -248 494 -256 l 517 -256 b 537 -236 528 -256 537 -248 l 537 238 b 517 258 537 248 528 258 z m 220 -115 l 102 -33 l 317 117 l 435 35 z',\n        },\n        noteheadDiamondWhole: {\n            x_min: 0,\n            x_max: 373,\n            y_min: -133,\n            y_max: 132,\n            ha: 265,\n            o: 'm 282 -187 b 530 -13 285 -186 530 -13 b 537 0 534 -10 537 -6 b 530 13 537 4 534 10 b 282 186 530 13 287 183 b 268 190 279 189 275 190 b 255 186 262 190 258 189 l 7 12 b 0 -1 3 9 0 4 b 4 -13 0 -6 1 -10 l 249 -183 b 268 -192 258 -190 264 -192 b 282 -187 274 -192 279 -190 z m 220 -117 l 102 -35 l 317 115 l 435 33 z',\n        },\n        noteheadDiamondHalf: {\n            x_min: 0,\n            x_max: 335,\n            y_min: -132,\n            y_max: 133,\n            ha: 265,\n            o: 'm 475 -13 b 482 0 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 6 b 7 -13 0 -4 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z m 284 -115 l 92 33 l 199 117 l 390 -33 z',\n        },\n        noteheadDiamondBlack: {\n            x_min: 0,\n            x_max: 335,\n            y_min: -132,\n            y_max: 133,\n            ha: 265,\n            o: 'm 475 -14 b 482 -1 480 -10 482 -6 b 475 13 482 4 480 10 l 253 187 b 240 192 251 190 246 192 b 229 187 236 192 232 190 l 7 13 b 0 0 3 10 0 4 b 7 -14 0 -6 3 -10 l 229 -186 b 240 -190 232 -189 236 -190 b 253 -186 246 -190 251 -189 z',\n        },\n        noteheadParenthesisRight: {\n            x_min: 0,\n            x_max: 75,\n            y_min: -209,\n            y_max: 212,\n            ha: 421,\n            o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n        },\n        noteheadParenthesisLeft: {\n            x_min: 0,\n            x_max: 75,\n            y_min: -212,\n            y_max: 209,\n            ha: 421,\n            o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n        },\n        noteheadMoonBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -125,\n            y_max: 125,\n            ha: 250,\n            o: 'm 0 180 l 0 0 b 223 -180 0 -99 99 -180 b 446 0 347 -180 446 -99 l 446 180 z',\n        },\n        noteheadTriangleLeftBlack: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -136,\n            y_max: 122,\n            ha: 258,\n            o: 'm 0 176 l 0 -196 l 488 -196 z',\n        },\n        noteheadTriangleRightBlack: {\n            x_min: 0,\n            x_max: 339,\n            y_min: -136,\n            y_max: 122,\n            ha: 258,\n            o: 'm 488 176 l 0 -196 l 488 -196 z',\n        },\n        noteheadTriangleRoundDownBlack: {\n            x_min: 0,\n            x_max: 310,\n            y_min: -136,\n            y_max: 122,\n            ha: 258,\n            o: 'm 226 -196 l 446 63 b 226 176 446 63 384 176 b 0 63 68 176 0 63 z',\n        },\n        augmentationDot: {\n            x_min: 0,\n            x_max: 100,\n            y_min: -50,\n            y_max: 50,\n            ha: 100,\n            o: 'm 0 0 b 72 -72 0 -40 32 -72 b 144 0 112 -72 144 -40 b 72 72 144 40 112 72 b 0 0 32 72 0 40 z',\n        },\n        tremolo1: {\n            x_min: 0,\n            x_max: 290,\n            y_min: -93,\n            y_max: 96,\n            ha: 189,\n            o: 'm 0 48 l 0 -134 l 418 -43 l 418 138 z',\n        },\n        flag8thUp: {\n            x_min: 0,\n            x_max: 289,\n            y_min: -817,\n            y_max: 12,\n            ha: 829,\n            o: 'm 0 -327 b 12 -343 0 -331 1 -338 b 291 -600 73 -363 197 -441 b 359 -827 317 -645 359 -707 b 294 -1140 359 -930 331 -1037 b 289 -1162 291 -1149 288 -1156 b 297 -1175 289 -1168 291 -1172 b 304 -1176 300 -1176 302 -1176 b 327 -1161 314 -1176 321 -1171 b 416 -798 395 -1041 418 -888 b 416 -780 416 -791 416 -786 b 302 -458 409 -595 302 -458 b 131 -220 307 -458 170 -281 b 50 -50 78 -138 53 -56 b 36 6 49 -46 36 6 b 19 17 35 12 27 17 b 0 -1 9 17 0 9 z',\n        },\n        flag8thDown: {\n            x_min: 0,\n            x_max: 309,\n            y_min: -12,\n            y_max: 817,\n            ha: 829,\n            o: 'm 0 1 b 19 -17 0 -9 9 -17 b 36 -6 26 -17 35 -12 b 50 50 36 -4 49 46 b 117 196 52 56 65 111 b 331 458 173 289 259 357 b 445 780 402 559 445 654 b 338 1161 445 912 415 1021 b 317 1176 334 1171 325 1176 b 310 1175 314 1176 311 1176 b 300 1158 302 1172 300 1166 b 304 1140 300 1153 301 1146 b 384 827 361 1007 384 930 b 317 600 384 707 343 645 b 12 343 223 441 72 363 b 0 327 1 338 0 331 z',\n        },\n        flag16thUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -820,\n            y_max: 12,\n            ha: 832,\n            o: 'm 301 -681 b 148 -514 262 -631 219 -585 b 56 -372 92 -458 66 -409 b 52 -343 55 -364 53 -354 b 271 -510 125 -343 219 -442 b 340 -696 327 -583 340 -641 b 337 -739 340 -710 338 -724 b 301 -681 325 -716 312 -697 z m 0 -549 b 22 -563 0 -553 12 -559 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1009 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1169 282 -1175 b 297 -1181 292 -1181 294 -1181 b 318 -1161 307 -1181 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -855 382 -920 379 -886 b 402 -678 389 -802 402 -749 b 333 -471 402 -603 382 -536 b 137 -228 265 -382 192 -307 b 42 0 82 -148 42 0 b 22 17 39 10 37 17 b 0 0 4 17 0 10 z',\n        },\n        flag16thDown: {\n            x_min: 0,\n            x_max: 309,\n            y_min: -26,\n            y_max: 803,\n            ha: 829,\n            o: 'm 53 346 b 56 363 55 353 56 359 b 163 517 66 399 78 452 b 384 732 246 582 346 662 b 317 503 382 621 354 552 b 53 346 229 395 122 364 z m 0 -14 b 22 -37 0 -26 10 -37 b 43 -14 33 -37 40 -26 b 167 232 65 134 109 177 b 445 683 243 305 445 416 b 432 837 445 730 441 783 b 441 919 438 855 441 881 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 374 876 382 912 380 893 l 373 871 b 373 871 373 871 373 871 b 327 789 366 842 350 815 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n        },\n        flag32ndUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -821,\n            y_max: 186,\n            ha: 1007,\n            o: 'm 301 -683 b 148 -516 262 -632 219 -588 b 56 -373 92 -459 66 -410 b 50 -343 55 -366 53 -354 b 271 -500 125 -343 219 -432 b 340 -687 327 -575 340 -632 b 337 -739 340 -704 338 -721 b 301 -683 325 -716 312 -698 z m 271 -259 b 340 -446 327 -333 340 -392 b 338 -469 340 -455 338 -462 b 333 -461 337 -467 334 -464 b 91 -192 265 -372 145 -271 b 50 -92 69 -160 58 -124 b 271 -259 124 -92 219 -192 z m 0 -550 b 22 -564 0 -554 12 -560 b 258 -778 59 -577 171 -649 b 318 -952 307 -851 318 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1011 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1171 282 -1176 b 297 -1182 292 -1182 294 -1182 b 318 -1162 307 -1182 312 -1171 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 386 -563 402 -632 396 -596 b 402 -441 395 -526 402 -487 b 402 -428 402 -436 402 -432 b 333 -220 402 -353 382 -285 b 137 23 265 -131 192 -56 b 42 251 82 102 42 251 b 22 268 39 261 37 268 b 0 251 4 268 0 261 z',\n        },\n        flag32ndDown: {\n            x_min: 0,\n            x_max: 309,\n            y_min: -216,\n            y_max: 803,\n            ha: 1019,\n            o: 'm 50 73 b 91 171 58 105 71 141 b 347 402 145 251 272 317 b 384 454 361 418 374 435 b 324 239 384 347 361 287 b 50 73 235 130 122 94 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 383 621 359 562 b 53 343 258 436 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 0 -288 b 22 -311 0 -298 10 -311 b 43 -288 33 -311 40 -300 b 167 -40 65 -138 109 -95 b 445 409 243 32 445 143 b 431 577 445 462 439 520 b 441 651 435 602 439 626 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1156 321 1153 314 1156 b 287 1152 300 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z',\n        },\n        flag64thUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -822,\n            y_max: 373,\n            ha: 1195,\n            o: 'm 333 -461 b 91 -192 265 -372 145 -271 b 50 -92 69 -161 58 -125 b 271 -251 125 -92 219 -183 b 340 -438 327 -324 340 -383 b 338 -469 340 -448 338 -459 b 333 -461 337 -467 334 -464 z m 301 -683 b 148 -517 262 -632 219 -588 b 56 -374 92 -461 66 -410 b 50 -343 55 -366 53 -356 b 271 -501 125 -343 219 -433 b 340 -688 327 -575 340 -634 b 337 -739 340 -706 338 -721 b 301 -683 325 -717 312 -698 z m 271 10 b 340 -176 327 -63 340 -121 b 337 -217 340 -190 338 -204 b 333 -212 336 -216 334 -213 b 91 65 265 -122 145 -16 b 48 177 66 101 53 143 l 50 177 b 271 10 124 177 217 78 z m 0 -552 b 22 -564 0 -554 12 -562 b 258 -778 59 -579 171 -649 b 318 -952 307 -851 317 -903 b 317 -976 318 -960 318 -968 b 285 -1142 317 -1012 307 -1084 b 279 -1165 284 -1149 279 -1158 b 289 -1181 279 -1172 282 -1178 b 297 -1184 292 -1182 295 -1184 b 318 -1164 307 -1182 312 -1172 b 382 -963 344 -1122 382 -1044 b 374 -857 382 -923 379 -887 b 402 -668 389 -804 402 -740 b 386 -563 402 -632 396 -596 b 402 -432 395 -523 402 -480 b 402 -418 402 -428 402 -423 b 383 -304 402 -379 396 -341 b 402 -170 393 -264 402 -222 b 402 -158 402 -166 402 -163 b 333 49 402 -84 382 -16 b 137 292 265 138 192 213 b 42 520 82 372 42 520 b 22 537 39 530 37 537 b 0 520 4 537 0 530 z',\n        },\n        flag64thDown: {\n            x_min: 0,\n            x_max: 309,\n            y_min: -403,\n            y_max: 804,\n            ha: 1207,\n            o: 'm 52 -196 b 91 -102 59 -166 71 -131 b 347 128 145 -23 272 45 b 384 180 361 145 374 163 b 324 -30 384 76 361 16 b 52 -196 235 -140 124 -176 z m 163 517 b 366 693 248 589 327 644 b 382 717 372 701 377 708 b 383 693 383 708 383 701 b 314 505 383 621 359 562 b 53 343 258 438 179 390 b 56 363 55 351 56 359 b 163 517 66 400 81 449 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 102 69 140 b 347 402 145 251 272 318 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 348 359 288 z m 0 -557 b 22 -580 0 -567 10 -580 b 43 -557 33 -580 40 -567 b 167 -310 65 -408 109 -364 b 445 140 243 -238 445 -125 b 431 307 445 192 439 249 b 441 377 436 331 439 354 b 441 406 441 387 441 397 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 651 432 582 438 618 b 441 675 441 660 441 667 b 441 688 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 305 1158 321 1153 314 1156 b 287 1152 300 1158 292 1156 b 279 1145 281 1151 279 1148 b 294 1129 279 1140 288 1136 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 563 z',\n        },\n        flag128thUp: {\n            x_min: 0,\n            x_max: 279,\n            y_min: -821,\n            y_max: 573,\n            ha: 1394,\n            o: 'm 0 -550 b 22 -563 0 -553 12 -560 b 258 -776 59 -576 171 -648 b 318 -950 307 -850 318 -901 b 317 -975 318 -959 318 -966 b 285 -1140 317 -1011 307 -1083 b 279 -1164 284 -1148 279 -1156 b 289 -1179 279 -1171 282 -1176 b 297 -1182 292 -1181 294 -1181 b 318 -1162 307 -1182 312 -1169 b 382 -962 344 -1120 382 -1043 b 374 -857 382 -922 379 -887 b 402 -668 389 -802 402 -740 b 383 -554 402 -629 396 -590 b 402 -399 396 -503 402 -452 b 382 -284 402 -359 396 -321 b 402 -125 396 -230 402 -180 b 383 -14 402 -86 396 -49 b 402 130 396 35 402 81 b 333 348 402 204 382 284 b 137 592 265 438 192 513 b 42 808 82 671 46 793 b 22 825 39 818 37 825 b 0 808 4 825 0 818 z m 271 310 b 340 111 328 235 340 170 b 338 73 340 98 338 86 b 333 81 336 76 334 79 b 91 357 265 170 145 276 b 48 469 66 393 53 435 l 50 469 b 271 310 124 469 217 377 z m 301 -681 b 148 -523 262 -631 219 -593 b 56 -383 92 -465 66 -420 b 49 -343 55 -374 52 -359 l 50 -343 b 271 -500 124 -343 217 -432 b 340 -688 327 -575 340 -634 b 337 -737 340 -706 338 -721 b 301 -681 325 -716 312 -697 z m 333 -461 b 91 -192 265 -372 145 -271 b 48 -73 66 -154 53 -111 l 48 -73 l 50 -73 b 271 -232 124 -73 217 -163 b 340 -419 327 -305 340 -364 b 337 -468 340 -435 338 -452 b 333 -461 336 -465 334 -464 z m 333 -192 b 91 84 265 -102 145 4 b 48 200 65 121 53 164 l 48 200 l 50 200 b 271 42 124 200 217 109 b 340 -147 327 -32 340 -92 b 337 -197 340 -164 338 -181 b 333 -192 336 -196 334 -194 z',\n        },\n        flag128thDown: {\n            x_min: 0,\n            x_max: 309,\n            y_min: -591,\n            y_max: 803,\n            ha: 1394,\n            o: 'm 0 -828 b 22 -851 0 -838 10 -851 b 43 -828 33 -851 40 -840 b 167 -580 65 -678 109 -635 b 445 -131 243 -508 445 -397 b 431 36 445 -79 439 -22 b 441 108 436 60 439 85 b 441 137 441 117 441 127 b 441 147 441 140 441 144 b 423 275 441 193 432 236 b 441 377 433 310 438 344 b 441 406 441 387 441 396 b 441 418 441 410 441 413 b 423 546 441 464 432 507 b 441 649 432 582 438 616 b 441 675 441 658 441 667 b 441 687 441 680 441 684 b 425 808 441 730 433 772 b 441 919 435 840 441 876 b 327 1149 441 1032 374 1112 b 304 1156 321 1153 312 1156 b 287 1152 298 1156 292 1155 b 279 1145 281 1149 279 1148 b 294 1129 279 1140 288 1135 b 382 930 344 1076 382 1027 b 327 789 382 877 364 832 b 22 598 226 672 86 612 b 0 559 12 593 0 562 z m 314 -37 b 50 -200 258 -107 179 -153 b 91 -102 58 -168 71 -132 b 347 128 145 -23 272 45 b 382 176 360 143 372 160 b 383 151 383 167 383 160 b 314 -37 383 79 359 19 z m 314 232 b 50 69 258 163 179 117 b 91 171 56 101 69 138 b 347 402 145 251 272 317 b 382 449 360 416 372 432 b 383 420 383 439 383 429 b 314 232 383 347 359 288 z m 163 517 b 366 693 248 589 327 642 b 382 716 372 700 377 708 b 383 693 383 708 383 700 b 314 505 382 621 359 560 b 53 343 258 436 179 390 b 56 363 55 350 56 357 b 163 517 66 399 81 449 z m 52 -467 b 91 -372 59 -435 71 -402 b 347 -141 145 -292 272 -225 b 384 -89 361 -125 374 -108 b 324 -301 382 -194 361 -255 b 52 -467 235 -410 122 -446 z',\n        },\n        accidentalFlat: {\n            x_min: 0,\n            x_max: 203,\n            y_min: -176,\n            y_max: 453,\n            ha: 629,\n            o: 'm 289 114 b 173 223 281 170 246 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -251 30 -253 36 -252 b 216 -114 45 -248 138 -202 b 292 78 271 -52 292 19 b 289 114 292 91 291 102 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z',\n        },\n        accidentalNatural: {\n            x_min: 0,\n            x_max: 171,\n            y_min: -323,\n            y_max: 325,\n            ha: 648,\n            o: 'm 239 264 b 228 268 236 266 232 268 b 222 266 226 268 223 266 l 40 216 l 40 468 l 0 468 l 0 -245 b 20 -264 0 -256 9 -264 b 26 -264 22 -264 24 -264 l 207 -213 l 207 -465 l 246 -465 b 246 248 246 -226 246 1 b 239 264 246 253 243 261 z m 40 -140 l 40 96 l 207 144 l 207 -94 z',\n        },\n        accidentalSharp: {\n            x_min: 0,\n            x_max: 244,\n            y_min: -333,\n            y_max: 334,\n            ha: 667,\n            o: 'm 336 151 b 351 171 344 153 351 163 l 351 256 b 331 276 351 268 343 276 b 328 276 330 276 330 276 l 281 266 l 281 481 l 240 481 l 240 258 l 112 232 l 112 435 l 72 435 l 72 223 l 16 212 b 0 192 7 210 0 200 l 0 189 l 0 105 l 0 108 b 20 88 0 96 9 88 b 24 88 22 88 23 88 l 72 98 l 72 -140 l 16 -151 b 0 -171 7 -153 0 -163 l 0 -255 b 20 -275 0 -266 9 -275 b 24 -275 22 -275 23 -275 l 72 -265 l 72 -480 l 112 -480 l 112 -256 l 240 -230 l 240 -433 l 281 -433 l 281 -222 l 336 -212 b 351 -192 344 -210 351 -200 l 351 -107 b 331 -86 351 -95 343 -86 b 328 -86 330 -86 330 -86 l 281 -96 l 281 141 z m 112 107 l 240 132 l 240 -105 l 112 -132 z',\n        },\n        accidentalDoubleSharp: {\n            x_min: 0,\n            x_max: 275,\n            y_min: -137,\n            y_max: 138,\n            ha: 275,\n            o: 'm 360 73 l 376 73 b 396 94 387 73 396 82 l 396 179 b 376 199 396 190 387 199 l 291 199 b 271 179 279 199 271 190 l 271 161 l 271 102 l 200 30 l 196 30 l 124 102 l 124 179 b 105 199 124 190 117 199 l 20 199 b 0 179 9 199 0 190 l 0 94 b 20 73 0 82 9 73 l 35 73 l 36 73 l 96 73 l 167 3 l 167 -1 l 96 -73 l 36 -73 l 35 -73 l 20 -73 b 0 -92 9 -73 0 -81 l 0 -177 b 20 -197 0 -189 9 -197 l 105 -197 b 124 -177 117 -197 124 -189 l 124 -101 l 196 -32 l 200 -32 l 271 -101 l 271 -161 l 271 -163 l 271 -177 b 291 -197 271 -189 279 -197 l 376 -197 b 396 -177 387 -197 396 -189 l 396 -92 b 376 -73 396 -81 387 -73 l 361 -73 l 360 -73 l 300 -73 l 228 -1 l 228 1 l 300 73 z',\n        },\n        accidentalDoubleFlat: {\n            x_min: 0,\n            x_max: 371,\n            y_min: -176,\n            y_max: 453,\n            ha: 629,\n            o: 'm 531 115 b 415 223 523 171 488 223 b 294 171 343 223 301 180 l 300 632 b 279 652 300 644 291 652 l 262 652 b 242 632 251 652 242 644 l 246 199 b 173 223 228 213 204 223 b 52 170 101 223 59 179 l 58 632 b 37 652 58 644 49 652 l 20 652 b 0 632 9 652 0 644 l 7 -233 b 27 -253 7 -245 16 -253 b 39 -249 30 -253 36 -251 b 216 -114 45 -246 138 -202 b 248 -69 226 -102 239 -82 l 249 -233 b 269 -253 249 -245 258 -253 b 281 -249 272 -253 278 -251 b 458 -112 287 -246 380 -200 b 534 79 513 -50 534 20 b 531 115 534 92 533 104 z m 190 58 b 148 -85 190 36 184 -30 b 48 -183 124 -122 75 -161 l 52 98 b 134 153 55 111 76 153 b 190 73 186 153 190 104 b 190 58 190 66 190 62 z m 432 58 b 390 -85 432 36 426 -30 b 289 -183 366 -122 317 -161 l 294 98 b 376 153 297 111 318 153 b 432 73 428 153 432 104 b 432 58 432 66 432 62 z',\n        },\n        accidentalParensLeft: {\n            x_min: 0,\n            x_max: 75,\n            y_min: -212,\n            y_max: 209,\n            ha: 421,\n            o: 'm 98 -305 b 104 -302 101 -304 102 -304 b 108 -295 107 -301 108 -298 b 107 -289 108 -294 108 -292 b 40 10 107 -288 40 -160 b 107 288 40 95 58 192 b 108 292 108 289 108 291 b 104 300 108 295 107 298 b 96 301 101 301 99 302 b 91 298 94 301 92 300 b 0 0 86 292 0 174 b 91 -301 0 -174 86 -295 b 98 -305 92 -304 95 -305 z',\n        },\n        accidentalParensRight: {\n            x_min: 0,\n            x_max: 75,\n            y_min: -209,\n            y_max: 212,\n            ha: 421,\n            o: 'm 10 305 b 4 302 7 304 6 304 b 0 295 1 301 0 298 b 1 289 0 294 0 292 b 68 -10 1 288 68 160 b 1 -288 68 -95 50 -192 b 0 -292 0 -289 0 -291 b 4 -300 0 -295 1 -298 b 12 -301 7 -301 9 -302 b 17 -298 14 -301 16 -300 b 108 0 22 -292 108 -174 b 17 301 108 174 22 295 b 10 305 16 304 13 305 z',\n        },\n        accidentalQuarterToneFlatStein: {\n            x_min: 0,\n            x_max: 193,\n            y_min: -176,\n            y_max: 452,\n            ha: 628,\n            o: 'm 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n        },\n        accidentalThreeQuarterTonesFlatZimmermann: {\n            x_min: 0,\n            x_max: 422,\n            y_min: -176,\n            y_max: 452,\n            ha: 628,\n            o: 'm 608 84 b 482 217 608 173 554 217 b 376 174 416 217 384 186 l 379 632 b 360 651 379 642 370 651 l 348 651 b 330 632 338 651 330 642 l 336 -235 b 354 -253 336 -245 344 -253 b 363 -249 359 -253 360 -251 b 501 -145 363 -249 442 -202 b 608 84 543 -105 608 -26 z m 459 154 b 516 75 511 154 516 105 b 516 58 516 68 516 62 b 474 -72 516 36 510 -17 b 373 -179 448 -111 400 -156 l 374 107 b 376 102 374 102 376 99 b 459 154 376 115 396 154 z m 0 84 b 107 -145 0 -26 65 -105 b 245 -249 166 -202 245 -249 b 253 -253 248 -251 249 -253 b 272 -235 264 -253 272 -245 l 278 632 b 259 651 278 642 269 651 l 248 651 b 229 632 238 651 229 642 l 232 174 b 125 217 223 186 192 217 b 0 84 53 217 0 173 z m 148 154 b 232 102 212 154 232 115 b 233 107 232 99 233 102 l 235 -179 b 134 -72 207 -156 160 -111 b 92 58 98 -17 92 36 b 92 75 92 62 92 68 b 148 154 92 105 96 154 z',\n        },\n        accidentalQuarterToneSharpStein: {\n            x_min: 0,\n            x_max: 180,\n            y_min: -316,\n            y_max: 320,\n            ha: 636,\n            o: 'm 243 144 b 259 164 252 145 259 156 l 259 249 b 239 269 259 261 251 269 b 235 268 238 269 236 268 l 150 251 l 150 461 l 109 461 l 109 242 l 16 222 b 0 203 7 220 0 212 l 0 120 b 20 99 0 108 9 99 b 24 99 22 99 23 99 l 109 117 l 109 -121 l 16 -141 b 0 -160 7 -143 0 -151 l 0 -243 b 20 -264 0 -255 9 -264 b 24 -264 22 -264 23 -264 l 109 -246 l 109 -455 l 150 -455 l 150 -238 l 243 -219 b 259 -199 252 -217 259 -207 l 259 -114 b 239 -95 259 -102 251 -95 b 235 -95 238 -95 236 -95 l 150 -112 l 150 125 z',\n        },\n        accidentalThreeQuarterTonesSharpStein: {\n            x_min: 0,\n            x_max: 290,\n            y_min: -328,\n            y_max: 339,\n            ha: 667,\n            o: 'm 400 158 b 416 179 409 160 416 170 l 416 264 b 397 284 416 275 409 284 b 393 284 396 284 395 284 l 348 274 l 348 488 l 308 488 l 308 265 l 223 248 l 223 465 l 184 465 l 184 240 l 108 225 l 108 442 l 69 442 l 69 216 l 16 204 b 0 186 7 203 0 194 l 0 102 b 20 82 0 91 9 82 b 24 82 22 82 23 82 l 69 92 l 69 -147 l 16 -158 b 0 -177 7 -160 0 -168 l 0 -261 b 20 -281 0 -272 9 -281 b 24 -281 22 -281 23 -281 l 69 -272 l 69 -472 l 108 -472 l 108 -264 l 184 -248 l 184 -451 l 223 -451 l 223 -240 l 308 -223 l 308 -426 l 348 -426 l 348 -215 l 400 -204 b 418 -184 409 -203 418 -193 l 418 -99 b 397 -79 418 -88 409 -79 b 393 -79 396 -79 395 -79 l 348 -89 l 348 148 z m 184 -122 l 108 -138 l 108 99 l 184 115 z m 223 122 l 308 140 l 308 -98 l 223 -115 z',\n        },\n        accidentalBuyukMucennebFlat: {\n            x_min: 0,\n            x_max: 277,\n            y_min: -176,\n            y_max: 454,\n            ha: 630,\n            o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 160 317 l 336 419 l 336 482 l 161 380 l 161 488 l 336 590 l 336 654 l 163 552 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 108 520 l 0 456 l 0 393 l 108 456 l 109 350 l 0 285 l 0 222 l 109 287 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 141 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 154 -184 230 -122 181 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n        },\n        accidentalBuyukMucennebSharp: {\n            x_min: 0,\n            x_max: 348,\n            y_min: -332,\n            y_max: 334,\n            ha: 666,\n            o: 'm 494 121 b 482 125 491 122 485 125 b 478 125 481 125 480 125 l 354 91 l 354 148 l 412 164 b 425 183 419 166 425 176 l 425 268 b 408 287 425 278 418 287 b 402 285 406 287 403 285 l 354 272 l 354 481 l 317 481 l 317 262 l 186 226 l 186 436 l 148 436 l 148 216 l 89 200 b 76 183 82 199 76 190 l 76 98 b 84 84 76 92 79 86 b 95 81 86 82 92 81 b 99 81 96 81 98 81 l 148 94 l 148 35 l 14 -1 b 0 -20 7 -3 0 -13 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -120 16 -122 b 23 -121 20 -122 22 -121 l 148 -88 l 148 -147 l 89 -163 b 76 -180 82 -164 76 -173 l 76 -181 l 76 -265 b 95 -282 76 -275 85 -282 b 99 -282 96 -282 98 -282 l 148 -269 l 148 -478 l 186 -478 l 186 -259 l 317 -225 l 317 -433 l 354 -433 l 354 -215 l 412 -199 b 425 -181 419 -197 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -79 409 -76 b 402 -78 405 -76 403 -78 l 354 -91 l 354 -32 l 488 4 b 501 22 495 6 501 14 l 501 107 b 494 121 501 112 498 118 z m 317 138 l 317 81 l 186 45 l 186 104 z m 186 -137 l 186 -78 l 317 -42 l 317 -101 z',\n        },\n        accidentalBakiyeFlat: {\n            x_min: 0,\n            x_max: 277,\n            y_min: -176,\n            y_max: 454,\n            ha: 630,\n            o: 'm 396 115 b 279 225 387 173 354 225 b 158 171 204 225 164 179 l 161 348 l 336 452 l 336 516 l 161 413 l 164 634 b 144 654 164 645 156 654 l 127 654 b 107 634 115 654 107 645 l 109 382 l 0 318 l 0 255 l 109 318 l 114 -235 b 134 -253 114 -246 122 -253 b 145 -251 138 -253 143 -252 b 323 -114 145 -251 242 -204 b 399 79 377 -52 399 20 b 396 115 399 92 397 104 z m 297 58 b 255 -85 297 36 291 -30 b 156 -184 230 -122 183 -163 l 158 96 b 240 153 161 109 181 153 b 297 73 292 153 297 104 b 297 58 297 66 297 62 z',\n        },\n        accidentalKucukMucennebSharp: {\n            x_min: 0,\n            x_max: 348,\n            y_min: -316,\n            y_max: 318,\n            ha: 634,\n            o: 'm 494 121 b 482 125 491 124 487 125 b 478 124 481 125 480 124 l 269 68 l 269 127 l 412 164 b 425 181 420 167 425 173 l 425 266 b 418 282 425 272 422 279 b 406 285 415 285 410 285 b 402 285 405 285 403 285 l 269 249 l 269 458 l 232 458 l 232 239 l 89 200 b 76 181 81 197 76 190 l 76 98 b 84 84 76 92 79 86 b 95 79 86 81 91 79 b 99 81 96 79 98 81 l 232 115 l 232 58 l 14 -3 b 0 -20 6 -6 0 -12 l 0 -104 b 7 -118 0 -109 3 -115 b 19 -122 10 -121 14 -122 b 23 -122 20 -122 22 -122 l 232 -66 l 232 -124 l 89 -163 b 76 -180 81 -166 76 -171 l 76 -264 b 84 -279 76 -269 79 -276 b 95 -282 86 -282 91 -282 b 99 -282 96 -282 98 -282 l 232 -246 l 232 -455 l 269 -455 l 269 -236 l 412 -199 b 425 -180 420 -196 425 -189 l 425 -95 b 418 -81 425 -89 422 -84 b 406 -76 415 -78 410 -76 b 402 -78 405 -76 403 -78 l 269 -114 l 269 -55 l 487 4 b 501 22 495 7 501 13 l 501 107 b 494 121 501 112 498 118 z',\n        },\n        articAccentAbove: {\n            x_min: 0,\n            x_max: 361,\n            y_min: 0,\n            y_max: 235,\n            ha: 235,\n            o: 'm 26 337 b 20 338 24 337 22 338 b 0 318 9 338 0 330 l 0 285 b 14 266 0 276 7 269 l 323 170 l 14 72 b 0 53 7 69 0 62 l 0 20 b 20 0 0 9 9 0 b 26 1 22 0 24 1 l 505 150 b 520 170 513 153 520 161 b 505 189 520 179 513 186 z',\n        },\n        articAccentBelow: {\n            x_min: 0,\n            x_max: 361,\n            y_min: -235,\n            y_max: 0,\n            ha: 235,\n            o: 'm 26 -1 b 20 0 24 -1 22 0 b 0 -20 9 0 0 -9 l 0 -53 b 14 -72 0 -62 7 -69 l 323 -168 l 14 -266 b 0 -285 7 -269 0 -276 l 0 -318 b 20 -338 0 -330 9 -338 b 26 -337 22 -338 24 -337 l 505 -189 b 520 -168 513 -186 520 -177 b 505 -150 520 -160 513 -153 z',\n        },\n        articTenutoAbove: {\n            x_min: 0,\n            x_max: 316,\n            y_min: 0,\n            y_max: 46,\n            ha: 46,\n            o: 'm 20 66 b 0 46 9 66 0 58 l 0 20 b 20 0 0 9 9 0 l 435 0 b 455 20 446 0 455 9 l 455 46 b 435 66 455 58 446 66 z',\n        },\n        articTenutoBelow: {\n            x_min: 0,\n            x_max: 316,\n            y_min: -46,\n            y_max: 0,\n            ha: 46,\n            o: 'm 20 0 b 0 -20 9 0 0 -9 l 0 -46 b 20 -66 0 -58 9 -66 l 435 -66 b 455 -46 446 -66 455 -58 l 455 -20 b 435 0 455 -9 446 0 z',\n        },\n        articStaccatoAbove: {\n            x_min: 0,\n            x_max: 78,\n            y_min: 0,\n            y_max: 78,\n            ha: 78,\n            o: 'm 16 16 b 96 16 39 -6 73 -6 b 96 95 118 39 118 73 b 16 95 73 118 39 118 b 16 16 -6 73 -6 39 z',\n        },\n        articStaccatoBelow: {\n            x_min: 0,\n            x_max: 78,\n            y_min: -78,\n            y_max: 0,\n            ha: 78,\n            o: 'm 16 -96 b 96 -96 39 -118 73 -118 b 96 -17 118 -73 118 -39 b 16 -17 73 6 39 6 b 16 -96 -6 -39 -6 -73 z',\n        },\n        articStaccatissimoAbove: {\n            x_min: 0,\n            x_max: 127,\n            y_min: 0,\n            y_max: 248,\n            ha: 248,\n            o: 'm 163 357 b 150 353 154 357 150 353 l 99 300 b 92 295 96 297 95 295 b 85 300 89 295 88 297 l 35 353 b 22 357 35 353 30 357 b 0 338 13 357 0 351 b 73 22 0 323 73 22 b 92 0 75 16 78 0 b 111 22 107 0 109 16 b 183 338 111 22 183 323 b 163 357 183 351 171 357 z',\n        },\n        articStaccatissimoBelow: {\n            x_min: 0,\n            x_max: 127,\n            y_min: -248,\n            y_max: 0,\n            ha: 248,\n            o: 'm 20 -357 b 33 -353 29 -357 33 -353 l 84 -300 b 91 -295 86 -297 88 -295 b 98 -300 94 -295 95 -297 l 148 -353 b 161 -357 148 -353 153 -357 b 183 -338 170 -357 183 -351 b 109 -22 183 -323 109 -22 b 91 0 108 -16 105 0 b 72 -22 76 0 73 -16 b 0 -338 72 -22 0 -323 b 20 -357 0 -351 12 -357 z',\n        },\n        articMarcatoAbove: {\n            x_min: 1,\n            x_max: 296,\n            y_min: 0,\n            y_max: 253,\n            ha: 253,\n            o: 'm 36 10 l 173 239 l 298 10 b 317 0 301 4 310 0 l 408 0 b 426 20 419 0 426 9 b 425 30 426 23 426 27 l 230 356 b 213 364 226 361 222 363 b 196 356 207 364 199 361 l 1 30 z',\n        },\n        articMarcatoBelow: {\n            x_min: 0,\n            x_max: 295,\n            y_min: -253,\n            y_max: 0,\n            ha: 253,\n            o: 'm 390 -10 l 253 -239 l 128 -10 b 109 0 125 -4 117 0 l 19 0 b 0 -20 7 0 0 -9 b 1 -30 0 -23 0 -27 l 196 -356 b 213 -364 200 -361 204 -363 b 230 -356 219 -364 228 -361 l 425 -30 z',\n        },\n        fermataAbove: {\n            x_min: 0,\n            x_max: 622,\n            y_min: 0,\n            y_max: 368,\n            ha: 368,\n            o: 'm 778 374 b 448 530 642 521 523 530 b 120 374 373 530 255 521 b 0 65 49 297 0 143 b 20 19 0 37 6 19 b 161 265 60 19 40 143 b 445 373 268 372 410 373 b 448 373 446 373 446 373 b 451 373 449 373 449 373 b 734 265 485 373 628 372 b 876 19 855 143 835 19 b 896 65 890 19 896 36 b 778 374 896 143 848 298 z m 348 99 b 448 0 348 45 393 0 b 547 99 503 0 547 45 b 448 199 547 154 503 199 b 348 99 393 199 348 154 z',\n        },\n        fermataBelow: {\n            x_min: 0,\n            x_max: 622,\n            y_min: -368,\n            y_max: 0,\n            ha: 368,\n            o: 'm 778 -374 b 896 -65 848 -298 896 -143 b 876 -19 896 -36 890 -19 b 734 -265 835 -19 855 -143 b 451 -373 628 -372 485 -373 b 448 -373 449 -373 449 -373 b 445 -373 446 -373 446 -373 b 161 -265 410 -373 268 -372 b 20 -19 40 -143 60 -19 b 0 -65 6 -19 0 -37 b 120 -374 0 -143 49 -297 b 448 -530 255 -521 373 -530 b 778 -374 523 -530 642 -521 z m 348 -99 b 448 -199 348 -154 393 -199 b 547 -99 503 -199 547 -154 b 448 0 547 -45 503 0 b 348 -99 393 0 348 -45 z',\n        },\n        fermataLongAbove: {\n            x_min: 0,\n            x_max: 623,\n            y_min: 0,\n            y_max: 368,\n            ha: 368,\n            o: 'm 40 0 l 40 399 l 858 399 l 858 0 l 897 0 l 897 510 b 877 530 897 521 888 530 l 20 530 b 0 510 9 530 0 521 l 0 0 z m 350 148 b 449 49 350 94 395 49 b 547 148 504 49 547 94 b 449 248 547 203 504 248 b 350 148 395 248 350 203 z',\n        },\n        fermataLongBelow: {\n            x_min: 0,\n            x_max: 623,\n            y_min: -368,\n            y_max: 0,\n            ha: 368,\n            o: 'm 0 -510 b 20 -530 0 -521 9 -530 l 877 -530 b 897 -510 888 -530 897 -521 l 897 0 l 858 0 l 858 -399 l 40 -399 l 40 0 l 0 0 z m 350 -148 b 449 -248 350 -203 395 -248 b 547 -148 504 -248 547 -203 b 449 -49 547 -94 504 -49 b 350 -148 395 -49 350 -94 z',\n        },\n        fermataVeryLongAbove: {\n            x_min: 0,\n            x_max: 842,\n            y_min: 0,\n            y_max: 549,\n            ha: 549,\n            o: 'm 276 0 l 276 399 l 936 399 l 936 0 l 976 0 l 976 510 b 956 530 976 521 968 530 l 256 530 b 236 510 245 530 236 521 l 236 0 z m 507 148 b 606 49 507 94 552 49 b 706 148 661 49 706 94 b 606 248 706 203 661 248 b 507 148 552 248 507 203 z m 40 0 l 40 661 l 1172 661 l 1172 0 l 1212 0 l 1212 772 b 1192 791 1212 783 1204 791 l 20 791 b 0 772 9 791 0 783 l 0 0 z',\n        },\n        fermataVeryLongBelow: {\n            x_min: 0,\n            x_max: 842,\n            y_min: -549,\n            y_max: 0,\n            ha: 549,\n            o: 'm 236 -510 b 256 -530 236 -521 245 -530 l 956 -530 b 976 -510 968 -530 976 -521 l 976 0 l 936 0 l 936 -399 l 276 -399 l 276 0 l 236 0 z m 507 -148 b 606 -248 507 -203 552 -248 b 706 -148 661 -248 706 -203 b 606 -49 706 -94 661 -49 b 507 -148 552 -49 507 -94 z m 0 -772 b 20 -791 0 -783 9 -791 l 1192 -791 b 1212 -772 1204 -791 1212 -783 l 1212 0 l 1172 0 l 1172 -661 l 40 -661 l 40 0 l 0 0 z',\n        },\n        fermataShortAbove: {\n            x_min: 0,\n            x_max: 642,\n            y_min: 0,\n            y_max: 454,\n            ha: 454,\n            o: 'm 363 148 b 462 49 363 94 408 49 b 562 148 517 49 562 94 b 462 248 562 203 517 248 b 363 148 408 248 363 203 z m 477 645 b 461 654 474 649 467 654 b 445 645 455 654 448 649 l 4 32 b 0 20 3 29 0 23 b 20 0 0 9 9 0 l 82 0 b 98 9 88 0 95 4 l 461 514 l 827 9 b 842 0 829 4 837 0 l 904 0 b 924 20 916 0 924 9 b 920 32 924 23 922 29 z',\n        },\n        fermataShortBelow: {\n            x_min: 0,\n            x_max: 642,\n            y_min: -454,\n            y_max: 0,\n            ha: 454,\n            o: 'm 363 -148 b 462 -248 363 -203 408 -248 b 562 -148 517 -248 562 -203 b 462 -49 562 -94 517 -49 b 363 -148 408 -49 363 -94 z m 920 -32 b 924 -20 922 -29 924 -23 b 904 0 924 -9 916 0 l 842 0 b 827 -9 837 0 829 -4 l 461 -514 l 98 -9 b 82 0 95 -4 88 0 l 20 0 b 0 -20 9 0 0 -9 b 4 -32 0 -23 3 -29 l 445 -645 b 461 -654 448 -649 455 -654 b 477 -645 467 -654 474 -649 z',\n        },\n        breathMarkComma: {\n            x_min: 0,\n            x_max: 191,\n            y_min: 0,\n            y_max: 321,\n            ha: 321,\n            o: 'm 82 0 b 275 285 215 92 275 183 b 115 462 275 396 212 462 b 0 356 46 462 0 413 b 115 246 0 294 53 246 b 181 258 157 246 177 256 b 192 261 184 259 189 261 b 199 259 194 261 196 261 b 203 245 202 258 203 253 b 48 43 203 183 147 112 z',\n        },\n        caesura: {\n            x_min: 0,\n            x_max: 380,\n            y_min: 0,\n            y_max: 490,\n            ha: 490,\n            o: 'm 285 706 b 285 706 285 706 285 706 b 271 696 279 706 274 701 l 1 22 b 0 16 0 20 0 17 b 16 0 0 7 7 0 l 50 0 b 65 10 56 0 62 4 l 334 684 b 336 690 334 685 336 688 b 320 706 336 698 328 706 z m 213 22 b 212 16 213 20 212 17 b 228 0 212 7 219 0 l 262 0 b 276 10 268 0 274 4 l 546 684 b 547 690 547 685 547 688 b 531 706 547 698 540 706 l 497 706 b 482 696 491 706 485 701 z',\n        },\n        caesuraCurved: {\n            x_min: 0,\n            x_max: 368,\n            y_min: 0,\n            y_max: 491,\n            ha: 491,\n            o: 'm 262 707 b 245 693 253 707 246 701 b 1 26 233 603 177 348 b 0 17 0 23 0 20 b 16 0 0 9 6 0 b 30 7 22 0 27 3 b 318 687 259 341 304 602 b 318 690 318 688 318 688 b 301 707 318 698 310 707 z m 474 707 b 458 693 465 707 459 701 b 213 26 446 603 389 348 b 212 19 212 23 212 20 b 229 0 212 9 219 0 b 243 7 235 0 240 3 b 530 687 472 341 516 602 b 530 690 530 688 530 688 b 514 707 530 698 523 707 z',\n        },\n        restMaxima: {\n            x_min: 0,\n            x_max: 450,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 158 -360 b 180 -338 170 -360 180 -350 l 180 338 b 158 360 180 350 170 360 l 22 360 b 0 338 9 360 0 350 l 0 -338 b 22 -360 0 -350 9 -360 z m 626 -360 b 648 -338 638 -360 648 -350 l 648 338 b 626 360 648 350 638 360 l 490 360 b 468 338 477 360 468 350 l 468 -338 b 490 -360 468 -350 477 -360 z',\n        },\n        restDoubleWhole: {\n            x_min: 0,\n            x_max: 125,\n            y_min: -11,\n            y_max: 262,\n            ha: 273,\n            o: 'm 158 -16 b 180 6 171 -16 180 -6 l 180 356 b 158 377 180 367 171 377 l 22 377 b 0 356 10 377 0 367 l 0 6 b 22 -16 0 -6 10 -16 z',\n        },\n        restWhole: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -131,\n            y_max: 5,\n            ha: 136,\n            o: 'm 20 7 b 0 -13 9 7 0 -1 l 0 -168 b 20 -189 0 -180 9 -189 l 448 -189 b 468 -168 459 -189 468 -180 l 468 -13 b 448 7 468 -1 459 7 z',\n        },\n        restWholeLegerLine: {\n            x_min: -139,\n            x_max: 464,\n            y_min: -122,\n            y_max: 14,\n            ha: 136,\n            o: 'm 449 20 l 19 20 l -200 20 l -200 -20 l 0 -20 l 0 -156 b 19 -176 0 -167 7 -176 l 449 -176 b 468 -156 461 -176 468 -167 l 468 -20 l 668 -20 l 668 20 z',\n        },\n        restHalf: {\n            x_min: 0,\n            x_max: 325,\n            y_min: -4,\n            y_max: 132,\n            ha: 136,\n            o: 'm 0 14 b 20 -6 0 -6 0 -6 l 448 -6 b 468 14 468 -6 468 -6 l 468 170 b 448 190 468 190 468 190 l 20 190 b 0 170 0 190 0 190 z',\n        },\n        restHalfLegerLine: {\n            x_min: -139,\n            x_max: 464,\n            y_min: -14,\n            y_max: 122,\n            ha: 136,\n            o: 'm 668 20 l 468 20 l 468 156 b 449 176 468 167 461 176 l 19 176 b 0 156 7 176 0 167 l 0 20 l -200 20 l -200 -20 l 19 -20 l 449 -20 l 668 -20 z',\n        },\n        restQuarter: {\n            x_min: 0,\n            x_max: 235,\n            y_min: -331,\n            y_max: 401,\n            ha: 732,\n            o: 'm 331 -239 b 323 -229 330 -238 327 -235 l 157 -24 b 154 -16 156 -23 154 -19 b 157 -3 154 -12 156 -6 l 304 219 b 307 229 305 222 307 226 l 307 242 b 302 253 307 246 305 251 l 69 569 b 55 577 69 569 63 577 b 43 573 50 577 48 576 b 36 559 37 569 36 563 b 40 543 36 550 40 543 l 150 393 b 154 376 153 389 154 383 b 150 359 154 370 153 363 l 4 137 b 1 125 3 134 1 128 l 1 112 b 6 101 1 108 3 104 l 167 -99 b 131 -95 161 -98 148 -95 b 49 -124 107 -95 75 -101 b 0 -229 17 -153 0 -193 b 16 -285 0 -249 4 -269 b 154 -468 46 -331 154 -468 b 171 -477 154 -468 161 -477 b 180 -474 174 -477 177 -477 b 190 -456 187 -468 190 -462 b 186 -444 190 -451 187 -446 b 135 -353 181 -436 135 -353 b 125 -307 135 -353 125 -333 b 150 -246 125 -288 131 -265 b 206 -223 167 -229 187 -223 b 252 -236 225 -223 240 -229 l 308 -272 b 320 -275 308 -272 314 -275 b 334 -268 325 -275 330 -274 b 338 -255 337 -262 338 -259 b 334 -243 338 -251 337 -248 z',\n        },\n        rest8th: {\n            x_min: 0,\n            x_max: 276,\n            y_min: -255,\n            y_max: 204,\n            ha: 459,\n            o: 'm 384 292 b 379 294 383 292 380 294 b 360 282 370 294 363 289 b 245 141 354 274 310 189 b 180 112 226 127 203 117 b 206 181 196 131 206 154 b 104 284 206 238 160 284 b 0 181 46 284 0 238 b 65 85 0 137 27 101 b 144 68 86 75 115 68 b 269 109 186 68 230 81 b 320 157 287 122 304 140 l 156 -356 l 194 -367 l 396 268 b 397 275 397 269 397 272 b 384 292 397 282 393 288 z',\n        },\n        rest16th: {\n            x_min: 1,\n            x_max: 344,\n            y_min: -507,\n            y_max: 204,\n            ha: 711,\n            o: 'm 494 268 b 495 275 495 271 495 272 b 482 292 495 282 491 289 b 475 294 480 294 477 294 b 456 282 467 294 461 289 b 285 115 422 213 364 135 b 310 184 302 135 310 158 b 203 284 310 240 259 284 b 104 177 145 281 104 233 b 171 84 105 134 134 98 b 252 69 197 72 225 69 b 423 164 324 72 380 108 l 423 164 l 359 -65 b 183 -245 338 -132 256 -226 b 207 -176 199 -225 207 -200 b 102 -76 207 -118 158 -76 b 1 -183 45 -76 1 -125 b 69 -275 1 -226 32 -262 b 150 -289 96 -287 121 -289 b 321 -194 222 -287 278 -251 l 174 -720 l 213 -730 z',\n        },\n        rest32nd: {\n            x_min: 0,\n            x_max: 391,\n            y_min: -507,\n            y_max: 460,\n            ha: 967,\n            o: 'm 217 71 b 408 171 348 71 402 161 l 354 -46 b 184 -240 323 -121 268 -217 b 204 -171 200 -220 204 -197 b 102 -76 204 -114 158 -76 b 0 -177 46 -76 0 -120 b 140 -288 0 -252 63 -288 b 320 -186 216 -288 276 -246 l 189 -721 l 228 -730 l 562 638 b 563 644 563 639 563 642 b 549 661 563 652 557 658 b 543 662 547 662 544 662 b 524 649 534 662 528 657 b 361 487 497 589 431 504 b 383 556 379 508 383 530 b 282 652 383 611 338 652 b 179 549 226 652 179 609 b 249 451 179 505 210 464 b 311 439 268 444 288 441 b 330 441 317 439 323 439 b 498 541 400 445 458 485 l 442 310 b 271 117 413 238 351 137 b 292 186 288 138 292 160 b 189 282 292 243 245 282 b 88 180 132 282 88 238 b 217 71 88 112 153 71 z',\n        },\n        rest64th: {\n            x_min: 0,\n            x_max: 423,\n            y_min: -758,\n            y_max: 464,\n            ha: 1222,\n            o: 'm 207 -1083 l 246 -1092 b 608 644 282 -919 605 634 b 609 649 608 647 609 648 b 595 667 609 658 603 665 b 589 668 593 668 592 668 b 569 654 577 668 575 664 b 474 521 563 644 530 573 b 412 487 456 505 435 494 b 432 546 425 503 432 526 b 328 649 432 606 382 649 b 226 546 275 649 226 608 b 360 438 226 465 300 438 b 501 492 419 438 474 465 b 546 546 527 518 533 526 l 547 547 l 500 323 b 399 161 491 300 452 209 b 337 125 382 144 360 132 b 357 184 350 143 357 134 b 253 288 357 235 317 288 b 151 187 190 288 151 236 b 285 76 151 138 183 76 b 471 184 412 76 465 173 l 423 -45 b 324 -204 413 -69 374 -158 b 262 -240 305 -222 284 -233 b 281 -180 274 -223 281 -212 b 177 -78 281 -147 258 -78 b 75 -180 98 -78 75 -153 b 209 -289 75 -207 88 -289 b 395 -181 330 -289 389 -193 l 350 -397 b 248 -564 337 -449 285 -530 b 186 -599 229 -580 207 -592 b 204 -540 197 -583 204 -563 b 102 -438 204 -501 174 -438 b 0 -540 29 -438 0 -501 b 132 -648 0 -579 24 -648 b 320 -540 266 -648 315 -552 z',\n        },\n        rest128th: {\n            x_min: -1,\n            x_max: 475,\n            y_min: -759,\n            y_max: 717,\n            ha: 1476,\n            o: 'm 677 1028 b 664 1032 672 1031 667 1032 b 644 1018 654 1032 649 1028 b 549 886 638 1008 605 937 b 487 851 531 870 510 858 b 507 910 500 868 507 890 b 403 1014 507 971 456 1014 b 301 910 350 1014 301 972 b 435 802 301 829 374 802 b 576 857 494 802 549 829 b 621 910 602 883 608 890 l 622 912 l 575 687 b 474 526 566 664 527 573 b 412 490 456 508 435 497 b 432 549 425 507 432 498 b 328 652 432 599 392 652 b 226 552 265 652 226 600 b 360 441 226 503 258 441 b 546 549 487 441 540 537 l 498 320 b 399 160 488 295 449 207 b 337 125 380 143 359 131 b 356 184 348 141 356 153 b 252 287 356 217 333 287 b 150 184 173 287 150 212 b 284 76 150 157 163 76 b 469 183 405 76 464 171 l 425 -33 b 323 -200 412 -85 360 -166 b 261 -235 304 -216 282 -228 b 279 -176 272 -219 279 -199 b 177 -72 279 -137 249 -72 b 75 -176 104 -72 75 -137 b 207 -284 75 -215 99 -284 b 395 -176 341 -284 390 -187 l 347 -409 b 248 -566 330 -461 282 -533 b 186 -600 229 -582 207 -593 b 204 -541 197 -583 204 -564 b 102 -438 204 -501 174 -438 b -1 -541 29 -438 -1 -503 b 132 -649 -1 -580 24 -649 b 318 -546 256 -649 307 -567 l 206 -1084 l 245 -1093 b 683 1008 281 -920 680 996 b 684 1015 683 1009 684 1014 b 677 1028 684 1020 683 1024 z',\n        },\n        dynamicPiano: {\n            x_min: -95,\n            x_max: 317,\n            y_min: -163,\n            y_max: 263,\n            ha: 426,\n            o: 'm 186 -235 l 186 -206 l 78 -206 l 161 26 l 166 16 b 229 -29 166 16 180 -16 b 256 -32 238 -32 248 -32 b 445 166 336 -32 415 49 b 456 246 454 197 456 223 b 374 373 456 343 396 367 b 356 376 369 374 361 376 b 242 314 311 376 266 338 l 238 310 l 235 315 b 154 377 235 315 204 370 b 138 379 148 377 144 379 b 0 226 91 379 42 346 l 26 213 b 63 301 32 232 46 278 b 102 328 72 314 89 325 b 108 328 104 328 107 328 b 120 325 112 328 117 327 b 127 304 125 321 127 314 b 94 192 127 269 101 206 l -49 -206 l -137 -206 l -137 -235 z m 226 17 b 215 19 223 17 217 17 b 187 81 193 27 187 53 b 204 180 187 125 203 177 b 297 317 217 235 259 295 b 324 325 307 323 315 325 b 336 324 328 325 333 325 b 350 311 341 323 347 317 b 356 278 354 302 356 291 b 333 161 356 239 341 187 b 242 20 314 105 278 37 b 226 17 238 17 230 17 z',\n        },\n        dynamicMezzo: {\n            x_min: -7,\n            x_max: 374,\n            y_min: -2,\n            y_max: 251,\n            ha: 253,\n            o: 'm 488 63 b 467 48 481 50 474 48 b 459 49 464 48 462 48 b 449 65 452 52 449 58 b 461 112 449 76 455 94 b 474 157 464 121 471 150 b 492 281 482 183 492 242 b 491 301 492 288 492 295 b 436 359 484 340 467 359 b 340 307 399 359 359 331 l 337 301 l 334 308 b 272 359 334 308 311 359 b 177 310 232 359 202 343 l 173 304 l 171 311 b 117 360 171 311 153 353 b 96 361 109 361 102 361 b 29 328 60 361 39 340 b -10 252 20 318 0 284 l 12 240 b 68 318 12 240 36 318 b 75 317 71 318 72 318 b 86 295 84 314 86 307 b 59 194 86 275 75 240 b 1 20 59 193 6 33 b 0 13 1 17 0 16 b 3 4 0 10 1 7 b 14 -1 6 1 9 -1 l 36 -1 b 91 -1 58 -1 86 -1 b 107 22 94 -1 101 -1 b 127 99 114 53 121 79 b 235 310 132 121 186 310 b 243 305 238 310 242 308 b 248 289 246 302 248 297 b 216 160 248 265 233 219 b 173 22 194 89 173 22 b 173 16 173 20 173 19 b 176 3 173 12 173 6 b 187 -1 179 0 183 -1 l 266 -1 b 282 16 272 -1 279 0 b 284 26 282 17 284 22 b 392 302 312 228 359 288 b 396 304 393 302 395 304 l 397 304 b 400 302 399 304 399 302 b 408 289 403 301 408 297 b 369 140 408 275 399 217 b 356 75 360 117 356 95 b 370 23 356 55 360 37 b 428 -3 382 6 408 -3 b 536 99 492 -3 517 49 b 539 108 537 102 537 105 l 514 120 b 488 63 514 120 498 81 z',\n        },\n        dynamicForte: {\n            x_min: -137,\n            x_max: 334,\n            y_min: -193,\n            y_max: 421,\n            ha: 614,\n            o: 'm -122 -86 b -197 -161 -161 -86 -197 -122 b -81 -278 -197 -236 -147 -278 b 35 -228 -35 -278 -1 -264 b 202 173 98 -164 167 50 b 238 297 215 219 228 264 l 238 300 l 341 300 b 356 314 350 300 356 305 l 356 346 b 341 360 356 354 350 360 l 256 360 l 256 364 b 330 554 297 511 308 537 b 359 566 341 563 351 566 b 366 564 361 566 364 564 b 380 553 373 563 377 559 b 382 546 382 550 382 549 b 373 528 382 539 379 531 b 351 478 359 517 351 498 b 354 458 351 471 353 465 b 384 426 359 445 370 432 b 410 420 390 423 400 420 b 445 431 420 420 432 423 b 478 472 459 438 474 456 b 481 497 481 480 481 488 b 467 550 481 514 477 533 b 376 605 455 572 422 598 b 351 606 369 606 360 606 b 225 553 317 606 272 595 b 122 363 187 520 154 456 l 122 360 l 13 360 b -1 346 4 360 -1 354 l -1 314 b 13 300 -1 305 4 300 l 102 300 l 102 294 b 66 140 88 236 76 187 b 24 -35 55 86 42 32 l 20 -52 b -53 -235 -10 -170 -19 -212 b -78 -242 -60 -239 -69 -242 b -98 -235 -85 -242 -92 -239 b -105 -222 -102 -232 -105 -228 b -105 -219 -105 -220 -105 -220 b -94 -204 -104 -213 -101 -207 b -58 -144 -66 -193 -58 -167 b -122 -86 -58 -124 -71 -86 z',\n        },\n        dynamicRinforzando: {\n            x_min: -12,\n            x_max: 230,\n            y_min: 0,\n            y_max: 254,\n            ha: 254,\n            o: 'm 272 364 b 200 341 239 364 212 348 b 168 310 187 333 177 321 l 164 304 b 109 363 164 304 151 353 b 88 366 102 364 95 366 b 22 331 52 366 32 343 b -17 255 13 321 -7 287 l 4 243 b 60 321 4 243 29 321 b 68 320 63 321 65 321 b 78 297 75 317 78 308 b 49 180 78 272 65 230 l 0 23 b 0 17 0 22 0 20 b 3 4 0 13 0 7 b 14 0 6 1 10 0 l 94 0 b 109 17 99 0 107 1 b 111 27 109 19 111 23 b 209 302 140 230 186 279 b 225 311 215 308 220 311 b 229 310 226 311 228 311 b 233 304 233 307 233 305 b 233 301 233 302 233 301 b 216 268 220 291 216 279 b 225 243 216 259 219 249 b 262 229 235 232 249 229 b 304 242 279 229 295 235 b 331 308 320 255 331 275 b 272 364 331 341 304 364 z',\n        },\n        dynamicSforzando: {\n            x_min: 0,\n            x_max: 208,\n            y_min: -5,\n            y_max: 263,\n            ha: 268,\n            o: 'm 242 328 b 217 289 222 317 217 300 b 258 249 217 274 230 249 b 298 284 285 249 295 269 b 300 295 300 287 300 291 b 189 379 300 328 272 379 b 49 259 92 379 49 315 b 99 173 49 229 59 196 b 164 137 117 163 140 151 b 194 88 189 122 194 102 b 124 24 194 73 177 24 b 72 46 82 24 72 39 b 73 49 72 48 72 49 b 96 96 78 52 96 62 b 50 150 96 134 72 150 b 0 91 29 150 0 134 b 124 -7 0 26 49 -7 b 282 111 199 -7 282 24 b 171 239 282 197 207 219 b 128 292 135 259 128 268 b 193 347 128 317 156 347 b 242 328 230 347 242 328 z',\n        },\n        dynamicZ: {\n            x_min: -42,\n            x_max: 239,\n            y_min: -1,\n            y_max: 258,\n            ha: 259,\n            o: 'm 229 292 b 235 288 232 292 233 291 b 236 284 236 285 236 285 b 233 278 236 281 235 279 b -42 55 232 276 -4 85 b -60 24 -56 43 -60 33 b -50 4 -60 12 -50 4 b -35 0 -45 1 -40 0 b 9 29 -14 0 1 19 b 50 69 17 43 26 69 b 89 35 75 69 81 50 b 170 -1 104 10 137 -1 b 243 22 197 -1 223 6 b 304 147 288 56 304 118 b 264 196 304 176 294 196 b 226 156 239 196 226 174 b 251 117 226 128 249 122 b 251 108 251 114 251 111 b 243 79 251 98 249 88 b 212 56 236 68 223 56 b 202 59 209 56 204 56 b 163 92 194 63 186 75 b 108 122 140 109 114 120 b 105 125 105 124 105 124 b 107 128 105 127 107 128 b 312 304 107 128 302 294 b 341 340 324 315 336 327 b 344 347 343 341 344 346 l 344 356 b 333 369 343 367 336 369 l 331 369 l 262 363 b 217 361 245 361 230 361 b 156 366 193 361 174 363 b 114 372 147 367 125 372 b 107 370 111 372 108 370 b 86 344 98 367 89 360 b 37 222 72 265 42 232 b 37 219 37 220 37 220 b 50 207 37 213 43 207 l 66 207 b 81 225 75 207 76 215 b 108 291 85 235 105 285 b 118 297 111 297 112 297 b 167 289 125 295 144 291 b 181 289 171 289 177 289 b 229 292 202 289 222 291 z',\n        },\n        ornamentTrill: {\n            x_min: -12,\n            x_max: 383,\n            y_min: 0,\n            y_max: 383,\n            ha: 383,\n            o: 'm 464 396 b 376 359 408 396 376 359 l 364 370 b 346 377 357 377 346 377 l 197 377 l 246 528 b 246 531 246 530 246 531 b 226 552 246 541 236 552 l 213 552 b 199 544 209 552 202 547 b 124 482 196 541 130 487 b 117 471 118 478 117 471 b 84 377 117 471 102 431 l 3 377 b -17 360 -14 377 -17 360 l -17 341 b 3 324 -17 325 3 324 l 66 324 b 0 85 35 229 0 117 b 92 0 0 16 48 0 b 186 35 137 0 186 35 b 194 13 186 35 190 24 b 212 0 199 1 212 0 l 276 0 b 298 16 295 0 298 16 l 298 43 b 321 147 298 75 321 147 l 382 284 b 412 325 382 284 396 311 b 446 341 425 336 438 341 b 452 340 448 341 451 341 b 428 288 432 327 428 305 b 485 233 428 271 446 233 b 552 308 534 233 552 264 b 464 396 552 353 520 396 z m 222 143 b 147 78 210 104 171 78 b 137 79 143 78 140 78 b 121 115 125 85 121 99 b 137 190 121 148 137 190 l 180 324 l 275 324 b 279 320 279 324 279 320 b 222 143 279 320 235 187 z',\n        },\n        ornamentTurn: {\n            x_min: 0,\n            x_max: 456,\n            y_min: 0,\n            y_max: 232,\n            ha: 232,\n            o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 328 255 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 328 79 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n        },\n        ornamentTurnSlash: {\n            x_min: 0,\n            x_max: 456,\n            y_min: -80,\n            y_max: 313,\n            ha: 393,\n            o: 'm 527 334 b 442 269 488 334 442 312 b 501 204 442 228 468 204 b 570 226 533 204 540 226 b 613 164 598 226 613 204 l 613 163 b 550 98 613 127 586 98 b 448 143 508 98 485 109 l 354 230 l 354 431 b 336 451 354 442 347 451 l 323 451 b 302 431 311 451 302 442 l 302 279 l 298 284 b 174 334 262 317 223 334 b 0 170 92 334 0 278 b 131 0 0 68 58 0 b 215 65 170 0 215 22 b 156 130 215 107 189 130 b 86 108 124 130 117 108 b 43 170 59 108 43 130 l 43 171 b 108 236 43 207 72 236 b 209 192 150 236 171 225 l 302 104 l 302 -96 b 323 -115 302 -108 311 -115 l 336 -115 b 354 -96 347 -115 354 -108 l 354 55 l 360 50 b 482 0 396 17 433 0 b 657 164 564 0 657 56 b 527 334 657 266 600 334 z',\n        },\n        ornamentMordent: {\n            x_min: 0,\n            x_max: 473,\n            y_min: -77,\n            y_max: 316,\n            ha: 393,\n            o: 'm 647 302 l 562 166 l 446 347 b 429 357 444 353 435 357 b 413 347 423 357 416 353 l 363 262 l 363 435 b 343 455 363 446 354 455 l 331 455 b 311 435 320 455 311 446 l 311 173 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 171 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 311 95 l 311 -91 b 331 -111 311 -102 320 -111 l 343 -111 b 363 -91 354 -111 363 -102 l 363 184 l 366 189 l 478 10 b 495 0 481 4 490 0 b 513 10 501 0 510 4 l 681 281 z',\n        },\n        ornamentShortTrill: {\n            x_min: 0,\n            x_max: 473,\n            y_min: 0,\n            y_max: 248,\n            ha: 248,\n            o: 'm 647 302 l 562 166 l 446 347 b 431 357 444 353 436 357 b 413 347 425 357 416 353 l 310 171 l 203 347 b 186 357 200 353 192 357 b 168 347 180 357 173 353 l 0 69 l 35 48 l 120 189 l 226 10 b 243 0 229 4 238 0 b 261 10 249 0 258 4 l 366 189 l 478 9 b 495 0 481 3 490 0 b 513 10 501 0 510 4 l 681 281 z',\n        },\n        ornamentTremblement: {\n            x_min: 0,\n            x_max: 654,\n            y_min: 0,\n            y_max: 248,\n            ha: 248,\n            o: 'm 907 302 l 822 166 l 708 348 b 691 357 704 354 701 357 b 674 347 685 357 677 353 l 648 302 l 563 166 l 449 348 b 432 357 446 354 438 357 b 415 347 426 357 418 353 l 415 346 l 311 171 l 203 348 b 186 357 200 354 192 357 b 168 348 177 357 171 354 l 168 347 l 0 69 l 35 48 l 120 190 l 226 10 b 243 0 229 4 238 0 l 245 0 b 261 10 251 0 258 4 l 367 189 l 480 10 b 497 0 482 4 491 0 b 513 10 503 0 510 4 l 625 192 l 739 10 b 756 0 742 4 750 0 b 772 10 762 0 769 4 l 942 282 z',\n        },\n        ornamentPrecompAppoggTrill: {\n            x_min: 0,\n            x_max: 680,\n            y_min: 0,\n            y_max: 388,\n            ha: 388,\n            o: 'm 860 170 l 746 353 b 729 361 743 359 737 361 b 713 351 723 361 716 357 l 685 307 l 600 170 l 487 353 b 481 359 485 356 484 357 b 469 361 478 360 472 361 b 452 351 464 361 455 357 l 348 176 l 240 353 b 223 361 238 359 229 361 b 206 353 215 361 209 359 l 40 76 l 40 541 b 20 559 39 552 30 559 b 0 541 10 559 1 552 l 0 26 b 19 1 0 16 9 4 b 26 0 20 1 24 0 b 48 13 35 0 43 6 l 72 52 l 157 194 l 265 14 b 282 4 268 9 276 4 b 298 14 288 4 295 9 l 405 193 l 517 14 b 534 4 520 9 528 4 b 550 14 540 4 547 9 l 664 196 l 776 14 b 793 4 779 9 788 4 b 811 14 799 4 808 9 l 979 287 l 945 307 z',\n        },\n        ornamentPrecompSlideTrillDAnglebert: {\n            x_min: 0,\n            x_max: 662,\n            y_min: -158,\n            y_max: 248,\n            ha: 406,\n            o: 'm 834 166 l 720 348 b 704 357 717 354 713 357 b 687 348 697 357 690 353 l 661 302 l 660 302 l 575 166 l 461 348 b 455 354 459 350 456 353 b 444 357 452 356 448 357 b 428 347 438 357 431 353 l 323 171 l 215 347 b 213 350 215 348 215 350 b 213 350 213 350 213 350 l 213 351 l 212 351 l 212 353 l 210 353 l 210 353 l 209 354 b 207 354 209 354 207 354 b 197 357 206 356 200 357 b 197 357 197 357 197 357 b 194 357 196 357 196 357 b 180 347 187 357 183 353 l 180 346 l 69 164 b 0 -50 23 88 0 17 b 49 -219 0 -108 16 -163 b 66 -228 52 -223 59 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -215 b 84 -197 86 -204 85 -200 b 40 -52 55 -150 40 -102 b 104 143 40 10 62 73 l 131 190 l 239 10 b 256 0 242 4 249 0 l 256 0 b 272 10 262 0 269 4 l 379 189 l 491 10 b 508 0 494 4 503 0 b 508 0 508 0 508 0 l 508 0 b 526 10 514 0 521 4 l 638 192 l 750 10 b 768 0 755 4 762 0 l 768 0 b 785 10 773 0 782 4 l 785 10 l 953 282 l 919 302 z',\n        },\n        ornamentPrecompSlideTrillBach: {\n            x_min: 0,\n            x_max: 662,\n            y_min: -158,\n            y_max: 321,\n            ha: 479,\n            o: 'm 834 166 l 720 348 b 704 357 716 354 713 357 b 687 348 698 357 690 354 l 660 304 l 660 302 l 632 259 l 632 442 b 612 462 632 454 624 462 l 599 462 b 579 442 588 462 579 454 l 579 173 l 575 166 l 461 348 b 455 356 459 351 458 354 b 445 359 452 357 448 359 b 428 348 439 359 431 354 l 323 171 l 215 347 b 213 350 215 348 213 350 l 213 351 l 212 353 l 210 353 l 210 354 l 207 354 b 197 357 204 356 200 357 b 180 348 189 357 183 354 l 179 346 l 69 164 b 0 -49 23 88 0 19 b 49 -217 0 -107 17 -163 b 66 -228 52 -223 60 -228 b 76 -225 69 -228 73 -226 b 86 -207 82 -222 86 -213 b 84 -197 86 -204 85 -200 b 42 -50 56 -148 42 -101 b 104 144 42 12 62 75 l 131 190 l 239 10 b 256 0 242 4 251 0 b 274 10 262 0 271 4 l 379 190 l 491 10 b 508 0 494 4 503 0 b 526 10 514 0 523 4 l 579 98 l 579 -84 b 599 -104 579 -95 588 -104 l 612 -104 b 632 -84 624 -104 632 -95 l 632 183 l 638 192 l 750 10 b 768 0 753 4 762 0 b 785 10 773 0 782 4 l 953 282 l 919 302 z',\n        },\n        ornamentPrecompTrillSuffixDandrieu: {\n            x_min: 0,\n            x_max: 662,\n            y_min: 0,\n            y_max: 406,\n            ha: 406,\n            o: 'm 904 575 b 887 585 901 580 893 585 b 877 582 884 585 880 583 b 867 564 871 579 867 570 b 870 554 867 562 868 557 b 912 408 897 505 912 458 b 850 213 912 346 891 282 l 822 167 l 714 348 b 697 357 711 354 703 357 b 680 348 691 357 683 354 l 575 168 l 462 348 b 445 357 459 354 451 357 b 428 348 439 357 431 354 l 315 167 l 203 348 b 186 357 200 354 192 357 b 168 348 180 357 171 354 l 0 76 l 35 55 l 120 192 l 233 10 b 249 0 238 4 240 0 b 266 10 255 0 264 4 l 294 55 l 379 192 l 492 9 b 498 3 494 6 495 4 b 508 0 501 1 505 0 b 526 10 514 0 523 4 l 631 186 l 737 13 b 746 3 739 10 743 4 b 756 0 749 1 753 0 b 773 9 762 0 770 3 l 884 193 b 953 406 930 269 953 338 b 904 575 953 464 936 520 z',\n        },\n        ornamentPrecompDoubleCadenceUpperPrefix: {\n            x_min: 0,\n            x_max: 857,\n            y_min: 0,\n            y_max: 248,\n            ha: 248,\n            o: 'm 383 140 b 413 189 399 166 412 187 b 520 10 423 171 516 16 b 537 0 523 4 530 0 b 554 10 543 0 550 4 b 660 189 557 16 649 171 b 772 10 671 173 766 19 b 791 0 778 1 785 0 b 806 10 796 0 802 4 b 919 192 809 16 907 174 l 1031 10 b 1048 0 1035 4 1043 0 l 1048 0 b 1066 10 1054 1 1063 4 l 1066 10 l 1234 282 l 1200 302 l 1115 166 l 1002 348 b 985 357 998 354 994 357 b 968 348 978 357 971 353 l 855 166 b 742 348 845 183 746 341 b 726 357 737 354 732 357 b 708 348 719 357 711 354 b 603 171 704 341 613 189 b 495 348 593 189 498 343 b 478 357 492 353 487 357 b 461 348 469 357 464 353 b 357 173 459 346 393 235 b 213 79 320 111 284 79 b 66 176 143 79 95 112 b 40 279 43 228 40 275 b 20 300 40 291 30 300 b 0 278 9 300 0 289 b 29 161 0 276 3 219 b 213 39 65 81 130 39 b 383 140 297 39 346 73 z',\n        },\n        ornamentPrecompTrillLowerSuffix: {\n            x_min: 0,\n            x_max: 565,\n            y_min: -171,\n            y_max: 249,\n            ha: 420,\n            o: 'm 347 168 l 235 348 b 217 359 230 354 226 359 b 200 348 209 359 203 353 b 3 30 197 344 6 35 b 0 20 0 26 0 24 b 22 0 0 9 10 0 b 37 9 27 0 35 3 l 151 192 b 265 10 161 174 262 13 b 281 0 268 6 272 0 b 298 10 289 0 295 3 l 403 186 l 511 10 b 528 0 516 4 521 0 b 546 10 537 0 541 4 l 698 265 b 775 22 744 202 775 112 b 700 -215 775 -60 752 -144 b 696 -226 697 -219 696 -222 b 704 -243 696 -232 700 -239 b 717 -246 708 -246 713 -246 b 733 -239 723 -246 729 -243 b 814 20 789 -160 814 -69 b 711 312 814 132 773 242 b 696 320 707 317 700 320 b 680 310 691 320 684 318 b 595 168 671 297 602 181 l 488 348 b 471 359 484 354 478 359 b 454 348 464 359 456 353 b 347 168 449 343 357 186 z',\n        },\n        brassMuteClosed: {\n            x_min: 0,\n            x_max: 312,\n            y_min: 0,\n            y_max: 312,\n            ha: 312,\n            o: 'm 22 256 b 0 225 7 256 0 240 b 22 193 0 209 7 193 l 193 193 l 193 22 b 225 0 193 7 209 0 b 256 22 240 0 256 7 l 256 193 l 428 193 b 449 225 442 193 449 209 b 428 256 449 240 442 256 l 256 256 l 256 428 b 225 449 256 442 240 449 b 193 428 209 449 193 442 l 193 256 z',\n        },\n        brassMuteOpen: {\n            x_min: 0,\n            x_max: 280,\n            y_min: 0,\n            y_max: 280,\n            ha: 280,\n            o: 'm 202 403 b 0 202 91 403 0 312 b 202 0 0 91 91 0 b 403 202 312 0 403 91 b 202 403 403 312 312 403 z m 202 40 b 40 202 112 40 40 112 b 202 363 40 291 112 363 b 363 202 291 363 363 291 b 202 40 363 112 291 40 z',\n        },\n        stringsDownBow: {\n            x_min: 0,\n            x_max: 315,\n            y_min: 0,\n            y_max: 293,\n            ha: 293,\n            o: 'm 40 0 l 40 291 l 413 291 l 413 0 l 454 0 l 454 402 b 433 422 454 413 445 422 l 20 422 b 0 402 9 422 0 402 l 0 0 z',\n        },\n        stringsUpBow: {\n            x_min: 0,\n            x_max: 262,\n            y_min: 0,\n            y_max: 343,\n            ha: 343,\n            o: 'm 374 485 b 357 494 372 490 363 494 l 337 494 b 318 481 330 494 321 488 l 189 118 l 59 481 b 40 494 56 488 48 494 l 20 494 b 0 474 9 494 0 485 b 1 467 0 472 1 468 l 170 13 b 189 0 173 6 181 0 b 207 13 196 0 204 6 l 376 467 b 377 474 376 468 377 472 b 374 485 377 477 376 482 z',\n        },\n        stringsHarmonic: {\n            x_min: 0,\n            x_max: 181,\n            y_min: 0,\n            y_max: 181,\n            ha: 181,\n            o: 'm 131 220 b 220 131 181 220 220 181 b 131 40 220 81 181 40 b 40 131 81 40 40 81 b 131 220 40 181 81 220 z m 131 261 b 0 131 59 261 0 203 b 131 0 0 59 59 0 b 261 131 203 0 261 59 b 131 261 261 203 203 261 z',\n        },\n        pluckedSnapPizzicatoAbove: {\n            x_min: 0,\n            x_max: 269,\n            y_min: 0,\n            y_max: 389,\n            ha: 389,\n            o: 'm 213 540 b 194 560 213 552 204 560 b 174 540 183 560 174 552 l 174 386 b 0 193 76 376 0 294 b 194 0 0 86 86 0 b 387 193 301 0 387 86 b 213 386 387 294 311 376 z m 194 40 b 40 193 109 40 40 109 b 174 346 40 271 98 336 l 174 193 b 194 173 174 183 183 173 b 213 193 204 173 213 183 l 213 346 b 347 193 289 336 347 271 b 194 40 347 109 278 40 z',\n        },\n        pluckedSnapPizzicatoBelow: {\n            x_min: 0,\n            x_max: 269,\n            y_min: 0,\n            y_max: 389,\n            ha: 389,\n            o: 'm 213 174 b 387 367 311 184 387 266 b 193 560 387 474 301 560 b 0 367 86 560 0 474 b 174 174 0 266 76 184 l 174 20 b 194 0 174 9 183 0 b 213 20 204 0 213 9 z m 194 520 b 347 367 278 520 347 452 b 213 215 347 289 289 225 l 213 367 b 194 387 213 377 204 387 b 174 367 183 387 174 377 l 174 215 b 40 367 98 225 40 289 b 194 520 40 452 109 520 z',\n        },\n        keyboardPedalPed: {\n            x_min: 0,\n            x_max: 981,\n            y_min: -10,\n            y_max: 545,\n            ha: 555,\n            o: 'm 1354 12 b 1413 78 1385 12 1413 42 b 1354 145 1413 115 1385 145 b 1293 78 1320 145 1293 115 b 1354 12 1293 42 1320 12 z m 1092 88 b 1080 86 1089 86 1084 86 b 1004 203 1037 86 1004 137 b 1107 376 1004 360 1097 374 b 1149 209 1129 336 1149 287 b 1092 88 1149 117 1130 95 z m 752 393 b 795 344 779 393 795 372 b 770 285 795 325 788 304 b 693 203 737 249 697 207 b 688 264 690 225 688 245 b 752 393 688 347 714 393 z m 245 507 b 220 544 245 533 235 544 b 217 544 219 544 219 544 b 186 510 206 546 192 537 b 143 464 179 478 163 464 b 134 465 140 464 137 464 b 102 516 117 467 102 487 b 141 613 102 541 112 576 b 347 721 212 711 315 721 b 356 721 351 721 354 721 b 275 560 344 701 297 616 b 259 495 274 557 259 528 b 272 452 259 480 264 465 b 373 323 297 416 350 354 b 387 284 382 311 387 298 b 350 222 387 265 376 245 b 230 140 301 180 252 154 b 128 39 215 130 128 92 b 134 12 128 30 130 22 b 173 -14 144 -7 157 -14 b 264 40 204 -14 243 17 b 333 98 281 58 302 98 b 389 39 357 98 373 60 b 478 -10 416 1 435 -10 b 622 96 527 -10 559 43 b 740 -10 626 86 667 -10 b 929 95 827 -10 917 85 b 1086 -12 950 37 1018 -12 b 1120 -7 1097 -12 1109 -10 b 1264 213 1212 17 1264 111 b 1263 248 1264 225 1263 236 b 815 664 1228 544 907 647 b 785 668 805 665 795 668 b 779 668 783 668 782 668 b 757 654 769 668 760 665 b 757 649 757 652 757 651 b 786 618 759 629 783 619 b 818 606 796 613 808 611 b 1071 435 1007 534 1066 445 b 909 181 930 386 909 256 b 910 141 909 164 909 151 b 786 78 899 127 844 78 b 708 151 726 78 710 144 b 799 230 711 154 742 181 b 864 350 845 271 864 312 b 757 456 864 410 815 456 b 599 222 644 456 599 328 b 609 141 599 192 602 164 b 563 104 608 140 595 122 b 540 98 556 99 549 98 b 459 140 513 98 480 118 b 397 184 413 189 399 184 b 475 279 403 189 454 226 b 482 311 480 289 482 300 b 449 410 482 359 452 405 b 361 533 442 419 383 503 b 354 560 356 541 354 550 b 386 651 353 588 372 622 b 429 713 405 693 426 710 b 557 592 521 688 557 628 b 549 569 557 582 554 573 b 523 559 540 562 531 559 b 459 592 495 559 469 583 b 425 613 451 600 438 613 b 409 608 419 613 415 612 b 399 586 402 602 399 595 b 399 583 397 585 399 585 b 409 552 399 573 405 562 b 541 458 441 487 492 458 b 608 480 564 458 588 465 b 648 572 632 497 648 531 b 429 778 648 649 589 749 b 351 785 402 782 376 785 b 0 507 130 785 0 615 b 127 366 0 399 68 366 b 245 507 186 366 245 429 z',\n        },\n        keyboardPedalUp: {\n            x_min: 0,\n            x_max: 473,\n            y_min: 0,\n            y_max: 473,\n            ha: 473,\n            o: 'm 99 99 b 164 69 120 79 143 69 b 199 82 177 69 190 73 b 210 114 206 89 210 102 b 206 137 210 122 209 130 b 200 160 203 145 200 154 b 210 179 200 166 203 171 l 245 215 b 285 213 255 225 272 219 l 287 213 l 288 212 b 318 183 301 206 318 196 l 318 134 b 291 102 318 112 308 112 b 258 58 274 92 258 76 b 340 0 258 26 294 0 b 423 58 386 0 423 26 b 390 102 423 76 408 92 b 361 134 373 112 361 112 l 361 183 b 392 212 361 196 379 206 b 395 213 393 212 393 213 b 436 215 408 219 426 225 l 471 179 b 480 161 478 171 480 167 b 474 137 480 154 477 147 b 471 115 472 130 471 122 b 482 82 471 102 474 91 b 517 69 491 73 504 69 b 582 99 539 69 562 79 b 612 164 602 120 612 143 b 599 199 612 177 608 190 b 567 210 592 206 579 210 b 544 206 559 210 552 209 b 521 200 536 203 528 200 b 501 210 514 200 508 203 l 467 245 b 468 285 456 255 462 272 l 468 287 b 469 288 468 287 469 287 b 498 318 475 301 485 318 l 547 318 b 579 291 569 318 569 308 b 624 258 589 274 605 258 b 681 340 655 258 681 294 b 624 423 681 386 655 423 b 579 390 605 423 589 408 b 547 361 569 373 569 361 l 498 361 b 469 392 485 361 475 379 b 468 395 469 393 468 393 b 467 436 462 408 456 426 l 501 471 b 520 480 508 478 514 480 b 544 474 527 480 534 477 b 566 471 552 472 559 471 b 599 482 579 471 590 474 b 612 516 608 491 612 503 b 582 580 612 536 602 560 b 516 612 562 600 537 612 b 482 599 503 612 491 608 b 471 566 474 590 471 579 b 474 544 471 559 472 552 b 480 520 477 534 480 527 b 471 501 480 514 478 508 l 436 467 b 395 468 426 456 408 462 b 392 469 393 468 393 469 b 361 498 379 475 361 485 l 361 547 b 390 579 361 569 373 569 b 423 624 408 589 423 605 b 340 681 423 655 386 681 b 258 624 294 681 258 655 b 291 579 258 605 274 589 b 318 547 308 569 318 569 l 318 498 b 288 469 318 485 301 475 l 287 468 l 285 468 b 245 467 272 462 255 456 l 210 501 b 200 521 203 508 200 514 b 206 544 200 528 203 536 b 210 567 209 552 210 559 b 199 599 210 579 206 592 b 164 612 190 608 177 612 b 99 582 143 612 120 602 b 69 517 79 562 69 539 b 82 482 69 504 73 491 b 115 471 91 474 102 471 b 137 474 122 471 130 472 b 161 480 147 477 154 480 b 180 471 167 480 173 478 l 215 436 b 213 395 225 426 219 408 b 212 392 213 393 212 393 b 183 361 206 379 196 361 l 134 361 b 102 390 112 361 112 373 b 58 423 92 408 76 423 b 0 340 26 423 0 386 b 58 258 0 294 26 258 b 102 291 76 258 92 274 b 134 318 112 308 112 318 l 183 318 b 212 288 196 318 206 301 b 213 287 212 287 213 288 l 213 285 b 215 245 219 272 225 255 l 179 210 b 160 200 171 203 166 200 b 137 206 154 200 145 203 b 114 210 130 209 122 210 b 82 199 102 210 89 206 b 69 164 73 190 69 177 b 99 99 69 143 79 120 z m 276 276 b 249 340 262 291 249 320 b 340 432 249 390 289 432 b 432 340 390 432 432 390 b 405 276 432 320 419 291 b 340 249 390 262 360 249 b 276 276 320 249 291 262 z',\n        },\n        wiggleArpeggiatoUp: {\n            x_min: -22,\n            x_max: 242,\n            y_min: 0,\n            y_max: 164,\n            ha: 164,\n            o: 'm 343 122 b 323 143 343 122 334 132 b 308 148 318 147 312 148 b 298 144 304 148 301 147 b 282 128 295 141 291 137 b 274 124 279 125 276 124 b 265 128 268 124 265 128 b 158 220 265 128 173 207 b 112 236 143 232 127 236 b 43 206 82 236 55 219 l -26 137 b -32 125 -30 132 -32 130 b -26 112 -32 118 -26 112 b -6 92 -26 112 -17 102 b 7 86 -1 88 3 86 b 17 91 12 86 14 88 b 33 107 20 94 24 98 b 42 111 36 109 39 111 b 52 107 48 111 52 107 b 158 16 52 107 144 29 b 204 0 174 4 190 0 b 274 30 235 0 262 17 l 343 99 b 348 111 347 104 348 108 b 343 122 348 118 343 122 z',\n        },\n        repeat1Bar: {\n            x_min: 0,\n            x_max: 481,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 693 -181 b 602 -91 693 -131 651 -91 b 511 -181 552 -91 511 -131 b 602 -272 511 -232 552 -272 b 693 -181 651 -272 693 -232 z',\n        },\n        repeat2Bars: {\n            x_min: 0,\n            x_max: 735,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 1058 -181 b 968 -91 1058 -131 1017 -91 b 877 -181 917 -91 877 -131 b 968 -272 877 -232 917 -272 b 1058 -181 1017 -272 1058 -232 z m 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z',\n        },\n        repeat4Bars: {\n            x_min: 0,\n            x_max: 1243,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 183 180 b 92 271 183 230 141 271 b 1 180 42 271 1 230 b 92 89 1 130 42 89 b 183 180 141 89 183 130 z m 693 360 l 511 360 l 0 -360 l 181 -360 z m 1058 360 l 877 360 l 366 -360 l 547 -360 z m 1424 360 l 1243 360 l 732 -360 l 913 -360 z m 1790 360 l 1608 360 l 1097 -360 l 1279 -360 z m 1790 -181 b 1699 -91 1790 -131 1748 -91 b 1608 -181 1649 -91 1608 -131 b 1699 -272 1608 -232 1649 -272 b 1790 -181 1748 -272 1790 -232 z',\n        },\n        repeatBarSlash: {\n            x_min: 0,\n            x_max: 481,\n            y_min: -250,\n            y_max: 250,\n            ha: 500,\n            o: 'm 693 360 l 511 360 l 0 -360 l 181 -360 z',\n        },\n        csymDiminished: {\n            x_min: 0,\n            x_max: 501,\n            y_min: 0,\n            y_max: 501,\n            ha: 501,\n            o: 'm 361 721 b 0 361 161 721 0 560 b 361 0 0 161 161 0 b 721 361 560 0 721 161 b 361 721 721 560 560 721 z m 557 164 b 361 82 505 111 435 82 b 164 164 287 82 216 111 b 82 361 111 216 82 287 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 557 557 436 639 505 611 b 639 361 611 505 639 436 b 557 164 639 287 609 216 z',\n        },\n        csymHalfDiminished: {\n            x_min: -1,\n            x_max: 502,\n            y_min: -1,\n            y_max: 502,\n            ha: 503,\n            o: 'm 723 684 l 684 723 l 596 634 b 361 721 533 688 451 721 b 0 361 161 721 0 560 b 88 125 0 271 33 189 l -1 36 l 36 -1 l 125 88 b 361 0 189 33 271 0 b 721 361 560 0 721 161 b 634 596 721 451 688 533 z m 82 361 b 164 557 82 436 111 505 b 361 639 216 611 287 639 b 537 576 426 639 488 616 l 145 184 b 82 361 105 233 82 295 z m 639 361 b 557 164 639 287 609 216 b 361 82 505 111 435 82 b 184 145 295 82 233 105 l 576 537 b 639 361 616 488 639 426 z',\n        },\n        csymAugmented: {\n            x_min: 1,\n            x_max: 321,\n            y_min: 90,\n            y_max: 410,\n            ha: 320,\n            o: 'm 462 400 l 272 400 l 272 590 l 192 590 l 192 400 l 1 400 l 1 320 l 192 320 l 192 130 l 272 130 l 272 320 l 462 320 z',\n        },\n        csymMajorSeventh: {\n            x_min: 0,\n            x_max: 500,\n            y_min: 10,\n            y_max: 490,\n            ha: 480,\n            o: 'm 360 528 l 585 96 l 135 96 z m 360 706 l 0 14 l 720 14 z',\n        },\n        accidentalNarrowReversedFlat: {\n            x_min: 0,\n            x_max: 160,\n            y_min: -176,\n            y_max: 452,\n            ha: 628,\n            o: 'm 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n        },\n        accidentalNarrowReversedFlatAndFlat: {\n            x_min: 0,\n            x_max: 416,\n            y_min: -176,\n            y_max: 452,\n            ha: 628,\n            o: 'm 462 217 b 330 174 374 217 338 181 l 334 632 b 315 651 334 642 325 651 l 302 651 b 284 632 292 651 284 642 l 289 -235 b 308 -253 289 -245 298 -253 b 320 -249 312 -253 317 -251 b 492 -138 320 -249 433 -194 b 599 84 534 -98 599 -26 b 462 217 599 173 534 217 z m 501 58 b 459 -72 501 36 498 -19 b 327 -179 431 -111 359 -164 l 330 85 l 330 91 b 422 154 330 125 359 154 b 501 58 503 154 501 79 z m 0 84 b 101 -153 0 -26 65 -107 b 196 -249 153 -217 196 -249 b 206 -253 199 -251 202 -253 b 225 -235 216 -253 225 -245 l 230 632 b 212 651 230 642 222 651 l 199 651 b 180 632 189 651 180 642 l 184 204 b 125 217 184 204 171 217 b 0 84 53 217 0 173 z m 145 154 b 184 107 181 154 184 120 l 187 -179 b 114 -72 167 -158 132 -112 b 82 58 86 -13 82 36 b 145 154 82 79 82 154 z',\n        },\n    },\n    fontFamily: 'Leland',\n    resolution: 1000,\n    generatedOn: '2022-12-19T23:52:37.756Z',\n};\n","export const PetalumaScriptFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 250,\n            y_min: 0,\n            y_max: 500,\n            ha: 500,\n            leftSideBearing: 0,\n            advanceWidth: 250,\n        },\n        '0': {\n            x_min: 33,\n            x_max: 534,\n            y_min: -13,\n            y_max: 751,\n            ha: 764,\n            leftSideBearing: 33,\n            advanceWidth: 570,\n        },\n        '1': {\n            x_min: 48,\n            x_max: 235,\n            y_min: -17,\n            y_max: 734,\n            ha: 751,\n            leftSideBearing: 48,\n            advanceWidth: 286,\n        },\n        '2': {\n            x_min: 56,\n            x_max: 571,\n            y_min: -19,\n            y_max: 741,\n            ha: 760,\n            leftSideBearing: 56,\n            advanceWidth: 626,\n        },\n        '3': {\n            x_min: 50,\n            x_max: 528,\n            y_min: -7,\n            y_max: 731,\n            ha: 738,\n            leftSideBearing: 50,\n            advanceWidth: 589,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 564,\n            y_min: -13,\n            y_max: 743,\n            ha: 756,\n            leftSideBearing: 38,\n            advanceWidth: 614,\n        },\n        '5': {\n            x_min: 42,\n            x_max: 601,\n            y_min: -34,\n            y_max: 743,\n            ha: 777,\n            leftSideBearing: 42,\n            advanceWidth: 648,\n        },\n        '6': {\n            x_min: 47,\n            x_max: 606,\n            y_min: -16,\n            y_max: 743,\n            ha: 759,\n            leftSideBearing: 47,\n            advanceWidth: 667,\n        },\n        '7': {\n            x_min: 47,\n            x_max: 567,\n            y_min: 5,\n            y_max: 739,\n            ha: 734,\n            leftSideBearing: 0,\n            advanceWidth: 615,\n        },\n        '8': {\n            x_min: 40,\n            x_max: 541,\n            y_min: -15,\n            y_max: 752,\n            ha: 767,\n            leftSideBearing: 40,\n            advanceWidth: 585,\n        },\n        '9': {\n            x_min: 40,\n            x_max: 537,\n            y_min: -52,\n            y_max: 736,\n            ha: 788,\n            leftSideBearing: 40,\n            advanceWidth: 592,\n        },\n        '!': {\n            x_min: 49,\n            x_max: 180,\n            y_min: -7,\n            y_max: 761,\n            ha: 768,\n            leftSideBearing: 49,\n            advanceWidth: 230,\n        },\n        '\"': {\n            x_min: 39,\n            x_max: 304,\n            y_min: 596,\n            y_max: 804,\n            ha: 208,\n            leftSideBearing: 39,\n            advanceWidth: 353,\n        },\n        '#': {\n            x_min: 33,\n            x_max: 599,\n            y_min: -8,\n            y_max: 765,\n            ha: 773,\n            leftSideBearing: 33,\n            advanceWidth: 648,\n        },\n        $: {\n            x_min: 53,\n            x_max: 495,\n            y_min: -111,\n            y_max: 823,\n            ha: 934,\n            leftSideBearing: 53,\n            advanceWidth: 560,\n        },\n        '%': {\n            x_min: 35,\n            x_max: 656,\n            y_min: -128,\n            y_max: 808,\n            ha: 936,\n            leftSideBearing: 35,\n            advanceWidth: 711,\n        },\n        '&': {\n            x_min: 53,\n            x_max: 441,\n            y_min: -3,\n            y_max: 753,\n            ha: 756,\n            leftSideBearing: 53,\n            advanceWidth: 500,\n        },\n        \"'\": {\n            x_min: 43,\n            x_max: 161,\n            y_min: 590,\n            y_max: 811,\n            ha: 221,\n            leftSideBearing: 43,\n            advanceWidth: 217,\n        },\n        '(': {\n            x_min: 41,\n            x_max: 311,\n            y_min: -36,\n            y_max: 845,\n            ha: 881,\n            leftSideBearing: 41,\n            advanceWidth: 308,\n        },\n        ')': {\n            x_min: -8,\n            x_max: 257,\n            y_min: -21,\n            y_max: 852,\n            ha: 873,\n            leftSideBearing: -8,\n            advanceWidth: 280,\n        },\n        '*': {\n            x_min: 59,\n            x_max: 539,\n            y_min: 175,\n            y_max: 589,\n            ha: 414,\n            leftSideBearing: 59,\n            advanceWidth: 601,\n        },\n        '+': {\n            x_min: 33,\n            x_max: 361,\n            y_min: 180,\n            y_max: 587,\n            ha: 407,\n            leftSideBearing: 33,\n            advanceWidth: 400,\n        },\n        ',': {\n            x_min: 15,\n            x_max: 176,\n            y_min: -129,\n            y_max: 92,\n            ha: 221,\n            leftSideBearing: 15,\n            advanceWidth: 205,\n        },\n        '-': {\n            x_min: 40,\n            x_max: 380,\n            y_min: 317,\n            y_max: 452,\n            ha: 135,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '.': {\n            x_min: 48,\n            x_max: 185,\n            y_min: -56,\n            y_max: 84,\n            ha: 140,\n            leftSideBearing: 48,\n            advanceWidth: 227,\n        },\n        '/': {\n            x_min: -58,\n            x_max: 654,\n            y_min: -122,\n            y_max: 844,\n            ha: 966,\n            leftSideBearing: -58,\n            advanceWidth: 626,\n        },\n        ':': {\n            x_min: 65,\n            x_max: 225,\n            y_min: 97,\n            y_max: 536,\n            ha: 439,\n            leftSideBearing: 65,\n            advanceWidth: 302,\n        },\n        ';': {\n            x_min: 13,\n            x_max: 295,\n            y_min: -139,\n            y_max: 536,\n            ha: 675,\n            leftSideBearing: 13,\n            advanceWidth: 334,\n        },\n        '<': {\n            x_min: 28,\n            x_max: 438,\n            y_min: -1,\n            y_max: 607,\n            ha: 608,\n            leftSideBearing: 28,\n            advanceWidth: 475,\n        },\n        '=': {\n            x_min: 40,\n            x_max: 383,\n            y_min: 199.9598640852289,\n            y_max: 541,\n            ha: 341.0401359147711,\n            leftSideBearing: 40,\n            advanceWidth: 422,\n        },\n        '>': {\n            x_min: 35,\n            x_max: 421,\n            y_min: 28,\n            y_max: 632,\n            ha: 604,\n            leftSideBearing: 35,\n            advanceWidth: 466,\n        },\n        '?': {\n            x_min: 45,\n            x_max: 548,\n            y_min: -17,\n            y_max: 767,\n            ha: 784,\n            leftSideBearing: 45,\n            advanceWidth: 592,\n        },\n        '@': {\n            x_min: 51,\n            x_max: 730,\n            y_min: -78,\n            y_max: 753,\n            ha: 831,\n            leftSideBearing: 51,\n            advanceWidth: 781,\n        },\n        A: {\n            x_min: 37,\n            x_max: 554,\n            y_min: -4,\n            y_max: 746,\n            ha: 750,\n            leftSideBearing: 37,\n            advanceWidth: 617,\n        },\n        B: {\n            x_min: 37,\n            x_max: 532,\n            y_min: 3,\n            y_max: 783,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 579,\n        },\n        C: {\n            x_min: 37,\n            x_max: 583,\n            y_min: -3,\n            y_max: 775,\n            ha: 778,\n            leftSideBearing: 37,\n            advanceWidth: 623,\n        },\n        D: {\n            x_min: 50,\n            x_max: 530,\n            y_min: -15,\n            y_max: 749,\n            ha: 764,\n            leftSideBearing: 50,\n            advanceWidth: 579,\n        },\n        E: {\n            x_min: 45,\n            x_max: 531,\n            y_min: -1,\n            y_max: 743,\n            ha: 744,\n            leftSideBearing: 45,\n            advanceWidth: 585,\n        },\n        F: {\n            x_min: 45,\n            x_max: 459,\n            y_min: 23,\n            y_max: 727,\n            ha: 704,\n            leftSideBearing: 45,\n            advanceWidth: 510,\n        },\n        G: {\n            x_min: 31,\n            x_max: 577,\n            y_min: -8,\n            y_max: 733,\n            ha: 741,\n            leftSideBearing: 31,\n            advanceWidth: 611,\n        },\n        H: {\n            x_min: 37,\n            x_max: 493,\n            y_min: -22,\n            y_max: 758,\n            ha: 780,\n            leftSideBearing: 37,\n            advanceWidth: 535,\n        },\n        I: {\n            x_min: 47,\n            x_max: 501,\n            y_min: -3,\n            y_max: 731,\n            ha: 734,\n            leftSideBearing: 47,\n            advanceWidth: 541,\n        },\n        J: {\n            x_min: 33,\n            x_max: 531,\n            y_min: -23,\n            y_max: 725,\n            ha: 748,\n            leftSideBearing: 33,\n            advanceWidth: 573,\n        },\n        K: {\n            x_min: 43,\n            x_max: 505,\n            y_min: -10,\n            y_max: 740,\n            ha: 750,\n            leftSideBearing: 43,\n            advanceWidth: 560,\n        },\n        L: {\n            x_min: 49,\n            x_max: 457,\n            y_min: -2,\n            y_max: 746,\n            ha: 748,\n            leftSideBearing: 49,\n            advanceWidth: 510,\n        },\n        M: {\n            x_min: 35,\n            x_max: 699,\n            y_min: 1,\n            y_max: 744,\n            ha: 743,\n            leftSideBearing: 35,\n            advanceWidth: 743,\n        },\n        N: {\n            x_min: 34,\n            x_max: 533,\n            y_min: -17,\n            y_max: 761,\n            ha: 778,\n            leftSideBearing: 34,\n            advanceWidth: 579,\n        },\n        O: {\n            x_min: 41,\n            x_max: 608,\n            y_min: -5,\n            y_max: 735,\n            ha: 740,\n            leftSideBearing: 41,\n            advanceWidth: 667,\n        },\n        P: {\n            x_min: 53,\n            x_max: 451,\n            y_min: -18,\n            y_max: 735,\n            ha: 753,\n            leftSideBearing: 53,\n            advanceWidth: 497,\n        },\n        Q: {\n            x_min: 40,\n            x_max: 599,\n            y_min: -67,\n            y_max: 744,\n            ha: 811,\n            leftSideBearing: 40,\n            advanceWidth: 648,\n        },\n        R: {\n            x_min: 39,\n            x_max: 487,\n            y_min: 16,\n            y_max: 735,\n            ha: 719,\n            leftSideBearing: 39,\n            advanceWidth: 535,\n        },\n        S: {\n            x_min: 35,\n            x_max: 552,\n            y_min: -47,\n            y_max: 708,\n            ha: 755,\n            leftSideBearing: 35,\n            advanceWidth: 604,\n        },\n        T: {\n            x_min: 26,\n            x_max: 656,\n            y_min: -13,\n            y_max: 718,\n            ha: 731,\n            leftSideBearing: 26,\n            advanceWidth: 705,\n        },\n        U: {\n            x_min: 41,\n            x_max: 518,\n            y_min: -20,\n            y_max: 748,\n            ha: 768,\n            leftSideBearing: 41,\n            advanceWidth: 567,\n        },\n        V: {\n            x_min: 47,\n            x_max: 509,\n            y_min: -26,\n            y_max: 744,\n            ha: 770,\n            leftSideBearing: 47,\n            advanceWidth: 567,\n        },\n        W: {\n            x_min: 44,\n            x_max: 789,\n            y_min: -35,\n            y_max: 720,\n            ha: 755,\n            leftSideBearing: 44,\n            advanceWidth: 833,\n        },\n        X: {\n            x_min: 63,\n            x_max: 635,\n            y_min: -10,\n            y_max: 745,\n            ha: 755,\n            leftSideBearing: 63,\n            advanceWidth: 680,\n        },\n        Y: {\n            x_min: 43,\n            x_max: 503,\n            y_min: -21,\n            y_max: 734,\n            ha: 755,\n            leftSideBearing: 43,\n            advanceWidth: 541,\n        },\n        Z: {\n            x_min: 42,\n            x_max: 584,\n            y_min: -10,\n            y_max: 739,\n            ha: 749,\n            leftSideBearing: 42,\n            advanceWidth: 629,\n        },\n        '[': {\n            x_min: 46,\n            x_max: 346,\n            y_min: -150,\n            y_max: 884,\n            ha: 1034,\n            leftSideBearing: 46,\n            advanceWidth: 291,\n        },\n        '\\\\': {\n            x_min: 20,\n            x_max: 616,\n            y_min: -100,\n            y_max: 797,\n            ha: 897,\n            leftSideBearing: 20,\n            advanceWidth: 645,\n        },\n        ']': {\n            x_min: -76,\n            x_max: 226,\n            y_min: -150,\n            y_max: 881,\n            ha: 1031,\n            leftSideBearing: -76,\n            advanceWidth: 297,\n        },\n        '^': {\n            x_min: 43,\n            x_max: 437,\n            y_min: 517,\n            y_max: 812,\n            ha: 295,\n            leftSideBearing: 43,\n            advanceWidth: 478,\n        },\n        _: {\n            x_min: 29,\n            x_max: 563,\n            y_min: -110,\n            y_max: -1,\n            ha: 109,\n            leftSideBearing: 29,\n            advanceWidth: 598,\n        },\n        '`': {\n            x_min: 54,\n            x_max: 321,\n            y_min: 540,\n            y_max: 747,\n            ha: 207,\n            leftSideBearing: 54,\n            advanceWidth: 368,\n        },\n        a: {\n            x_min: 20,\n            x_max: 447,\n            y_min: -17,\n            y_max: 495,\n            ha: 512,\n            leftSideBearing: 20,\n            advanceWidth: 494,\n        },\n        b: {\n            x_min: 37,\n            x_max: 466,\n            y_min: -27,\n            y_max: 770,\n            ha: 797,\n            leftSideBearing: 37,\n            advanceWidth: 510,\n        },\n        c: {\n            x_min: 35,\n            x_max: 456,\n            y_min: -9,\n            y_max: 507,\n            ha: 516,\n            leftSideBearing: 35,\n            advanceWidth: 460,\n        },\n        d: {\n            x_min: 45,\n            x_max: 520,\n            y_min: -15,\n            y_max: 764,\n            ha: 779,\n            leftSideBearing: 45,\n            advanceWidth: 560,\n        },\n        e: {\n            x_min: 33,\n            x_max: 370,\n            y_min: -5,\n            y_max: 501,\n            ha: 506,\n            leftSideBearing: 33,\n            advanceWidth: 397,\n        },\n        f: {\n            x_min: 35,\n            x_max: 411,\n            y_min: -13,\n            y_max: 695,\n            ha: 708,\n            leftSideBearing: 35,\n            advanceWidth: 453,\n        },\n        g: {\n            x_min: 33,\n            x_max: 551,\n            y_min: -257,\n            y_max: 505,\n            ha: 762,\n            leftSideBearing: 33,\n            advanceWidth: 611,\n        },\n        h: {\n            x_min: 32,\n            x_max: 458,\n            y_min: -29,\n            y_max: 743,\n            ha: 772,\n            leftSideBearing: 32,\n            advanceWidth: 491,\n        },\n        i: {\n            x_min: 45,\n            x_max: 167,\n            y_min: -13,\n            y_max: 631,\n            ha: 644,\n            leftSideBearing: 45,\n            advanceWidth: 220,\n        },\n        j: {\n            x_min: -127,\n            x_max: 261,\n            y_min: -231,\n            y_max: 601,\n            ha: 832,\n            leftSideBearing: -127,\n            advanceWidth: 308,\n        },\n        k: {\n            x_min: 39,\n            x_max: 443,\n            y_min: -3,\n            y_max: 700,\n            ha: 703,\n            leftSideBearing: 39,\n            advanceWidth: 497,\n        },\n        l: {\n            x_min: 58,\n            x_max: 168,\n            y_min: -8,\n            y_max: 686,\n            ha: 694,\n            leftSideBearing: 58,\n            advanceWidth: 227,\n        },\n        m: {\n            x_min: 39,\n            x_max: 688,\n            y_min: -14,\n            y_max: 501,\n            ha: 515,\n            leftSideBearing: 39,\n            advanceWidth: 718,\n        },\n        n: {\n            x_min: 45,\n            x_max: 491,\n            y_min: -32,\n            y_max: 512,\n            ha: 544,\n            leftSideBearing: 45,\n            advanceWidth: 541,\n        },\n        o: {\n            x_min: 41,\n            x_max: 424,\n            y_min: -12,\n            y_max: 493,\n            ha: 505,\n            leftSideBearing: 41,\n            advanceWidth: 447,\n        },\n        p: {\n            x_min: 25,\n            x_max: 529,\n            y_min: -260,\n            y_max: 500,\n            ha: 760,\n            leftSideBearing: 25,\n            advanceWidth: 573,\n        },\n        q: {\n            x_min: 53,\n            x_max: 603,\n            y_min: -235,\n            y_max: 514,\n            ha: 749,\n            leftSideBearing: 53,\n            advanceWidth: 623,\n        },\n        r: {\n            x_min: 32,\n            x_max: 407,\n            y_min: -7,\n            y_max: 492,\n            ha: 499,\n            leftSideBearing: 32,\n            advanceWidth: 460,\n        },\n        s: {\n            x_min: 49,\n            x_max: 416,\n            y_min: -12,\n            y_max: 519,\n            ha: 531,\n            leftSideBearing: 49,\n            advanceWidth: 460,\n        },\n        t: {\n            x_min: 32,\n            x_max: 442,\n            y_min: -5,\n            y_max: 684,\n            ha: 689,\n            leftSideBearing: 32,\n            advanceWidth: 469,\n        },\n        u: {\n            x_min: 41,\n            x_max: 487,\n            y_min: -5,\n            y_max: 507,\n            ha: 512,\n            leftSideBearing: 41,\n            advanceWidth: 510,\n        },\n        v: {\n            x_min: 16,\n            x_max: 441,\n            y_min: -20,\n            y_max: 542,\n            ha: 562,\n            leftSideBearing: 16,\n            advanceWidth: 456,\n        },\n        w: {\n            x_min: 39,\n            x_max: 639,\n            y_min: -22,\n            y_max: 505,\n            ha: 527,\n            leftSideBearing: 39,\n            advanceWidth: 661,\n        },\n        x: {\n            x_min: 15,\n            x_max: 505,\n            y_min: -39,\n            y_max: 539,\n            ha: 578,\n            leftSideBearing: 15,\n            advanceWidth: 541,\n        },\n        y: {\n            x_min: -98,\n            x_max: 501,\n            y_min: -242,\n            y_max: 511,\n            ha: 753,\n            leftSideBearing: -98,\n            advanceWidth: 548,\n        },\n        z: {\n            x_min: 27,\n            x_max: 479,\n            y_min: -3,\n            y_max: 494,\n            ha: 497,\n            leftSideBearing: 27,\n            advanceWidth: 494,\n        },\n        '{': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '|': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '}': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n        '~': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 308,\n        },\n    },\n    fontFamily: 'PetalumaScript',\n    resolution: 1000,\n    generatedOn: '2020-06-14T18:33:25.407Z',\n};\n","export const RobotoSlabFont = {\n    spacing: 50,\n    glyphs: {\n        ' ': {\n            x_min: 0,\n            x_max: 509,\n            y_min: 0,\n            y_max: 2000,\n            ha: 2000,\n            leftSideBearing: 0,\n            advanceWidth: 509,\n        },\n        '0': {\n            x_min: 121,\n            x_max: 1048,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1168,\n        },\n        '1': {\n            x_min: 117,\n            x_max: 767,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 117,\n            advanceWidth: 844,\n        },\n        '2': {\n            x_min: 75.8474576645637,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 75,\n            advanceWidth: 1131,\n        },\n        '3': {\n            x_min: 74.85365853658536,\n            x_max: 994,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1106,\n        },\n        '4': {\n            x_min: 63,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1187,\n        },\n        '5': {\n            x_min: 96.8448275474953,\n            x_max: 982,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 96,\n            advanceWidth: 1081,\n        },\n        '6': {\n            x_min: 121,\n            x_max: 1067,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 121,\n            advanceWidth: 1144,\n        },\n        '7': {\n            x_min: 76,\n            x_max: 1060,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: -30,\n            advanceWidth: 1128,\n        },\n        '8': {\n            x_min: 92,\n            x_max: 1039,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 92,\n            advanceWidth: 1131,\n        },\n        '9': {\n            x_min: 84,\n            x_max: 1026,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 84,\n            advanceWidth: 1154,\n        },\n        '!': {\n            x_min: 143,\n            x_max: 340,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 143,\n            advanceWidth: 483,\n        },\n        '\"': {\n            x_min: 166,\n            x_max: 634,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 770,\n        },\n        '#': {\n            x_min: 63,\n            x_max: 1179,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 63,\n            advanceWidth: 1246,\n        },\n        $: {\n            x_min: 81.92156915727656,\n            x_max: 1012,\n            y_min: -208,\n            y_max: 1693,\n            ha: 1901,\n            leftSideBearing: 81,\n            advanceWidth: 1110,\n        },\n        '%': {\n            x_min: 77,\n            x_max: 1384,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 77,\n            advanceWidth: 1460,\n        },\n        '&': {\n            x_min: 74,\n            x_max: 1242,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 74,\n            advanceWidth: 1289,\n        },\n        \"'\": {\n            x_min: 166,\n            x_max: 324,\n            y_min: 1055,\n            y_max: 1560,\n            ha: 505,\n            leftSideBearing: 166,\n            advanceWidth: 460,\n        },\n        '(': {\n            x_min: 114,\n            x_max: 650,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 114,\n            advanceWidth: 662,\n        },\n        ')': {\n            x_min: 11,\n            x_max: 547,\n            y_min: -463,\n            y_max: 1636,\n            ha: 2099,\n            leftSideBearing: 11,\n            advanceWidth: 654,\n        },\n        '*': {\n            x_min: 66,\n            x_max: 893,\n            y_min: 607,\n            y_max: 1456,\n            ha: 849,\n            leftSideBearing: 66,\n            advanceWidth: 958,\n        },\n        '+': {\n            x_min: 73,\n            x_max: 1071,\n            y_min: 146,\n            y_max: 1206,\n            ha: 1060,\n            leftSideBearing: 73,\n            advanceWidth: 1145,\n        },\n        ',': {\n            x_min: 23,\n            x_max: 315,\n            y_min: -311,\n            y_max: 221,\n            ha: 532,\n            leftSideBearing: 23,\n            advanceWidth: 404,\n        },\n        '-': {\n            x_min: 154,\n            x_max: 643,\n            y_min: 538,\n            y_max: 692,\n            ha: 154,\n            leftSideBearing: 154,\n            advanceWidth: 797,\n        },\n        '.': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 202,\n            ha: 202,\n            leftSideBearing: 145,\n            advanceWidth: 493,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 774,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 0,\n            advanceWidth: 824,\n        },\n        ':': {\n            x_min: 145,\n            x_max: 342,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 145,\n            advanceWidth: 419,\n        },\n        ';': {\n            x_min: 53,\n            x_max: 345,\n            y_min: -311,\n            y_max: 1082,\n            ha: 1393,\n            leftSideBearing: 53,\n            advanceWidth: 424,\n        },\n        '<': {\n            x_min: 76,\n            x_max: 892,\n            y_min: 107,\n            y_max: 1013,\n            ha: 906,\n            leftSideBearing: 76,\n            advanceWidth: 1017,\n        },\n        '=': {\n            x_min: 147,\n            x_max: 981,\n            y_min: 407,\n            y_max: 987,\n            ha: 580,\n            leftSideBearing: 147,\n            advanceWidth: 1127,\n        },\n        '>': {\n            x_min: 125,\n            x_max: 980,\n            y_min: 87,\n            y_max: 993,\n            ha: 906,\n            leftSideBearing: 125,\n            advanceWidth: 1060,\n        },\n        '?': {\n            x_min: 65.92660602419838,\n            x_max: 890,\n            y_min: 0,\n            y_max: 1477,\n            ha: 1477,\n            leftSideBearing: 65,\n            advanceWidth: 953,\n        },\n        '@': {\n            x_min: 84.3592218305664,\n            x_max: 1705.2346925277395,\n            y_min: -453,\n            y_max: 1431,\n            ha: 1884,\n            leftSideBearing: 84,\n            advanceWidth: 1821,\n        },\n        A: {\n            x_min: 70,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 70,\n            advanceWidth: 1533,\n        },\n        B: {\n            x_min: 81,\n            x_max: 1253,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1322,\n        },\n        C: {\n            x_min: 80,\n            x_max: 1174,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1290,\n        },\n        D: {\n            x_min: 81,\n            x_max: 1291,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1356,\n        },\n        E: {\n            x_min: 81,\n            x_max: 1190,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1306,\n        },\n        F: {\n            x_min: 81,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1256,\n        },\n        G: {\n            x_min: 80,\n            x_max: 1226,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 80,\n            advanceWidth: 1346,\n        },\n        H: {\n            x_min: 81,\n            x_max: 1497,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1578,\n        },\n        I: {\n            x_min: 81,\n            x_max: 604,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 685,\n        },\n        J: {\n            x_min: 60,\n            x_max: 1100,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 60,\n            advanceWidth: 1169,\n        },\n        K: {\n            x_min: 81,\n            x_max: 1427,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1501,\n        },\n        L: {\n            x_min: 81,\n            x_max: 1130,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1210,\n        },\n        M: {\n            x_min: 94,\n            x_max: 1888,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 94,\n            advanceWidth: 1982,\n        },\n        N: {\n            x_min: 83,\n            x_max: 1509,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 83,\n            advanceWidth: 1592,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1281,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 70,\n            advanceWidth: 1351,\n        },\n        P: {\n            x_min: 81,\n            x_max: 1242,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 81,\n            advanceWidth: 1297,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1348,\n            y_min: -245,\n            y_max: 1477,\n            ha: 1722,\n            leftSideBearing: 70,\n            advanceWidth: 1376,\n        },\n        R: {\n            x_min: 81,\n            x_max: 1285,\n            y_min: 0,\n            y_max: 1455,\n            ha: 1455,\n            leftSideBearing: 81,\n            advanceWidth: 1385,\n        },\n        S: {\n            x_min: 115,\n            x_max: 1116,\n            y_min: -21,\n            y_max: 1477,\n            ha: 1498,\n            leftSideBearing: 115,\n            advanceWidth: 1206,\n        },\n        T: {\n            x_min: 96,\n            x_max: 1306,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 96,\n            advanceWidth: 1406,\n        },\n        U: {\n            x_min: 70,\n            x_max: 1452,\n            y_min: -21,\n            y_max: 1456,\n            ha: 1477,\n            leftSideBearing: 70,\n            advanceWidth: 1522,\n        },\n        V: {\n            x_min: 65,\n            x_max: 1443,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1508,\n        },\n        W: {\n            x_min: 72,\n            x_max: 2057,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 72,\n            advanceWidth: 2129,\n        },\n        X: {\n            x_min: 80,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 80,\n            advanceWidth: 1529,\n        },\n        Y: {\n            x_min: 65,\n            x_max: 1396,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 65,\n            advanceWidth: 1461,\n        },\n        Z: {\n            x_min: 90,\n            x_max: 1107,\n            y_min: 0,\n            y_max: 1456,\n            ha: 1456,\n            leftSideBearing: 90,\n            advanceWidth: 1197,\n        },\n        '[': {\n            x_min: 157,\n            x_max: 541,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 157,\n            advanceWidth: 573,\n        },\n        '\\\\': {\n            x_min: 36,\n            x_max: 830,\n            y_min: -125,\n            y_max: 1456,\n            ha: 1581,\n            leftSideBearing: 36,\n            advanceWidth: 841,\n        },\n        ']': {\n            x_min: 23,\n            x_max: 408,\n            y_min: -312,\n            y_max: 1664,\n            ha: 1976,\n            leftSideBearing: 23,\n            advanceWidth: 552,\n        },\n        '^': {\n            x_min: 71,\n            x_max: 802,\n            y_min: 729,\n            y_max: 1456,\n            ha: 727,\n            leftSideBearing: 71,\n            advanceWidth: 864,\n        },\n        _: {\n            x_min: 119,\n            x_max: 1041,\n            y_min: -154,\n            y_max: 0,\n            ha: 154,\n            leftSideBearing: 119,\n            advanceWidth: 1168,\n        },\n        '`': {\n            x_min: 40,\n            x_max: 456,\n            y_min: 1288,\n            y_max: 1560,\n            ha: 272,\n            leftSideBearing: 40,\n            advanceWidth: 496,\n        },\n        a: {\n            x_min: 79,\n            x_max: 1053,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 79,\n            advanceWidth: 1132,\n        },\n        b: {\n            x_min: -16,\n            x_max: 1071,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: -16,\n            advanceWidth: 1145,\n        },\n        c: {\n            x_min: 78,\n            x_max: 988,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1067,\n        },\n        d: {\n            x_min: 78,\n            x_max: 1156,\n            y_min: -21,\n            y_max: 1560,\n            ha: 1581,\n            leftSideBearing: 78,\n            advanceWidth: 1218,\n        },\n        e: {\n            x_min: 74,\n            x_max: 980,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 74,\n            advanceWidth: 1059,\n        },\n        f: {\n            x_min: 64,\n            x_max: 731,\n            y_min: 0,\n            y_max: 1581,\n            ha: 1581,\n            leftSideBearing: 64,\n            advanceWidth: 725,\n        },\n        g: {\n            x_min: 78,\n            x_max: 1133,\n            y_min: -437,\n            y_max: 1102,\n            ha: 1539,\n            leftSideBearing: 78,\n            advanceWidth: 1157,\n        },\n        h: {\n            x_min: 49,\n            x_max: 1255,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 49,\n            advanceWidth: 1315,\n        },\n        i: {\n            x_min: 67,\n            x_max: 590,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 67,\n            advanceWidth: 652,\n        },\n        j: {\n            x_min: -56,\n            x_max: 381,\n            y_min: -437,\n            y_max: 1560,\n            ha: 1997,\n            leftSideBearing: -56,\n            advanceWidth: 525,\n        },\n        k: {\n            x_min: 64,\n            x_max: 1248,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 1287,\n        },\n        l: {\n            x_min: 64,\n            x_max: 587,\n            y_min: 0,\n            y_max: 1560,\n            ha: 1560,\n            leftSideBearing: 64,\n            advanceWidth: 653,\n        },\n        m: {\n            x_min: 74,\n            x_max: 1905,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1977,\n        },\n        n: {\n            x_min: 74,\n            x_max: 1278,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 74,\n            advanceWidth: 1343,\n        },\n        o: {\n            x_min: 78,\n            x_max: 1046,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 78,\n            advanceWidth: 1124,\n        },\n        p: {\n            x_min: 34,\n            x_max: 1119,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 34,\n            advanceWidth: 1197,\n        },\n        q: {\n            x_min: 78,\n            x_max: 1135,\n            y_min: -416,\n            y_max: 1102,\n            ha: 1518,\n            leftSideBearing: 78,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 72,\n            x_max: 808,\n            y_min: 0,\n            y_max: 1102,\n            ha: 1102,\n            leftSideBearing: 72,\n            advanceWidth: 854,\n        },\n        s: {\n            x_min: 104,\n            x_max: 933,\n            y_min: -21,\n            y_max: 1102,\n            ha: 1123,\n            leftSideBearing: 104,\n            advanceWidth: 1022,\n        },\n        t: {\n            x_min: 24,\n            x_max: 678,\n            y_min: -17,\n            y_max: 1343,\n            ha: 1360,\n            leftSideBearing: 24,\n            advanceWidth: 730,\n        },\n        u: {\n            x_min: 52,\n            x_max: 1181,\n            y_min: -21,\n            y_max: 1082,\n            ha: 1103,\n            leftSideBearing: 52,\n            advanceWidth: 1245,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1176,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 26,\n            advanceWidth: 1206,\n        },\n        w: {\n            x_min: 52,\n            x_max: 1777,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 52,\n            advanceWidth: 1823,\n        },\n        x: {\n            x_min: 42,\n            x_max: 1163,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 42,\n            advanceWidth: 1203,\n        },\n        y: {\n            x_min: 24,\n            x_max: 1172,\n            y_min: -437,\n            y_max: 1082,\n            ha: 1519,\n            leftSideBearing: 24,\n            advanceWidth: 1192,\n        },\n        z: {\n            x_min: 88,\n            x_max: 960,\n            y_min: 0,\n            y_max: 1082,\n            ha: 1082,\n            leftSideBearing: 88,\n            advanceWidth: 1032,\n        },\n        '{': {\n            x_min: 63,\n            x_max: 671,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 63,\n            advanceWidth: 701,\n        },\n        '|': {\n            x_min: 150,\n            x_max: 307,\n            y_min: -270,\n            y_max: 1456,\n            ha: 1726,\n            leftSideBearing: 150,\n            advanceWidth: 451,\n        },\n        '}': {\n            x_min: 27,\n            x_max: 635,\n            y_min: -364,\n            y_max: 1597,\n            ha: 1961,\n            leftSideBearing: 27,\n            advanceWidth: 701,\n        },\n        '~': {\n            x_min: 121,\n            x_max: 1257,\n            y_min: 401,\n            y_max: 803,\n            ha: 402,\n            leftSideBearing: 121,\n            advanceWidth: 1386,\n        },\n    },\n    fontFamily: 'Roboto Slab',\n    resolution: 2048,\n    generatedOn: '2020-06-15T19:12:58.120Z',\n};\n","export const SansFontBold = {\n    glyphs: {\n        '0': {\n            x_min: 86,\n            x_max: 1038,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 162,\n            x_max: 806,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 162,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 51,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 51,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 77,\n            x_max: 1051,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 38,\n            x_max: 1092,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 38,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 91,\n            x_max: 1077,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 91,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 87,\n            x_max: 1066,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 87,\n            x_max: 1048,\n            y_min: 0,\n            y_max: 1446,\n            ha: 1446,\n            leftSideBearing: 87,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1047,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 65,\n            x_max: 1044,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 184,\n            x_max: 488,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 184,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 112,\n            x_max: 869,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 112,\n            advanceWidth: 971,\n        },\n        '#': {\n            x_min: 18,\n            x_max: 1115,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 18,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 70,\n            x_max: 1048,\n            y_min: -205,\n            y_max: 1584,\n            ha: 1789,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 89,\n            x_max: 1725,\n            y_min: -59,\n            y_max: 1491,\n            ha: 1550,\n            leftSideBearing: 89,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 90,\n            x_max: 1446,\n            y_min: -38,\n            y_max: 1491,\n            ha: 1529,\n            leftSideBearing: 90,\n            advanceWidth: 1479,\n        },\n        \"'\": {\n            x_min: 92,\n            x_max: 398,\n            y_min: 945,\n            y_max: 1466,\n            ha: 521,\n            leftSideBearing: 92,\n            advanceWidth: 487,\n        },\n        '(': {\n            x_min: 107,\n            x_max: 616,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 107,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 67,\n            x_max: 576,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 67,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 28,\n            x_max: 753,\n            y_min: 792,\n            y_max: 1491,\n            ha: 699,\n            leftSideBearing: 28,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 211,\n            y_max: 1236,\n            ha: 1025,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 117,\n            x_max: 421,\n            y_min: -327,\n            y_max: 281,\n            ha: 608,\n            leftSideBearing: 117,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 115,\n            x_max: 667,\n            y_min: 391,\n            y_max: 672,\n            ha: 281,\n            leftSideBearing: 115,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 281,\n            ha: 281,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 201,\n            x_max: 482,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 201,\n            advanceWidth: 682,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 474,\n            y_min: -327,\n            y_max: 1062,\n            ha: 1389,\n            leftSideBearing: 170,\n            advanceWidth: 682,\n        },\n        '<': {\n            x_min: 95,\n            x_max: 1100,\n            y_min: 167,\n            y_max: 1281,\n            ha: 1114,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 85,\n            x_max: 1110,\n            y_min: 372,\n            y_max: 1074,\n            ha: 702,\n            leftSideBearing: 85,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 95,\n            x_max: 1101,\n            y_min: 166,\n            y_max: 1279,\n            ha: 1113,\n            leftSideBearing: 95,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 106,\n            x_max: 1158,\n            y_min: 0,\n            y_max: 1481,\n            ha: 1481,\n            leftSideBearing: 106,\n            advanceWidth: 1251,\n        },\n        '@': {\n            x_min: 61,\n            x_max: 1990,\n            y_min: -431,\n            y_max: 1492,\n            ha: 1923,\n            leftSideBearing: 61,\n            advanceWidth: 1997,\n        },\n        A: {\n            x_min: 0,\n            x_max: 1471,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1378,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        C: {\n            x_min: 97,\n            x_max: 1374,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 97,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 148,\n            x_max: 1377,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 148,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 149,\n            x_max: 1264,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 151,\n            x_max: 1156,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 151,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 98,\n            x_max: 1469,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 98,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 150,\n            x_max: 1322,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 140,\n            x_max: 436,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 140,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 35,\n            x_max: 973,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 35,\n            advanceWidth: 1139,\n        },\n        K: {\n            x_min: 153,\n            x_max: 1475,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 153,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 157,\n            x_max: 1189,\n            y_min: 0,\n            y_max: 1454,\n            ha: 1454,\n            leftSideBearing: 157,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 145,\n            x_max: 1561,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 145,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 152,\n            x_max: 1315,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 89,\n            x_max: 1511,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 149,\n            x_max: 1272,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 149,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 89,\n            x_max: 1566,\n            y_min: -147,\n            y_max: 1491,\n            ha: 1638,\n            leftSideBearing: 89,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 150,\n            x_max: 1468,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 74,\n            x_max: 1266,\n            y_min: -26,\n            y_max: 1491,\n            ha: 1517,\n            leftSideBearing: 74,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 44,\n            x_max: 1209,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 44,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 147,\n            x_max: 1316,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 147,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: -1,\n            x_max: 1364,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -1,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 7,\n            x_max: 1931,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 7,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 0,\n            x_max: 1363,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 0,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: -3,\n            x_max: 1368,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 22,\n            x_max: 1213,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 22,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 146,\n            x_max: 644,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 146,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -3,\n            x_max: 571,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: -3,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 38,\n            x_max: 536,\n            y_min: -413,\n            y_max: 1466,\n            ha: 1879,\n            leftSideBearing: 38,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 115,\n            x_max: 1080,\n            y_min: 692,\n            y_max: 1491,\n            ha: 799,\n            leftSideBearing: 115,\n            advanceWidth: 1196,\n        },\n        _: {\n            x_min: -19,\n            x_max: 1149,\n            y_min: -405,\n            y_max: -223,\n            ha: 182,\n            leftSideBearing: -19,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 42,\n            x_max: 495,\n            y_min: 1192,\n            y_max: 1491,\n            ha: 299,\n            leftSideBearing: 42,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 73,\n            x_max: 1070,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 135,\n            x_max: 1172,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 135,\n            advanceWidth: 1251,\n        },\n        c: {\n            x_min: 85,\n            x_max: 1087,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        d: {\n            x_min: 84,\n            x_max: 1121,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        e: {\n            x_min: 65,\n            x_max: 1057.2517482517483,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 65,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 24,\n            x_max: 742,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 24,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 84,\n            x_max: 1120,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 84,\n            advanceWidth: 1251,\n        },\n        h: {\n            x_min: 146,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 146,\n            advanceWidth: 1251,\n        },\n        i: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -94,\n            x_max: 422,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 137,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 137,\n            advanceWidth: 1139,\n        },\n        l: {\n            x_min: 147,\n            x_max: 428,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 147,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 126,\n            x_max: 1688,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 126,\n            advanceWidth: 1821,\n        },\n        n: {\n            x_min: 145,\n            x_max: 1113,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 145,\n            advanceWidth: 1251,\n        },\n        o: {\n            x_min: 82,\n            x_max: 1178,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 82,\n            advanceWidth: 1251,\n        },\n        p: {\n            x_min: 139,\n            x_max: 1175,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 139,\n            advanceWidth: 1251,\n        },\n        q: {\n            x_min: 91,\n            x_max: 1122,\n            y_min: -404,\n            y_max: 1086,\n            ha: 1490,\n            leftSideBearing: 91,\n            advanceWidth: 1251,\n        },\n        r: {\n            x_min: 135,\n            x_max: 823,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 797,\n        },\n        s: {\n            x_min: 48,\n            x_max: 1040,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 48,\n            advanceWidth: 1139,\n        },\n        t: {\n            x_min: 31,\n            x_max: 657,\n            y_min: -24,\n            y_max: 1437,\n            ha: 1461,\n            leftSideBearing: 31,\n            advanceWidth: 682,\n        },\n        u: {\n            x_min: 141,\n            x_max: 1107,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 141,\n            advanceWidth: 1251,\n        },\n        v: {\n            x_min: 11,\n            x_max: 1114,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 11,\n            advanceWidth: 1139,\n        },\n        w: {\n            x_min: 9,\n            x_max: 1592,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 9,\n            advanceWidth: 1593,\n        },\n        x: {\n            x_min: 12,\n            x_max: 1120,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 12,\n            advanceWidth: 1139,\n        },\n        y: {\n            x_min: 14,\n            x_max: 1106,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 14,\n            advanceWidth: 1139,\n        },\n        z: {\n            x_min: 34,\n            x_max: 982,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 34,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 60,\n            x_max: 744,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 60,\n            advanceWidth: 797,\n        },\n        '|': {\n            x_min: 176,\n            x_max: 399,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 176,\n            advanceWidth: 573,\n        },\n        '}': {\n            x_min: 45,\n            x_max: 729,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 45,\n            advanceWidth: 797,\n        },\n        '~': {\n            x_min: 67,\n            x_max: 1129,\n            y_min: 519,\n            y_max: 924,\n            ha: 405,\n            leftSideBearing: 67,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'Arial',\n    resolution: 2048,\n    generatedOn: '2022-11-04T20:05:21.000Z',\n};\n","export const SansFont = {\n    smufl: false,\n    name: 'SANS',\n    spacing: 50,\n    Description: 'Built-in sans-serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: false,\n    glyphs: {\n        '0': {\n            x_min: 85,\n            x_max: 1041,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '1': {\n            x_min: 223,\n            x_max: 763,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 223,\n            advanceWidth: 1139,\n        },\n        '2': {\n            x_min: 61.840001123045234,\n            x_max: 1031,\n            y_min: 0,\n            y_max: 1472,\n            ha: 1472,\n            leftSideBearing: 61,\n            advanceWidth: 1139,\n        },\n        '3': {\n            x_min: 86,\n            x_max: 1046,\n            y_min: -26,\n            y_max: 1472,\n            ha: 1498,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        '4': {\n            x_min: 26,\n            x_max: 1040,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 26,\n            advanceWidth: 1139,\n        },\n        '5': {\n            x_min: 85,\n            x_max: 1057,\n            y_min: -25,\n            y_max: 1446,\n            ha: 1471,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        '6': {\n            x_min: 77,\n            x_max: 1045,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 77,\n            advanceWidth: 1139,\n        },\n        '7': {\n            x_min: 97,\n            x_max: 1046,\n            y_min: 0,\n            y_max: 1447,\n            ha: 1447,\n            leftSideBearing: 97,\n            advanceWidth: 1139,\n        },\n        '8': {\n            x_min: 83,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 83,\n            advanceWidth: 1139,\n        },\n        '9': {\n            x_min: 85,\n            x_max: 1049,\n            y_min: -25,\n            y_max: 1472,\n            ha: 1497,\n            leftSideBearing: 85,\n            advanceWidth: 1139,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        '!': {\n            x_min: 176,\n            x_max: 399,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 176,\n            advanceWidth: 569,\n        },\n        '\"': {\n            x_min: 94,\n            x_max: 631,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 94,\n            advanceWidth: 727,\n        },\n        '#': {\n            x_min: 21,\n            x_max: 1113,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 21,\n            advanceWidth: 1139,\n        },\n        $: {\n            x_min: 73,\n            x_max: 1043,\n            y_min: -211,\n            y_max: 1601,\n            ha: 1812,\n            leftSideBearing: 73,\n            advanceWidth: 1139,\n        },\n        '%': {\n            x_min: 119,\n            x_max: 1695,\n            y_min: -54,\n            y_max: 1491,\n            ha: 1545,\n            leftSideBearing: 119,\n            advanceWidth: 1821,\n        },\n        '&': {\n            x_min: 88,\n            x_max: 1319,\n            y_min: -34,\n            y_max: 1491,\n            ha: 1525,\n            leftSideBearing: 88,\n            advanceWidth: 1366,\n        },\n        \"'\": {\n            x_min: 90,\n            x_max: 295,\n            y_min: 947,\n            y_max: 1466,\n            ha: 519,\n            leftSideBearing: 90,\n            advanceWidth: 391,\n        },\n        '(': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 124,\n            x_max: 608,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 124,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 64,\n            x_max: 725,\n            y_min: 867,\n            y_max: 1491,\n            ha: 624,\n            leftSideBearing: 64,\n            advanceWidth: 797,\n        },\n        '+': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 237,\n            y_max: 1206,\n            ha: 969,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        ',': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 205,\n            ha: 495,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '-': {\n            x_min: 65,\n            x_max: 618,\n            y_min: 440,\n            y_max: 621,\n            ha: 181,\n            leftSideBearing: 65,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 186,\n            x_max: 391,\n            y_min: 0,\n            y_max: 205,\n            ha: 205,\n            leftSideBearing: 186,\n            advanceWidth: 569,\n        },\n        '/': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 185,\n            x_max: 390,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 185,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 170,\n            x_max: 387,\n            y_min: -290,\n            y_max: 1062,\n            ha: 1352,\n            leftSideBearing: 170,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '=': {\n            x_min: 114,\n            x_max: 1082,\n            y_min: 417,\n            y_max: 1030,\n            ha: 613,\n            leftSideBearing: 114,\n            advanceWidth: 1196,\n        },\n        '>': {\n            x_min: 112,\n            x_max: 1083,\n            y_min: 226,\n            y_max: 1219,\n            ha: 993,\n            leftSideBearing: 112,\n            advanceWidth: 1196,\n        },\n        '?': {\n            x_min: 90,\n            x_max: 1036,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 90,\n            advanceWidth: 1139,\n        },\n        '@': {\n            x_min: 111,\n            x_max: 2005,\n            y_min: -431,\n            y_max: 1493,\n            ha: 1924,\n            leftSideBearing: 111,\n            advanceWidth: 2079,\n        },\n        A: {\n            x_min: -3,\n            x_max: 1369,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: -3,\n            advanceWidth: 1366,\n        },\n        B: {\n            x_min: 150,\n            x_max: 1257,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 102,\n            x_max: 1398,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 102,\n            advanceWidth: 1479,\n        },\n        D: {\n            x_min: 158,\n            x_max: 1370,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 162,\n            x_max: 1256,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 162,\n            advanceWidth: 1366,\n        },\n        F: {\n            x_min: 168,\n            x_max: 1157,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 168,\n            advanceWidth: 1251,\n        },\n        G: {\n            x_min: 109,\n            x_max: 1465,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 109,\n            advanceWidth: 1593,\n        },\n        H: {\n            x_min: 164,\n            x_max: 1314,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 164,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 191,\n            x_max: 385,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 191,\n            advanceWidth: 569,\n        },\n        J: {\n            x_min: 58.84976474807333,\n            x_max: 865,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 58,\n            advanceWidth: 1024,\n        },\n        K: {\n            x_min: 150,\n            x_max: 1362,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1366,\n        },\n        L: {\n            x_min: 150,\n            x_max: 1066,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 150,\n            advanceWidth: 1139,\n        },\n        M: {\n            x_min: 152,\n            x_max: 1551,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 152,\n            advanceWidth: 1706,\n        },\n        N: {\n            x_min: 156,\n            x_max: 1311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 156,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 99,\n            x_max: 1501,\n            y_min: -25,\n            y_max: 1492,\n            ha: 1517,\n            leftSideBearing: 99,\n            advanceWidth: 1593,\n        },\n        P: {\n            x_min: 158,\n            x_max: 1277,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 158,\n            advanceWidth: 1366,\n        },\n        Q: {\n            x_min: 88,\n            x_max: 1518,\n            y_min: -114,\n            y_max: 1492,\n            ha: 1606,\n            leftSideBearing: 88,\n            advanceWidth: 1593,\n        },\n        R: {\n            x_min: 161,\n            x_max: 1453,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        S: {\n            x_min: 92,\n            x_max: 1259,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 92,\n            advanceWidth: 1366,\n        },\n        T: {\n            x_min: 48,\n            x_max: 1210,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 48,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 161,\n            x_max: 1314,\n            y_min: -25,\n            y_max: 1466,\n            ha: 1491,\n            leftSideBearing: 161,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 9,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        W: {\n            x_min: 25,\n            x_max: 1910,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 25,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 9,\n            x_max: 1353,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 9,\n            advanceWidth: 1366,\n        },\n        Y: {\n            x_min: 6,\n            x_max: 1350,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 6,\n            advanceWidth: 1366,\n        },\n        Z: {\n            x_min: 41,\n            x_max: 1200,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 41,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 139,\n            x_max: 536,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 139,\n            advanceWidth: 569,\n        },\n        '\\\\': {\n            x_min: 0,\n            x_max: 569,\n            y_min: -25,\n            y_max: 1491,\n            ha: 1516,\n            leftSideBearing: 0,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 39,\n            x_max: 436,\n            y_min: -407,\n            y_max: 1466,\n            ha: 1873,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        '^': {\n            x_min: 54,\n            x_max: 907,\n            y_min: 690,\n            y_max: 1491,\n            ha: 801,\n            leftSideBearing: 54,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: -31,\n            x_max: 1162,\n            y_min: -407,\n            y_max: -277,\n            ha: 130,\n            leftSideBearing: -31,\n            advanceWidth: 1139,\n        },\n        '`': {\n            x_min: 89,\n            x_max: 465,\n            y_min: 1194,\n            y_max: 1474,\n            ha: 280,\n            leftSideBearing: 89,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 74,\n            x_max: 1052,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 74,\n            advanceWidth: 1139,\n        },\n        b: {\n            x_min: 134,\n            x_max: 1055,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 134,\n            advanceWidth: 1139,\n        },\n        c: {\n            x_min: 80,\n            x_max: 1005,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 80,\n            advanceWidth: 1024,\n        },\n        d: {\n            x_min: 70,\n            x_max: 991,\n            y_min: -24,\n            y_max: 1466,\n            ha: 1490,\n            leftSideBearing: 70,\n            advanceWidth: 1139,\n        },\n        e: {\n            x_min: 75,\n            x_max: 1054,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 75,\n            advanceWidth: 1139,\n        },\n        f: {\n            x_min: 19,\n            x_max: 640,\n            y_min: 0,\n            y_max: 1491,\n            ha: 1491,\n            leftSideBearing: 19,\n            advanceWidth: 569,\n        },\n        g: {\n            x_min: 66,\n            x_max: 1002,\n            y_min: -431,\n            y_max: 1086,\n            ha: 1517,\n            leftSideBearing: 66,\n            advanceWidth: 1139,\n        },\n        h: {\n            x_min: 135,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        i: {\n            x_min: 136,\n            x_max: 316,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 455,\n        },\n        j: {\n            x_min: -94,\n            x_max: 314,\n            y_min: -431,\n            y_max: 1466,\n            ha: 1897,\n            leftSideBearing: -94,\n            advanceWidth: 455,\n        },\n        k: {\n            x_min: 136,\n            x_max: 1016,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 136,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 131,\n            x_max: 311,\n            y_min: 0,\n            y_max: 1466,\n            ha: 1466,\n            leftSideBearing: 131,\n            advanceWidth: 455,\n        },\n        m: {\n            x_min: 135,\n            x_max: 1574,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1706,\n        },\n        n: {\n            x_min: 135,\n            x_max: 998,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        o: {\n            x_min: 68,\n            x_max: 1063,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 68,\n            advanceWidth: 1139,\n        },\n        p: {\n            x_min: 135,\n            x_max: 1057,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 135,\n            advanceWidth: 1139,\n        },\n        q: {\n            x_min: 72,\n            x_max: 992,\n            y_min: -407,\n            y_max: 1086,\n            ha: 1493,\n            leftSideBearing: 72,\n            advanceWidth: 1139,\n        },\n        r: {\n            x_min: 133,\n            x_max: 710,\n            y_min: 0,\n            y_max: 1086,\n            ha: 1086,\n            leftSideBearing: 133,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 63,\n            x_max: 945,\n            y_min: -24,\n            y_max: 1086,\n            ha: 1110,\n            leftSideBearing: 63,\n            advanceWidth: 1024,\n        },\n        t: {\n            x_min: 36,\n            x_max: 554,\n            y_min: -14,\n            y_max: 1433,\n            ha: 1447,\n            leftSideBearing: 36,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 131,\n            x_max: 992,\n            y_min: -24,\n            y_max: 1062,\n            ha: 1086,\n            leftSideBearing: 131,\n            advanceWidth: 1139,\n        },\n        v: {\n            x_min: 26,\n            x_max: 1000,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 26,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 6,\n            x_max: 1463,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 6,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 15,\n            x_max: 1009,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 15,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 33,\n            x_max: 1006,\n            y_min: -431,\n            y_max: 1062,\n            ha: 1493,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 40,\n            x_max: 980,\n            y_min: 0,\n            y_max: 1062,\n            ha: 1062,\n            leftSideBearing: 40,\n            advanceWidth: 1024,\n        },\n        '{': {\n            x_min: 57,\n            x_max: 636,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 57,\n            advanceWidth: 684,\n        },\n        '|': {\n            x_min: 188,\n            x_max: 345,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 188,\n            advanceWidth: 532,\n        },\n        '}': {\n            x_min: 47,\n            x_max: 626,\n            y_min: -431,\n            y_max: 1491,\n            ha: 1922,\n            leftSideBearing: 47,\n            advanceWidth: 684,\n        },\n        '~': {\n            x_min: 87,\n            x_max: 1110,\n            y_min: 557,\n            y_max: 885,\n            ha: 328,\n            leftSideBearing: 87,\n            advanceWidth: 1196,\n        },\n    },\n    fontFamily: 'sans-serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T18:48:11.823Z',\n};\n","export const SerifFont = {\n    smufl: false,\n    name: 'SERIF',\n    spacing: 50,\n    Description: 'Built-in serif font',\n    bold: true,\n    italic: true,\n    monospaced: false,\n    serifs: true,\n    glyphs: {\n        '0': {\n            x_min: 49,\n            x_max: 975,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        '1': {\n            x_min: 227,\n            x_max: 811,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 227,\n            advanceWidth: 1024,\n        },\n        '2': {\n            x_min: 61,\n            x_max: 965,\n            y_min: 0,\n            y_max: 1383,\n            ha: 1383,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        '3': {\n            x_min: 88,\n            x_max: 883,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 88,\n            advanceWidth: 1024,\n        },\n        '4': {\n            x_min: 25,\n            x_max: 967,\n            y_min: 0,\n            y_max: 1384,\n            ha: 1384,\n            leftSideBearing: 25,\n            advanceWidth: 1024,\n        },\n        '5': {\n            x_min: 66,\n            x_max: 898,\n            y_min: -27,\n            y_max: 1409,\n            ha: 1436,\n            leftSideBearing: 66,\n            advanceWidth: 1024,\n        },\n        '6': {\n            x_min: 70,\n            x_max: 958,\n            y_min: -27,\n            y_max: 1401,\n            ha: 1428,\n            leftSideBearing: 70,\n            advanceWidth: 1024,\n        },\n        '7': {\n            x_min: 41,\n            x_max: 920,\n            y_min: -16,\n            y_max: 1356,\n            ha: 1372,\n            leftSideBearing: 41,\n            advanceWidth: 1024,\n        },\n        '8': {\n            x_min: 115,\n            x_max: 911,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: 115,\n            advanceWidth: 1024,\n        },\n        '9': {\n            x_min: 61,\n            x_max: 940,\n            y_min: -41,\n            y_max: 1383,\n            ha: 1424,\n            leftSideBearing: 61,\n            advanceWidth: 1024,\n        },\n        ' ': {\n            x_min: 0,\n            x_max: 0,\n            y_min: 0,\n            y_max: 0,\n            ha: 0,\n            leftSideBearing: 0,\n            advanceWidth: 512,\n        },\n        '!': {\n            x_min: 266,\n            x_max: 488,\n            y_min: -22,\n            y_max: 1383,\n            ha: 1405,\n            leftSideBearing: 266,\n            advanceWidth: 682,\n        },\n        '\"': {\n            x_min: 157.2000021972655,\n            x_max: 678.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 157,\n            advanceWidth: 836,\n        },\n        '#': {\n            x_min: 10,\n            x_max: 1016,\n            y_min: -1,\n            y_max: 1356,\n            ha: 1357,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        $: {\n            x_min: 90,\n            x_max: 936,\n            y_min: -180,\n            y_max: 1492,\n            ha: 1672,\n            leftSideBearing: 90,\n            advanceWidth: 1024,\n        },\n        '%': {\n            x_min: 125,\n            x_max: 1581,\n            y_min: -30,\n            y_max: 1388,\n            ha: 1418,\n            leftSideBearing: 125,\n            advanceWidth: 1706,\n        },\n        '&': {\n            x_min: 86,\n            x_max: 1536,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1593,\n        },\n        \"'\": {\n            x_min: 97.20000219726548,\n            x_max: 273.2500021457677,\n            y_min: 881,\n            y_max: 1385,\n            ha: 504,\n            leftSideBearing: 97,\n            advanceWidth: 369,\n        },\n        '(': {\n            x_min: 98,\n            x_max: 623,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 98,\n            advanceWidth: 682,\n        },\n        ')': {\n            x_min: 59,\n            x_max: 584,\n            y_min: -363,\n            y_max: 1383,\n            ha: 1746,\n            leftSideBearing: 59,\n            advanceWidth: 682,\n        },\n        '*': {\n            x_min: 137.96078522291893,\n            x_max: 886.039214777081,\n            y_min: 543,\n            y_max: 1383,\n            ha: 840,\n            leftSideBearing: 137,\n            advanceWidth: 1024,\n        },\n        '+': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 2,\n            y_max: 1034,\n            ha: 1032,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        ',': {\n            x_min: 115,\n            x_max: 399,\n            y_min: -291,\n            y_max: 208,\n            ha: 499,\n            leftSideBearing: 115,\n            advanceWidth: 512,\n        },\n        '-': {\n            x_min: 80,\n            x_max: 584,\n            y_min: 396,\n            y_max: 525,\n            ha: 129,\n            leftSideBearing: 80,\n            advanceWidth: 682,\n        },\n        '.': {\n            x_min: 143,\n            x_max: 371,\n            y_min: -22,\n            y_max: 205,\n            ha: 227,\n            leftSideBearing: 143,\n            advanceWidth: 512,\n        },\n        '/': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ':': {\n            x_min: 166,\n            x_max: 394,\n            y_min: -22,\n            y_max: 943,\n            ha: 965,\n            leftSideBearing: 166,\n            advanceWidth: 569,\n        },\n        ';': {\n            x_min: 164,\n            x_max: 448,\n            y_min: -290,\n            y_max: 943,\n            ha: 1233,\n            leftSideBearing: 164,\n            advanceWidth: 569,\n        },\n        '<': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '=': {\n            x_min: 61,\n            x_max: 1093,\n            y_min: 246,\n            y_max: 791,\n            ha: 545,\n            leftSideBearing: 61,\n            advanceWidth: 1155,\n        },\n        '>': {\n            x_min: 57,\n            x_max: 1098,\n            y_min: -15,\n            y_max: 1051,\n            ha: 1066,\n            leftSideBearing: 57,\n            advanceWidth: 1155,\n        },\n        '?': {\n            x_min: 139,\n            x_max: 848,\n            y_min: -15,\n            y_max: 1383,\n            ha: 1398,\n            leftSideBearing: 139,\n            advanceWidth: 909,\n        },\n        '@': {\n            x_min: 238,\n            x_max: 1657,\n            y_min: -29,\n            y_max: 1386,\n            ha: 1415,\n            leftSideBearing: 238,\n            advanceWidth: 1886,\n        },\n        A: {\n            x_min: 31,\n            x_max: 1445,\n            y_min: 0,\n            y_max: 1380,\n            ha: 1380,\n            leftSideBearing: 31,\n            advanceWidth: 1479,\n        },\n        B: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        C: {\n            x_min: 57,\n            x_max: 1296,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 57,\n            advanceWidth: 1366,\n        },\n        D: {\n            x_min: 33,\n            x_max: 1403,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        E: {\n            x_min: 25,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        F: {\n            x_min: 25,\n            x_max: 1119,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1139,\n        },\n        G: {\n            x_min: 66,\n            x_max: 1452,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 66,\n            advanceWidth: 1479,\n        },\n        H: {\n            x_min: 39,\n            x_max: 1438,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 39,\n            advanceWidth: 1479,\n        },\n        I: {\n            x_min: 37,\n            x_max: 642,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 37,\n            advanceWidth: 682,\n        },\n        J: {\n            x_min: 20,\n            x_max: 758,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 20,\n            advanceWidth: 797,\n        },\n        K: {\n            x_min: 70,\n            x_max: 1479,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        L: {\n            x_min: 25,\n            x_max: 1224,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1251,\n        },\n        M: {\n            x_min: 25,\n            x_max: 1768,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 25,\n            advanceWidth: 1821,\n        },\n        N: {\n            x_min: 25,\n            x_max: 1450,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 25,\n            advanceWidth: 1479,\n        },\n        O: {\n            x_min: 70,\n            x_max: 1409,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        P: {\n            x_min: 33,\n            x_max: 1110,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 33,\n            advanceWidth: 1139,\n        },\n        Q: {\n            x_min: 70,\n            x_max: 1435,\n            y_min: -364.28571588721996,\n            y_max: 1383,\n            ha: 1747.28571588722,\n            leftSideBearing: 70,\n            advanceWidth: 1479,\n        },\n        R: {\n            x_min: 35,\n            x_max: 1347,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1366,\n        },\n        S: {\n            x_min: 86,\n            x_max: 1006,\n            y_min: -28,\n            y_max: 1383,\n            ha: 1411,\n            leftSideBearing: 86,\n            advanceWidth: 1139,\n        },\n        T: {\n            x_min: 35,\n            x_max: 1214,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 35,\n            advanceWidth: 1251,\n        },\n        U: {\n            x_min: 29,\n            x_max: 1444,\n            y_min: -28,\n            y_max: 1356,\n            ha: 1384,\n            leftSideBearing: 29,\n            advanceWidth: 1479,\n        },\n        V: {\n            x_min: 33,\n            x_max: 1428,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 33,\n            advanceWidth: 1479,\n        },\n        W: {\n            x_min: 10,\n            x_max: 1906,\n            y_min: -22,\n            y_max: 1356,\n            ha: 1378,\n            leftSideBearing: 10,\n            advanceWidth: 1933,\n        },\n        X: {\n            x_min: 20,\n            x_max: 1449,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 20,\n            advanceWidth: 1479,\n        },\n        Y: {\n            x_min: 45,\n            x_max: 1441,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 45,\n            advanceWidth: 1479,\n        },\n        Z: {\n            x_min: 18,\n            x_max: 1222,\n            y_min: 0,\n            y_max: 1356,\n            ha: 1356,\n            leftSideBearing: 18,\n            advanceWidth: 1251,\n        },\n        '[': {\n            x_min: 180,\n            x_max: 612,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 180,\n            advanceWidth: 682,\n        },\n        '\\\\': {\n            x_min: -17,\n            x_max: 586,\n            y_min: -27,\n            y_max: 1383,\n            ha: 1410,\n            leftSideBearing: -17,\n            advanceWidth: 569,\n        },\n        ']': {\n            x_min: 70,\n            x_max: 502,\n            y_min: -319,\n            y_max: 1355,\n            ha: 1674,\n            leftSideBearing: 70,\n            advanceWidth: 682,\n        },\n        '^': {\n            x_min: 49,\n            x_max: 914,\n            y_min: 608,\n            y_max: 1355,\n            ha: 747,\n            leftSideBearing: 49,\n            advanceWidth: 961,\n        },\n        _: {\n            x_min: 0,\n            x_max: 1024,\n            y_min: -255,\n            y_max: -153,\n            ha: 102,\n            leftSideBearing: 0,\n            advanceWidth: 1024,\n        },\n        '`': {\n            x_min: 39,\n            x_max: 499,\n            y_min: 1037,\n            y_max: 1392.509803639748,\n            ha: 355.50980363974804,\n            leftSideBearing: 39,\n            advanceWidth: 682,\n        },\n        a: {\n            x_min: 76,\n            x_max: 905,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 76,\n            advanceWidth: 909,\n        },\n        b: {\n            x_min: 6,\n            x_max: 958,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 6,\n            advanceWidth: 1024,\n        },\n        c: {\n            x_min: 51,\n            x_max: 843,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        d: {\n            x_min: 55,\n            x_max: 1006,\n            y_min: -20,\n            y_max: 1399,\n            ha: 1419,\n            leftSideBearing: 55,\n            advanceWidth: 1024,\n        },\n        e: {\n            x_min: 51,\n            x_max: 868,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 51,\n            advanceWidth: 909,\n        },\n        f: {\n            x_min: 41,\n            x_max: 783,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 41,\n            advanceWidth: 682,\n        },\n        g: {\n            x_min: 57,\n            x_max: 963,\n            y_min: -446,\n            y_max: 942,\n            ha: 1388,\n            leftSideBearing: 57,\n            advanceWidth: 1024,\n        },\n        h: {\n            x_min: 18,\n            x_max: 997,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        i: {\n            x_min: 33,\n            x_max: 516,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 33,\n            advanceWidth: 569,\n        },\n        j: {\n            x_min: -142,\n            x_max: 397,\n            y_min: -446,\n            y_max: 1399,\n            ha: 1845,\n            leftSideBearing: -142,\n            advanceWidth: 569,\n        },\n        k: {\n            x_min: 14,\n            x_max: 1029,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 14,\n            advanceWidth: 1024,\n        },\n        l: {\n            x_min: 39,\n            x_max: 523,\n            y_min: 0,\n            y_max: 1399,\n            ha: 1399,\n            leftSideBearing: 39,\n            advanceWidth: 569,\n        },\n        m: {\n            x_min: 33,\n            x_max: 1587,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1593,\n        },\n        n: {\n            x_min: 33,\n            x_max: 993,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 33,\n            advanceWidth: 1024,\n        },\n        o: {\n            x_min: 59,\n            x_max: 963,\n            y_min: -20,\n            y_max: 942,\n            ha: 962,\n            leftSideBearing: 59,\n            advanceWidth: 1024,\n        },\n        p: {\n            x_min: 10,\n            x_max: 964,\n            y_min: -443,\n            y_max: 944,\n            ha: 1387,\n            leftSideBearing: 10,\n            advanceWidth: 1024,\n        },\n        q: {\n            x_min: 49,\n            x_max: 999,\n            y_min: -443,\n            y_max: 942.0135137169275,\n            ha: 1385.0135137169275,\n            leftSideBearing: 49,\n            advanceWidth: 1024,\n        },\n        r: {\n            x_min: 10,\n            x_max: 685,\n            y_min: 0,\n            y_max: 944,\n            ha: 944,\n            leftSideBearing: 10,\n            advanceWidth: 682,\n        },\n        s: {\n            x_min: 104,\n            x_max: 713,\n            y_min: -20,\n            y_max: 942.0263161804552,\n            ha: 962.0263161804552,\n            leftSideBearing: 104,\n            advanceWidth: 797,\n        },\n        t: {\n            x_min: 27,\n            x_max: 572,\n            y_min: -18,\n            y_max: 1186,\n            ha: 1204,\n            leftSideBearing: 27,\n            advanceWidth: 569,\n        },\n        u: {\n            x_min: 18,\n            x_max: 981,\n            y_min: -21,\n            y_max: 921,\n            ha: 942,\n            leftSideBearing: 18,\n            advanceWidth: 1024,\n        },\n        v: {\n            x_min: 39,\n            x_max: 976,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 39,\n            advanceWidth: 1024,\n        },\n        w: {\n            x_min: 43,\n            x_max: 1423,\n            y_min: -28,\n            y_max: 921,\n            ha: 949,\n            leftSideBearing: 43,\n            advanceWidth: 1479,\n        },\n        x: {\n            x_min: 35,\n            x_max: 989,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 35,\n            advanceWidth: 1024,\n        },\n        y: {\n            x_min: 29,\n            x_max: 976,\n            y_min: -445,\n            y_max: 921,\n            ha: 1366,\n            leftSideBearing: 29,\n            advanceWidth: 1024,\n        },\n        z: {\n            x_min: 55,\n            x_max: 855,\n            y_min: 0,\n            y_max: 921,\n            ha: 921,\n            leftSideBearing: 55,\n            advanceWidth: 909,\n        },\n        '{': {\n            x_min: 205,\n            x_max: 717,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 205,\n            advanceWidth: 983,\n        },\n        '|': {\n            x_min: 137,\n            x_max: 273,\n            y_min: -512,\n            y_max: 1535,\n            ha: 2047,\n            leftSideBearing: 137,\n            advanceWidth: 410,\n        },\n        '}': {\n            x_min: 266,\n            x_max: 778,\n            y_min: -377,\n            y_max: 1397,\n            ha: 1774,\n            leftSideBearing: 266,\n            advanceWidth: 983,\n        },\n        '~': {\n            x_min: 82,\n            x_max: 1028,\n            y_min: 380,\n            y_max: 666,\n            ha: 286,\n            leftSideBearing: 82,\n            advanceWidth: 1108,\n        },\n    },\n    fontFamily: 'serif',\n    resolution: 2048,\n    generatedOn: '2020-10-18T19:03:12.514Z',\n};\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// Utility methods used by the rest of the VexFlow codebase.\nimport { Flow } from './flow';\nimport { log, RuntimeError } from './util';\nexport class Vex {\n    // Users of `Vex.forEach(a, fn)` should use `Array.prototype.forEach()` instead.\n    // static forEach<T>(arr: T[], callbackFn: (value: T, index: number, array: T[]) => void) {\n    //   arr.forEach(callbackFn);\n    // }\n    /**\n     * Take `arr` and return a new list consisting of the sorted, unique,\n     * contents of arr. Does not modify `arr`.\n     */\n    // eslint-disable-next-line\n    static sortAndUnique(arr, cmp, eq) {\n        if (arr.length > 1) {\n            const newArr = [];\n            let last;\n            arr.sort(cmp);\n            for (let i = 0; i < arr.length; ++i) {\n                if (i === 0 || !eq(arr[i], last)) {\n                    newArr.push(arr[i]);\n                }\n                last = arr[i];\n            }\n            return newArr;\n        }\n        else {\n            return arr;\n        }\n    }\n    /** Check if array `arr` contains `obj`. */\n    // eslint-disable-next-line\n    static contains(arr, obj) {\n        let i = arr.length;\n        while (i--) {\n            if (arr[i] === obj) {\n                return true;\n            }\n        }\n        return false;\n    }\n    // Get the 2D Canvas context from DOM element `canvas_sel`.\n    static getCanvasContext(canvasSelector) {\n        if (!canvasSelector) {\n            throw new RuntimeError('BadArgument', 'Invalid canvas selector: ' + canvasSelector);\n        }\n        const canvas = document.getElementById(canvasSelector);\n        if (!(canvas && canvas.getContext)) {\n            throw new RuntimeError('UnsupportedBrowserError', 'This browser does not support HTML5 Canvas');\n        }\n        return canvas.getContext('2d');\n    }\n    /** Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds. */\n    // eslint-disable-next-line\n    static benchmark(s, f) {\n        const start_time = new Date().getTime();\n        f();\n        const elapsed = new Date().getTime() - start_time;\n        log(s, elapsed + 'ms');\n    }\n    // Get stack trace.\n    static stackTrace() {\n        const err = new Error();\n        return err.stack;\n    }\n}\nVex.Flow = Flow;\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { LelandFont } from './leland_glyphs';\nexport function loadLeland() {\n    Font.load('Leland', LelandFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { CommonMetrics } from './common_metrics';\nimport { CustomFont } from './custom_glyphs';\nexport function loadCustom() {\n    Font.load('Custom', CustomFont, CommonMetrics);\n}\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\n//\n// vexflow-gonville.ts is the entry point for vexflow-gonville.js.\n// This version bundles the Gonville music engraving font.\nimport { Flow } from '../src/flow';\nimport { loadCustom } from '../src/fonts/load_custom';\nimport { loadLeland } from '../src/fonts/load_leland';\nimport { loadTextFonts } from '../src/fonts/textfonts';\nloadLeland();\nloadCustom();\nFlow.setMusicFont('Leland', 'Custom');\nloadTextFonts();\n// Re-export all exports from index.ts.\nexport * from '../src/index';\n// Also collect all exports into a default export for CJS projects.\nexport * as default from '../src/index';\n","// [VexFlow](https://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// MIT License\nimport { Font } from '../font';\nimport { TextFormatter } from '../textformatter';\nimport { PetalumaScriptFont } from './petalumascript_glyphs';\nimport { RobotoSlabFont } from './robotoslab_glyphs';\nimport { SansFontBold } from './sans_bold_text_metrics';\nimport { SansFont } from './sans_text_metrics';\nimport { SerifFont } from './serif_text_metrics';\nexport function loadTextFonts() {\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFontBold;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: true,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Sans-serif fallback font, very close to Arial\n    {\n        const fontData = SansFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Usually @ is the tallest and widest character, although not the\n        // highest since it starts below the baseline.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Generic SANS font',\n        });\n    }\n    // Serif fallback font, very close to Times\n    {\n        const fontData = SerifFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = '@';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Generic SERIF font',\n        });\n    }\n    // Roboto Slab\n    {\n        const fontData = RobotoSlabFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // Previously we used 'H', but it isn't actually the tallest or the widest.\n        // Interestingly, the lowercase 'b' is the tallest glyph.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: true,\n            description: 'Text font to pair with the Bravura / Gonville music fonts.',\n        });\n    }\n    // PetalumaScript\n    {\n        const fontData = PetalumaScriptFont;\n        const { fontFamily, resolution, glyphs } = fontData;\n        Font.load(fontFamily, fontData);\n        // M is wider, but H is taller. :-)\n        // Lowercase b is also taller in this font.\n        const maxSizeGlyph = 'b';\n        TextFormatter.registerInfo({\n            family: fontFamily,\n            resolution,\n            glyphs,\n            maxSizeGlyph,\n            monospaced: false,\n            bold: false,\n            italic: false,\n            superscriptOffset: 0.66,\n            subscriptOffset: 0.66,\n            serifs: false,\n            description: 'Text font to pair with the Petaluma music font.',\n        });\n    }\n}\n"],"names":["root","factory","exports","module","define","amd","window","globalThis","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","g","Function","e","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","isCategory","category","checkAncestors","constructorFcn","constructor","CATEGORY","getPrototypeOf","isAccidental","Category","Accidental","isAnnotation","Annotation","isBarline","Barline","isDot","Dot","isGraceNote","GraceNote","isGraceNoteGroup","GraceNoteGroup","isNote","Note","isRenderContext","RenderContext","isStaveNote","StaveNote","isStemmableNote","StemmableNote","isTabNote","TabNote","RuntimeError","Error","code","message","super","globalObject","self","defined","x","undefined","log","block","args","line","Array","slice","join","console","warn","err","stack","midLine","a","b","mid_line","n","parseInt","prefix","text","normalizeAngle","Math","PI","sumArray","arr","reduce","Fraction","GCD","Number","isNaN","t","LCM","LCMM","length","shift","numerator","denominator","set","simplify","u","d","gcd","add","param1","param2","otherNumerator","otherDenominator","getNumeratorAndDenominator","lcm","subtract","multiply","divide","equals","compare","__staticFractionA","copy","__staticFractionB","greaterThan","greaterThanEquals","lessThan","lessThanEquals","clone","other","quotient","floor","remainder","makeAbs","abs","toString","toSimplifiedString","__staticFractionTmp","toMixedString","s","q","f","parse","str","i","split","BoundingBox","that","y","w","h","getX","getY","getW","getH","setX","setY","setW","setH","move","mergeWith","boundingBox","new_x","new_y","new_w","max","new_h","BoundingBoxComputation","x1","NaN","y1","x2","y2","getX1","getY1","width","height","addPoint","addX","addY","addQuadraticCurve","p0x","p0y","p1x","p1y","p2x","p2y","p01x","denom","it","p01y","addBezierCurve","p3x","p3y","p0","p1","p2","p3","pow","c","b2ac","t1","sqrt","t2","FontWeight","FontStyle","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","fontParser","Fonts","Font","convertSizeToPixelValue","fontSize","SIZE","_a","scaleToPxFrom","pt","parseFloat","unit","replace","toLowerCase","convertSizeToPointValue","validate","size","weight","style","fromCSSString","family","SANS_SERIF","NORMAL","cssFontShorthand","document","createElement","font","fontFamily","fontWeight","fontStyle","toCSSString","fontInfo","st","trim","wt","sz","scaleSize","scaleFactor","isBold","parsedWeight","isItalic","ITALIC","loadWebFont","fontName","woffURL","includeWoff2","fontFace","FontFace","load","fonts","loadWebFonts","host","WEB_FONT_HOST","files","WEB_FONT_FILES","fontPath","data","metrics","setData","setMetrics","name","getName","getData","getMetrics","hasData","getResolution","resolution","getGlyphs","glyphs","lookupMetric","defaultValue","keyParts","currObj","SERIF","px","em","in","mm","cm","PetalumaScript","Index","id","type","class","Registry","getDefaultRegistry","defaultRegistry","enableDefaultRegistry","registry","disableDefaultRegistry","index","clear","setIndexValue","elem","updateIndex","oldValue","getElementById","getAttribute","register","setAttribute","onRegister","_b","getElementsByAttribute","attribute","index_attr","index_attr_val","keys","map","k","getElementsByType","getElementsByClass","className","onUpdate","info","includes","Element","newID","ID","children","attrs","getCategory","rendered","addChildElement","child","push","setStyle","setGroupStyle","forEach","getStyle","applyStyle","context","save","shadowColor","setShadowColor","shadowBlur","setShadowBlur","fillStyle","setFillStyle","strokeStyle","setStrokeStyle","lineWidth","setLineWidth","restoreStyle","restore","drawWithStyle","checkContext","draw","hasClass","indexOf","addClass","removeClass","splice","isRendered","setRendered","getAttributes","getSVGElement","suffix","element","oldID","getBoundingBox","getContext","setContext","setFont","textFont","defaultTextFont","TEXT_FONT","fontIsObject","fontIsString","fontIsUndefined","sizeWeightStyleAreUndefined","assign","getFont","resetFont","setFontSize","getFontSize","fontSizeInPoints","fontSizeInPixels","RESOLUTION","durations","durationAliases","keySignatures","acc","num","generateKeySignatures","C","Am","F","Dm","Bb","Gm","Eb","Cm","Ab","Fm","Db","Bbm","Gb","Ebm","Cb","Abm","Dbm","Gbm","G","Em","D","Bm","A","E","B","clefs","treble","line_shift","bass","tenor","alto","soprano","percussion","subbass","french","notesInfo","int_val","CN","accidental","CB","CBB","DN","DB","DBB","EN","EB","EBB","FN","FB","FBB","GN","GB","GBB","AN","AB","ABB","BN","BB","BBB","R","rest","X","octave","shift_right","accidentals","parenRightPaddingAdjustment","bb","db","bs","bss","bbs","ashs","afhf","accSagittal5v7KleismaUp","accSagittal5v7KleismaDown","accSagittal5CommaUp","accSagittal5CommaDown","accSagittal7CommaUp","accSagittal7CommaDown","accSagittal25SmallDiesisUp","accSagittal25SmallDiesisDown","accSagittal35MediumDiesisUp","accSagittal35MediumDiesisDown","accSagittal11MediumDiesisUp","accSagittal11MediumDiesisDown","accSagittal11LargeDiesisUp","accSagittal11LargeDiesisDown","accSagittal35LargeDiesisUp","accSagittal35LargeDiesisDown","accSagittalSharp25SDown","accSagittalFlat25SUp","accSagittalSharp7CDown","accSagittalFlat7CUp","accSagittalSharp5CDown","accSagittalFlat5CUp","accSagittalSharp5v7kDown","accSagittalFlat5v7kUp","accSagittalSharp","accSagittalFlat","accSagittalSharp5v7kUp","accSagittalFlat5v7kDown","accSagittalSharp5CUp","accSagittalFlat5CDown","accSagittalSharp7CUp","accSagittalFlat7CDown","accSagittalSharp25SUp","accSagittalFlat25SDown","accSagittalSharp35MUp","accSagittalFlat35MDown","accSagittalSharp11MUp","accSagittalFlat11MDown","accSagittalSharp11LUp","accSagittalFlat11LDown","accSagittalSharp35LUp","accSagittalFlat35LDown","accSagittalDoubleSharp25SDown","accSagittalDoubleFlat25SUp","accSagittalDoubleSharp7CDown","accSagittalDoubleFlat7CUp","accSagittalDoubleSharp5CDown","accSagittalDoubleFlat5CUp","accSagittalDoubleSharp5v7kDown","accSagittalDoubleFlat5v7kUp","accSagittalDoubleSharp","accSagittalDoubleFlat","accSagittal7v11KleismaUp","accSagittal7v11KleismaDown","accSagittal17CommaUp","accSagittal17CommaDown","accSagittal55CommaUp","accSagittal55CommaDown","accSagittal7v11CommaUp","accSagittal7v11CommaDown","accSagittal5v11SmallDiesisUp","accSagittal5v11SmallDiesisDown","accSagittalSharp5v11SDown","accSagittalFlat5v11SUp","accSagittalSharp7v11CDown","accSagittalFlat7v11CUp","accSagittalSharp55CDown","accSagittalFlat55CUp","accSagittalSharp17CDown","accSagittalFlat17CUp","accSagittalSharp7v11kDown","accSagittalFlat7v11kUp","accSagittalSharp7v11kUp","accSagittalFlat7v11kDown","accSagittalSharp17CUp","accSagittalFlat17CDown","accSagittalSharp55CUp","accSagittalFlat55CDown","accSagittalSharp7v11CUp","accSagittalFlat7v11CDown","accSagittalSharp5v11SUp","accSagittalFlat5v11SDown","accSagittalDoubleSharp5v11SDown","accSagittalDoubleFlat5v11SUp","accSagittalDoubleSharp7v11CDown","accSagittalDoubleFlat7v11CUp","accSagittalDoubleSharp55CDown","accSagittalDoubleFlat55CUp","accSagittalDoubleSharp17CDown","accSagittalDoubleFlat17CUp","accSagittalDoubleSharp7v11kDown","accSagittalDoubleFlat7v11kUp","accSagittal23CommaUp","accSagittal23CommaDown","accSagittal5v19CommaUp","accSagittal5v19CommaDown","accSagittal5v23SmallDiesisUp","accSagittal5v23SmallDiesisDown","accSagittalSharp5v23SDown","accSagittalFlat5v23SUp","accSagittalSharp5v19CDown","accSagittalFlat5v19CUp","accSagittalSharp23CDown","accSagittalFlat23CUp","accSagittalSharp23CUp","accSagittalFlat23CDown","accSagittalSharp5v19CUp","accSagittalFlat5v19CDown","accSagittalSharp5v23SUp","accSagittalFlat5v23SDown","accSagittalDoubleSharp5v23SDown","accSagittalDoubleFlat5v23SUp","accSagittalDoubleSharp5v19CDown","accSagittalDoubleFlat5v19CUp","accSagittalDoubleSharp23CDown","accSagittalDoubleFlat23CUp","accSagittal19SchismaUp","accSagittal19SchismaDown","accSagittal17KleismaUp","accSagittal17KleismaDown","accSagittal143CommaUp","accSagittal143CommaDown","accSagittal11v49CommaUp","accSagittal11v49CommaDown","accSagittal19CommaUp","accSagittal19CommaDown","accSagittal7v19CommaUp","accSagittal7v19CommaDown","accSagittal49SmallDiesisUp","accSagittal49SmallDiesisDown","accSagittal23SmallDiesisUp","accSagittal23SmallDiesisDown","accSagittal5v13MediumDiesisUp","accSagittal5v13MediumDiesisDown","accSagittal11v19MediumDiesisUp","accSagittal11v19MediumDiesisDown","accSagittal49MediumDiesisUp","accSagittal49MediumDiesisDown","accSagittal5v49MediumDiesisUp","accSagittal5v49MediumDiesisDown","accSagittal49LargeDiesisUp","accSagittal49LargeDiesisDown","accSagittal11v19LargeDiesisUp","accSagittal11v19LargeDiesisDown","accSagittal5v13LargeDiesisUp","accSagittal5v13LargeDiesisDown","accSagittalSharp23SDown","accSagittalFlat23SUp","accSagittalSharp49SDown","accSagittalFlat49SUp","accSagittalSharp7v19CDown","accSagittalFlat7v19CUp","accSagittalSharp19CDown","accSagittalFlat19CUp","accSagittalSharp11v49CDown","accSagittalFlat11v49CUp","accSagittalSharp143CDown","accSagittalFlat143CUp","accSagittalSharp17kDown","accSagittalFlat17kUp","accSagittalSharp19sDown","accSagittalFlat19sUp","accSagittalSharp19sUp","accSagittalFlat19sDown","accSagittalSharp17kUp","accSagittalFlat17kDown","accSagittalSharp143CUp","accSagittalFlat143CDown","accSagittalSharp11v49CUp","accSagittalFlat11v49CDown","accSagittalSharp19CUp","accSagittalFlat19CDown","accSagittalSharp7v19CUp","accSagittalFlat7v19CDown","accSagittalSharp49SUp","accSagittalFlat49SDown","accSagittalSharp23SUp","accSagittalFlat23SDown","accSagittalSharp5v13MUp","accSagittalFlat5v13MDown","accSagittalSharp11v19MUp","accSagittalFlat11v19MDown","accSagittalSharp49MUp","accSagittalFlat49MDown","accSagittalSharp5v49MUp","accSagittalFlat5v49MDown","accSagittalSharp49LUp","accSagittalFlat49LDown","accSagittalSharp11v19LUp","accSagittalFlat11v19LDown","accSagittalSharp5v13LUp","accSagittalFlat5v13LDown","accSagittalDoubleSharp23SDown","accSagittalDoubleFlat23SUp","accSagittalDoubleSharp49SDown","accSagittalDoubleFlat49SUp","accSagittalDoubleSharp7v19CDown","accSagittalDoubleFlat7v19CUp","accSagittalDoubleSharp19CDown","accSagittalDoubleFlat19CUp","accSagittalDoubleSharp11v49CDown","accSagittalDoubleFlat11v49CUp","accSagittalDoubleSharp143CDown","accSagittalDoubleFlat143CUp","accSagittalDoubleSharp17kDown","accSagittalDoubleFlat17kUp","accSagittalDoubleSharp19sDown","accSagittalDoubleFlat19sUp","accSagittalShaftUp","accSagittalShaftDown","accSagittalAcute","accSagittalGrave","accSagittal1MinaUp","accSagittal1MinaDown","accSagittal2MinasUp","accSagittal2MinasDown","accSagittal1TinaUp","accSagittal1TinaDown","accSagittal2TinasUp","accSagittal2TinasDown","accSagittal3TinasUp","accSagittal3TinasDown","accSagittal4TinasUp","accSagittal4TinasDown","accSagittal5TinasUp","accSagittal5TinasDown","accSagittal6TinasUp","accSagittal6TinasDown","accSagittal7TinasUp","accSagittal7TinasDown","accSagittal8TinasUp","accSagittal8TinasDown","accSagittal9TinasUp","accSagittal9TinasDown","accSagittalFractionalTinaUp","accSagittalFractionalTinaDown","accidentalNarrowReversedFlat","accidentalNarrowReversedFlatAndFlat","accidentalWilsonPlus","accidentalWilsonMinus","articulations","between_lines","av","aboveCode","belowCode","ao","ah","am","ornaments","mordent","mordent_inverted","turn","turn_inverted","tr","upprall","downprall","prallup","pralldown","upmordent","downmordent","lineprall","prallprall","scoop","doit","fall","doitLong","fallLong","bend","plungerClosed","plungerOpen","flip","jazzTurn","smear","Tables","currentMusicFont","MUSIC_FONT_STACK","clefProperties","clef","keyProperties","keyOctaveGlyph","params","options","octave_shift","duration","sanitizeDuration","pieces","toUpperCase","stroke","int_value","customNoteHeadProps","glyphName","codeNoteHead","displaced","integerToNote","integer","noteValue","tabToGlyphProps","fret","scale","glyph","shift_y","glyphMetrics","Glyph","TABLATURE_FONT_SCALE","textWidth","getWidth","articulationCodes","artic","accidentalCodes","ornamentCodes","keySignature","spec","keySpec","baseNotes","accidentalCount","min","doubleAccidentalCount","getKeySignatures","hasKeySignature","durationNumber","durationToFraction","durationToNumber","durationToTicks","ticks","getGlyphProps","durationCodes","glyphTypeProperties","code_head","common","NOTATION_FONT_SCALE","UNISON","SOFTMAX_FACTOR","STEM_WIDTH","STEM_HEIGHT","STAVE_LINE_THICKNESS","RENDER_PRECISION_PLACES","SLASH_NOTEHEAD_WIDTH","STAVE_LINE_DISTANCE","TEXT_HEIGHT_OFFSET_HACK","accidentalMap","accidentalColumnsTable","second_on_bottom","spaced_out_tetrachord","spaced_out_pentachord","very_spaced_out_pentachord","spaced_out_hexachord","very_spaced_out_hexachord","unicode","sharp","String","fromCharCode","flat","natural","triangle","degrees","circle","validTypes","m","ci","cx","sf","sb","sq","tu","td","TIME4_4","num_beats","beat_value","stem","flag","stem_up_extension","stem_down_extension","tabnote_stem_up_extension","tabnote_stem_down_extension","dot_shiftY","line_above","line_below","position","ledger_code_head","beam_count","stem_beam_extension","code_flag_upstem","code_flag_downstem","OutlineCode","ModifierPosition","GlyphCacheEntry","fontStack","point","loadMetrics","bbox","getOutlineBoundingBox","outline","x_shift","y_shift","lookupFontMetric","GlyphOutline","originX","originY","precision","round","nextX","nextY","parts","MOVE","LINE","QUADRATIC","BEZIER","lookupGlyph","x_min","x_max","ha","cached_outline","renderGlyph","ctx","x_pos","y_pos","cache","lookup","customScale","renderOutline","go","beginPath","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","fill","bboxComp","penX","penY","topGlyphs","botGlyphs","originShift","setOptions","reset","getCode","setPoint","setStave","stave","getXShift","setXShift","getYshift","setYShift","checkMetrics","metricsScale","setOriginX","xShift","setOriginY","yShift","setOrigin","render","xPos","yPos","checkStave","renderToStave","getYForGlyphs","Map","entries","CURRENT_CACHE_KEY","entry","Modifier","Position","PositionString","center","CENTER","above","ABOVE","below","BELOW","left","LEFT","right","RIGHT","text_line","spacingFromNextModifier","setWidth","getNote","note","checkAttachedNote","setNote","getIndex","checkIndex","setIndex","getModifierContext","modifierContext","checkModifierContext","setModifierContext","getPosition","setPosition","setTextLine","setSpacingFromNextModifier","getSpacingFromNextModifier","alignSubNotesWithNote","subNotes","tickContext","getTickContext","getStave","subNoteXOffset","modLeftPx","modRightPx","subNote","subTickContext","setXOffset","Music","NUM_TONES","canonical_notes","roots","root_values","root_indices","diatonic_intervals","diatonic_accidentals","unison","m2","M2","m3","M3","p4","dim5","p5","m6","M6","b7","M7","intervals","b2","min2","S","H","maj2","T","W","b3","min3","maj3","b5","aug4","b6","aug5","maj6","m7","min7","dom7","maj7","scales","major","minor","ionian","dorian","phyrgian","lydian","mixolydian","aeolian","locrian","scaleTypes","M","noteValues","root_index","cn","cb","cbb","dn","dbb","en","eb","ebb","fn","fb","fbb","gn","gb","gbb","an","ab","abb","bn","bbb","isValidNoteValue","isValidIntervalValue","interval","getNoteParts","noteString","match","exec","getKeyParts","keyString","getNoteValue","getIntervalValue","intervalString","getCanonicalNoteName","getCanonicalIntervalName","intervalValue","getRelativeNoteValue","direction","sum","getRelativeNoteName","rootValue","multiplier","reverse_interval","relativeNoteName","getScaleTones","tones","nextNote","getIntervalBetween","note1","note2","difference","createScaleMap","keySigParts","scaleName","keySigString","noteLocation","scaleMap","rootName","noteName","L","DEBUG","format","state","musicFont","noteheadAccidentalPadding","leftShift","left_shift","accidentalSpacing","additionalPadding","accidentalLinePositionsAndSpaceNeeds","prevNote","extraXSpaceNeededForLeftDisplacedNotehead","props","getKeyProps","getLeftDisplacedHeadPx","lineSpace","getSpacingBetweenLines","getYForLine","accLine","extraXSpaceNeeded","spacingBetweenStaveLines","sort","staveLineAccidentalLayoutMetrics","maxExtraXSpaceNeeded","accidentalLinePositionAndSpaceNeeds","priorLineMetric","currentLineMetric","flatLine","dblSharpLine","numAcc","column","totalColumns","noFurtherConflicts","groupStart","groupEnd","checkCollision","getGroupLine","getGroupLines","indexes","lineDifference","indexA","indexB","item","notColliding","indexPairs","every","line1","line2","groupLength","groupMember","endCase","patternLength","collisionDetected","columnWidths","columnXOffsets","totalShift","accCount","lastAccOnLine","clearance","clearanceRequired","collision","applyAccidentals","voices","tickPositions","tickNoteMap","voice","tickPosition","getTickables","shouldIgnoreTicks","notesAtPosition","getTicks","music","scaleMapKey","tickPos","tickables","modifiedPitches","processNote","isRest","staveNote","keyIndex","accidentalString","pitch","sameAccidental","previouslyModified","getModifiers","modifier","addModifier","getGraceNotes","render_options","font_scale","parenLeftPadding","parenRightPadding","cautionary","fontScale","parenLeft","parenRight","parenWidth","setAsCautionary","start","getModifierStartXY","accX","accY","Stem","UP","DOWN","WIDTH","HEIGHT","stem_up_y_offset","stem_down_y_offset","stem_up_y_base_offset","stem_down_y_base_offset","x_begin","x_end","y_top","y_bottom","stem_extension","stem_direction","hide","isStemlet","stemletHeight","renderHeightAdjustment","setNoteHeadXBounds","setDirection","setExtension","ext","getExtension","setYBounds","getHeight","y_offset","getExtents","isStemUp","ys","stemHeight","innerMostNoteheadY","outerMostNoteheadY","topY","baseY","setVisibility","isVisible","setStemlet","adjustHeightForFlag","adjustHeightForBeam","stem_x","stem_y","y_base_offset","stemletYOffset","openGroup","pointerBBox","closeGroup","TextFormatter","textWidthCache","textHeightCache","getFontFamilies","registeredFonts","formatterInfo","create","requestedFont","candidates","requestedFamilies","requestedFamily","startsWith","formatter","values","bold","italic","perfectMatch","find","partialMatch","fontSizeInPt","getInfo","registerInfo","overwrite","serifs","monospaced","superscriptOffset","subscriptOffset","maxSizeGlyph","cacheKey","updateParams","localHeightCache","updateCacheKey","BOLD","getGlyphMetrics","character","maxHeight","getWidthForCharacterInEm","advanceWidth","getYForCharacterInPx","rv","yMin","yMax","y_min","y_max","getYForStringInPx","extent","curY","getWidthForTextInEm","cachedWidths","getWidthForTextInPx","AnnotationHorizontalJustify","AnnotationVerticalJustify","minAnnotationPadding","annotations","leftWidth","rightWidth","maxLeftGlyphWidth","maxRightGlyphWidth","annotation","textFormatter","verticalSpaceNeeded","glyphWidth","horizontalJustification","stemDirection","hasStem","getStemDirection","lines","draw_stem","getStem","getNoteType","getNumLines","verticalJustification","VerticalJustify","TOP","noteLine","getLineNumber","leastString","top_text_line","BOTTOM","greatestString","curBottom","rightOverlap","right_shift","leftOverlap","setVerticalJustification","just","VerticalJustifyString","getJustification","setJustification","HorizontalJustifyString","text_width","text_height","getStemX","stem_ext","spacing","has_stem","checkStem","getYs","yt","getYForTopText","getYForBottomText","getTopLineTopY","extents","getStemExtents","fillText","HorizontalJustify","centerStem","CENTER_STEM","top","bottom","roundToNearestHalf","mathFn","isWithinLines","getRoundingFunction","ceil","isStaveOrGraceNote","Articulation","maxGlyphWidth","getIncrement","articulation","increment","curTop","maxWidth","articWidth","overlap","easyScoreHook","builder","articNameToCode","staccato","tenuto","accent","articString","getFactory","endsWith","setBetweenLines","betweenLines","textLine","canSitBetweenLines","staffSpace","isTab","shouldSitOutsideStaff","initialOffset","isOnStemTip","getInitialOffset","padding","stemTipY","stemBaseY","getTopY","INITIAL_OFFSET","getBottomY","offsetDirection","articLine","snappedLine","snapLineToStaff","setRawFont","drawDot","color","arc","closePath","Tickable","_preFormatted","_postFormatted","intrinsicTicks","tickMultiplier","modifiers","tupletStack","align_center","center_x_shift","ignore_ticks","formatterMetrics","freedom","iterations","space","used","mean","deviation","setIgnoreTicks","checkTickContext","getFormatterMetrics","getCenterXShift","isCenterAligned","setCenterXShift","centerXShift","setCenterAlignment","getVoice","setVoice","getTuplet","tuplet","getTupletStack","resetTuplet","noteCount","notesOccupied","getNoteCount","getNotesOccupied","applyTickMultiplier","pop","setTuplet","addToModifierContext","mc","addMember","setTickContext","tc","preFormat","preFormatted","postFormat","postFormatted","getIntrinsicTicks","setIntrinsicTicks","getTickMultiplier","setDuration","getAbsoluteX","plotMetrics","xStart","leftDisplacedHeadPx","xPre1","xAbs","xPost1","notePx","xPost2","rightDisplacedHeadPx","xEnd","xFreedomRight","xWidth","yy","spaceDeviation","parseDuration","durationString","dots","parseNoteStruct","noteStruct","durationProps","customTypes","currentTicks","parsedNoteStruct","JSON","stringify","keyProps","noteType","duration_override","glyphProps","customGlyphs","playNote","annotation_spacing","glyph_font_scale","stroke_px","getPlayNote","setPlayNote","addStroke","setYs","getRightDisplacedHeadPx","setLeftDisplacedHeadPx","setRightDisplacedHeadPx","isTopNote","getLineForRest","getGlyph","getGlyphWidth","getDuration","isDotted","getModifiersByType","getBeam","beam","checkBeam","hasBeam","setBeam","signature","filter","getRightParenthesisPx","getLeftParenthesisPx","getFirstDotPx","getMembers","getState","glyphPx","getNoteStartX","getPoint","getTieRightX","tieStartX","getTieLeftX","tieEndX","getKeys","StaveModifierPosition","BarlineType","ChordSymbolHorizontalJustify","ChordSymbolVerticalJustify","SymbolTypes","SymbolModifiers","StaveModifier","placeGlyphOnLine","customShift","getPadding","setPadding","setLayoutMetrics","layoutMetrics","getLayoutMetrics","typeString","single","SINGLE","double","DOUBLE","end","END","repeatBegin","REPEAT_BEGIN","repeatEnd","REPEAT_END","repeatBoth","REPEAT_BOTH","none","NONE","thickness","TYPE","widths","paddings","layoutMetricsMap","xMin","xMax","paddingLeft","paddingRight","BEGIN","setType","getType","drawVerticalBar","drawVerticalEndBar","drawRepeatBar","double_bar","staveCtx","botY","getBottomLineBottomY","fillRect","begin","dot_x","dot_radius","dot_y","BarNote","barline","Bend","bends","last_width","stringPos","release","phrase","tap","line_width","line_style","bend_width","release_width","updateWidth","setTap","getText","getTextHeight","totalWidth","additional_width","draw_width","lowestY","bend_height","annotation_y","renderBend","cp_x","cp_y","renderRelease","renderArrowHead","yBase","renderText","render_x","measureText","last_bend","last_bend_draw_width","last_drawn_width","ChordSymbol","superSubRatio","global","NO_TEXT_FORMAT","val","noFormat","getMetricForGlyph","glyphCode","engravingFontResolution","spacingBetweenBlocks","getWidthForGlyph","metric","getYShiftForGlyph","yOffset","getXShiftForGlyph","leftSideBearing","kerningOffset","chordSymbol","lowerKerningText","upperKerningText","isSuperscript","symbolModifier","SUPERSCRIPT","isSubscript","SUBSCRIPT","minPadding","symbols","nonSuperWidth","symbol","fontAdj","glyphAdj","symbolWidth","lineSpaces","vAlign","j","symbolBlocks","sup","sub","superSubScale","adj","symbolType","GLYPH","superSubFontSize","TEXT","getYOffsetForText","over","prev","setEnableKerning","updateKerningAdjustments","updateOverBarAdjustments","getVertical","getReportWidth","getHorizontal","horizontal","vertical","useKerning","reportWidth","setReportWidth","barIndex","findIndex","xoff","yoff","symIndex","accum","getKerningAdjustment","currSymbol","prevSymbol","adjustment","preKernUpper","preKernLower","some","xx","kerningOffsetPixels","getSymbolBlock","_c","symbolBlock","glyphArgs","glyphPoints","addSymbolBlock","parameters","addText","addTextSuperscript","addTextSubscript","addGlyphSuperscript","addGlyph","addGlyphOrText","char","addLine","setVertical","vj","setHorizontal","hj","stem_base","isSuper","isSub","smallerFontSize","diminished","dim","halfDiminished","augmented","majorSeventh","leftParen","rightParen","leftBracket","rightBracket","leftParenTall","rightParenTall","symbolTypes","symbolModifiers","getDots","buildAndAttach","notes","all","dot","setDotShiftY","dot_list","max_shift_map","note_id","dot_shift","x_width","last_line","last_note","prev_dotted_space","half_shiftY","radius","forceFlagRight","FretHandFinger","nums","nums_list","prev_note","shiftLeft","shiftRight","pos","textHeight","shiftL","shiftR","numShiftL","numShiftR","xWidthL","xWidthR","lastLine","lastNote","num_shift","numWidth","fingerings","fingeringString","number","Fingering","fingering","finger","x_offset","setFretHandFinger","getFretHandFinger","setOffsetX","setOffsetY","NoteHead","custom_glyph","stem_up_x_offset","stem_down_x_offset","note_type","glyph_code","custom_glyph_code","slashed","isDisplaced","getLine","setLine","displacementStemAdjustment","fontShift","displacedFontShift","half_spacing","min_y","getYForNote","head_x","categorySuffix","staveSpace","breve_lines","drawSlashNoteHead","setStem","buildStem","buildFlag","hasFlag","flagCode","getBaseCustomNoteHeadGlyphProps","getStemLength","getStemExtension","getBeamCount","getStemMinimumLength","setStemDirection","offsets","offsetYBaseStemUp","offsetYTopStemUp","offsetYBaseStemDown","offsetYTopStemDown","getCenterGlyphX","stem_extension_override","setStemLength","drawStem","stemOptions","shiftRestVertical","dir","delta","maxLine","minLine","setKeyLine","getKeyLine","STEM_UP","STEM_DOWN","LEDGER_LINE_OFFSET","minNoteheadPadding","notesList","sortedKeyProps","minL","stemMax","stemMin","maxL","isrest","voice_shift","getVoiceShiftWidth","is_displaced","noteU","noteM","noteL","voiceXShift","lineSpacing","lineDiff","noteUHead","noteLHead","centerRest","ledgerLineStyle","use_default_head_x","_noteHeads","calculateKeyProps","auto_stem","autoStem","noteHeadStyles","noteHead","buildNoteHeads","noteHeadStyle","calcNoteDisplacements","noteProps","notehead","calculateOptimalStemDirection","minY","maxY","halfLineSpacing","frac","resultLine","thisLine","isChord","getNoteHeadBounds","setNoteDisplaced","getRightShift","restLine","isInnerNoteIndex","setStemStyle","getStemStyle","setLedgerLineStyle","getLedgerLineStyle","setFlagStyle","getFlagStyle","setKeyStyle","noteHeadPadding","shouldDrawFlag","nonDisplacedX","displacedX","highestDisplacedLine","lowestDisplacedLine","yTop","Infinity","yBottom","highestLine","lowestLine","highestNonDisplacedLine","lowestNonDisplacedLine","displaced_x","non_displaced_x","highest_line","lowest_line","highest_displaced_line","lowest_displaced_line","highest_non_displaced_line","lowest_non_displaced_line","getNoteHeadBeginX","getNoteHeadEndX","noteHeads","note_heads","drawLedgerLines","doubleWidth","min_x","drawLedgerLine","normal","ledgerWidth","getDefaultLedgerLineStyle","drawModifiers","noteheadParam","noteheadStyle","hasNoBeam","drawFlag","_d","_e","noteStemHeight","flagX","flagY","getStaveNoteScale","drawNoteHeads","super_stem_extension","mid_line_distance","lines_over_octave_from_mid_line","spacing_between_lines","xBegin","shouldRenderStem","stemX","StaveTie","setNotes","cp1","cp2","text_shift_x","first_x_shift","last_x_shift","tie_spacing","first_note","first_indices","last_indices","isPartial","renderTie","first_ys","last_ys","last_x_px","first_x_px","first_y_px","last_y_px","top_cp_y","bottom_cp_y","center_x","getNotes","getTieStartX","getTieEndX","TabTie","createHammeron","createPulloff","VoiceMode","Voice","Mode","time","voiceTime","resolutionMultiplier","mode","STRICT","ticksUsed","largestTickWidth","softmaxFactor","totalTicks","smallestTickCount","getTotalTicks","getTicksUsed","getLargestTickWidth","getSmallestTickCount","getMode","setMode","getResolutionMultiplier","getActualResolution","tickable","setStrict","strict","SOFT","isComplete","FULL","setSoftmaxFactor","factor","expTicksUsed","reCalculateExpTicksUsed","softmax","tickValue","v","exp","addTickable","addTickables","gracenote_groups","group_list","gracenote_group","is_stavenote","formatWidth","group_shift","grace_notes","show_slur","slur","slur_y_shift","beams","Formatter","joinVoices","getMinTotalWidth","beamNotes","Beam","beam_width","partial_beam_length","graceNote","TieClass","NoteSubGroup","groups","group","Ornament","ornament","ornamentRelease","ornamentAttack","reportedWidth","ornamentArticulation","ornamentNoteTransition","ornamentAlignWithNoteHead","ornamentMetrics","delayed","accidentalLowerPadding","accidentalUpperPadding","adjustForStemDirection","stemUpYOffset","xOffset","setDelayed","setUpperAccidental","accid","accidentalUpper","setLowerAccidental","accidentalLower","stemDir","stemExtents","isPlacedOnNoteheadSide","glyphYBetweenLines","glyphX","glyphY","delayXShift","startX","nextContext","Parenthesis","parentheses","x_widthL","x_widthR","parenthesis","isHTMLCanvas","HTMLCanvasElement","toDataURL","isHTMLDiv","HTMLDivElement","appendChild","CanvasContext","CANVAS_BROWSER_SIZE_LIMIT","sanitizeCanvasDims","limit","context2D","canvas","clearRect","cls","setBackgroundFillStyle","blur","getTransform","setLineCap","capType","lineCap","setLineDash","dash","resize","devicePixelRatio","dpr","rect","cp1x","cp1y","cp2x","cp2y","cpx","cpy","startAngle","endAngle","counterclockwise","fontBoundingBoxAscent","fontBoundingBoxDescent","actualBoundingBoxAscent","actualBoundingBoxDescent","ATTRIBUTES_TO_IGNORE","path","SVG_NS","TWO_PI","SVGContext","backgroundFillStyle","fontCSSString","svg","parent","pen","defaultFontAttributes","scaleX","scaleY","attributes","groupAttributes","applyAttributes","shadow_attributes","state_stack","svgElementType","createElementNS","lineDash","visibleWidth","visibleHeight","setViewBox","viewBox_or_minX","viewBoxString","attrNamesToIgnore","nodeName","attrName","setAttributeNS","lastChild","removeChild","rectangle","x0","cos","y0","sin","tmpStartTest","tmpEndTest","large","sweep","getShadowStyle","sa","measureTextCache","txt","textContent","savedState","fontAttributes","RendererBackends","RendererLineEndType","TextJustification","VoltaType","measureImpl","getBBox","Renderer","buildContext","elementId","backend","background","renderer","lastContext","getCanvasContext","Backends","CANVAS","getSVGContext","SVG","drawDashedLine","fromX","fromY","toX","toY","dashPattern","dx","dy","angle","atan2","idx","dashLength","nx","ny","arg0","arg1","maybeElement","willReadFrequently","LineEndType","StringNumber","stringNumber","verticalPadding","stemPadding","leftPadding","rightPadding","extraXSpaceForDisplacedNotehead","glyphLine","num_shiftR","num_width","num_x_shift","string_number","stem_offset","dashed","leg","drawCircle","setLineEndType","setStringNumber","setLastNote","setDashed","setDrawCircle","len","pattern","Stroke","strokes","strokeList","string","getPositions","strokeShift","all_voices","addEndNote","note_end","line_space","arrow","arrow_shift_x","arrow_y","text_y","Type","BRUSH_DOWN","BRUSH_UP","ROLL_DOWN","RASQUEDO_DOWN","ROLL_UP","RASQUEDO_UP","ARPEGGIO_DIRECTIONLESS","strokeLine","Vibrato","vibratos","vibrato","harsh","vibrato_width","wave_height","wave_width","wave_girth","setVibratoWidth","setHarsh","vx","vy","renderVibrato","opts","num_waves","ModifierContext","members","formatted","member","getLeftShift","Clef","types","tab","annotationSmufl","attachment","KeySignature","cancelKeySpec","alterKeySpec","accList","setKeySig","glyphFontScale","xPositions","paddingForced","convertToGlyph","nextAcc","accGlyphData","extraWidth","xPosition","cancelKey","convertToCancelAccList","cancel_accList","different_types","naturals","cancelled","concat","addToStave","convertAccLines","customLines","offset","alterKey","convertToAlterAccList","firstAccidentalType","cancelAccList","getEndClef","getClef","Repetition","symbol_type","setShiftX","setShiftY","CODA_RIGHT","drawCodaFixed","CODA_LEFT","drawSymbolText","SEGNO_LEFT","drawSignoFixed","SEGNO_RIGHT","DC","DC_AL_CODA","DC_AL_FINE","DS","DS_AL_CODA","DS_AL_FINE","FINE","TO_CODA","draw_coda","text_x","symbol_x","modifierWidth","getVerticalBarWidth","StaveSection","section","drawRect","shift_x","setStaveSection","textY","headroom","StaveTempo","tempo","setTempo","bpm","noteTextFont","noteTextFormatter","stem_height","flagMetrics","TextNote","GLYPHS","segno","mordent_upper","mordent_lower","p","z","coda","pedal_open","pedal_close","caesura_straight","caesura_curved","breath","tick","superscript","subscript","smooth","justification","struct","Justification","StaveText","setStaveText","setText","getBottomLineY","Volta","volta","top_y","vert_height","BEGIN_END","TimeSignatureGlyph","timeSignature","topDigits","botDigits","topWidth","timeSigType","topGlyph","botWidth","botGlyph","lineShift","topStartX","botStartX","start_x","topLine","bottomLine","TimeSignature","timeSpec","customPadding","validate_args","is_numeric","fontLineShift","setTimeSig","parseTimeSpec","numbers","test","assertIsValidTimeSig","makeTimeSignatureGlyph","setGlyph","getTimeSpec","getIsNumeric","setIsNumeric","isNumeric","SORT_ORDER_BEG_MODIFIERS","SORT_ORDER_END_MODIFIERS","Stave","defaultPadding","end_x","measure","endClef","vertical_bar_width","num_lines","fill_style","left_bar","right_bar","spacing_between_lines_px","space_above_staff_ln","space_below_staff_ln","top_text_position","bottom_text_position","line_config","bounds","defaultLedgerLineStyle","resetLines","addEndModifier","setDefaultLedgerLineStyle","visible","setNoteStartX","getNoteEndX","setNumLines","mod","setMeasure","getMeasure","getModifierXShift","begBarline","setRepetitionType","setVoltaType","number_t","setSection","staveSection","getLineForY","setBegBarType","setEndBarType","setClefLines","clefSpec","setClef","addClef","setEndClef","setKeySignature","addKeySignature","setEndKeySignature","setTimeSignature","timeSignatures","addTimeSignature","setEndTimeSignature","addEndClef","addEndTimeSignature","addTrebleGlyph","noPosition","noCategory","sortByCategory","items","order","temp","endBarline","begModifiers","endModifiers","lastBarlineIdx","getConfigForLines","setConfigForLine","line_number","setConfigForLines","lines_configuration","formatBegModifiers","staves","adjustCategoryStartX","minStartX","adjustX","allModifiers","bAdjust","maxX","drawBoldDoubleLine","topX","StaveConnector","BOLD_DOUBLE_LEFT","BOLD_DOUBLE_RIGHT","variableWidth","top_stave","bottom_stave","texts","newType","content","SINGLE_RIGHT","THIN_DOUBLE","attachment_height","SINGLE_LEFT","BRACE","x3","y3","cpx1","cpy1","cpx2","cpy2","cpx3","cpy3","cpx4","cpy4","cpx5","cpy5","cpx6","cpy6","cpx7","cpy7","cpx8","cpy8","BRACKET","singleRight","singleLeft","brace","bracket","boldDoubleLeft","boldDoubleRight","thinDouble","TickContext","getNextContext","tContext","contexts","tContexts","tickID","currentTick","maxTicks","maxTickable","minTicks","minTickable","xBase","tickablesByVoice","totalLeftPx","totalRightPx","getTickID","getXBase","setXBase","getXOffset","getMaxTicks","getMinTicks","getMaxTickable","getMinTickable","getTickableForVoice","voiceIndex","getTickablesByVoice","getCenterAlignedTickables","getCurrentTick","setCurrentTick","getRestLineForNextNoteGroup","currRestLine","currNoteIndex","nextRestLine","noteIndex","SimpleFormat","paddingBetween","accumulator","plotDebugging","stavePadding","contextGaps","gaps","gap","totalCost","toFixed","total","FormatAndDraw","auto_beam","align_rests","applyAndGetBeams","formatToStave","FormatAndDrawTab","tabstave","tabnotes","autobeam","notevoice","tabvoice","AlignRestsToNotes","alignAllNotes","alignTuplets","currTickable","prevTickable","formatterOptions","globalSoftmax","maxIterations","justifyWidth","durationStats","minTotalWidth","hasMinTotalWidth","tickContexts","array","list","modifierContexts","lossHistory","alignRests","preCalculateMinTotalWidth","unalignedPadding","unalignedCtxCount","wsum","dsum","createTickContexts","contextList","contextMap","wavg","wvar","ll","wpads","davg","dvar","dpads","padmax","unalignedPad","createModifierContexts","tickToContextMap","integerTicks","staveTickToContextMap","newContext","makeContext","addToContext","tickList","createContexts","contextArray","getTickContexts","renderingContext","voicesParam","evaluate","firstContext","calculateIdealDistances","adjustedJustifyWidth","backTickable","prevContext","backVoices","matchingVoices","maxNegativeShiftPx","expectedDistance","thisTickable","insideLeftEdge","backMetrics","insideRightEdge","fromTickable","fromTickablePx","shiftToIdealDistances","idealDistances","centerX","spaceAccum","contextX","ideal","errorPx","negativeShiftPx","configMinPadding","configMaxPadding","targetWidth","distances","actualWidth","minDistance","mdCalc","di","calcMinDistance","paddingMaxCalc","curTargetWidth","lastTickablePadding","lastTickable","tickWidth","paddingMax","paddingMin","prevTick","prevMetrics","currMetrics","leftNoteEdge","rightNote","rightMetrics","stats","count","updateStats","totalDeviation","tune","alpha","current","cost","optionsParam","TupletLocation","Tuplet","LOCATION_TOP","LOCATION_BOTTOM","NESTING_OFFSET","tupletMetrics","numerator_glyphs","denom_glyphs","num_notes","beats_occupied","beatsOccupiedDeprecationWarning","notes_occupied","bracketed","ratioed","setTupletLocation","location","resolveGlyphs","attach","detach","setBracketed","setRatioed","getBeatsOccupied","setBeatsOccupied","beats","setNotesOccupied","unshift","getNestedTupletCount","maxTupletCount","countTuplets","minTupletCount","tupletCount","getYPosition","nested_tuplet_y_offset","topModifierOffset","modLines","modY","noteHeadOffset","stemOffset","lineCheck","nn","bottom_y","addGlyphWidth","notation_start_x","shiftY","colon_x","colon_radius","calculateStemDirection","lineSum","keyProp","BEAM_LEFT","BEAM_RIGHT","BEAM_BOTH","getDefaultBeamGroups","time_sig","beatTotal","beatValue","generateBeams","config","tickGroups","unprocessedNotes","currentTickGroup","noteGroups","currentGroup","nextTickGroup","nextGroup","currentGroupTotalTicks","unprocessedNote","ticksPerGroup","vf_notes","memo","unbeamable","createGroups","sanitizedGroups","tempGroup","isFirstOrLast","breaksOnEachRest","beam_rests","breaksOnFirstOrLastRest","beam_middle_only","breakOnStemChange","maintain_stem_directions","prevDirection","isUnbeamableDuration","sanitizeGroups","findFirstNote","applyStemDirection","beamedNoteGroups","beamable","allTuplets","uniqueTuplets","noteTuplet","getTuplets","show_stemlets","secondary_breaks","secondary_break_ticks","flat_beams","flat_beam_offset","slope","forcedPartialDirections","stem_weight","break_on_indices","max_slope","min_slope","slope_iterations","slope_cost","stemlet_extension","min_flat_beam_offset","beamCount","breakSecondaryAt","indices","setPartialBeamSideAt","side","unsetPartialBeamSideAt","getSlopeY","calculateSlope","firstNote","initialSlope","firstStemTipY","firstStemX","getStemSlope","minCost","MAX_VALUE","bestSlope","totalStemExtension","yShiftTemp","adjustedStemTipY","diff","idealSlope","calculateFlatSlope","extremeY","extremeBeamCount","currentExtreme","extremeTest","newOffset","getBeamYToDraw","beamY","applyStemExtensions","beamedStemTipY","preBeamExtension","beamExtension","crossStemExtension","totalBeamWidth","lookupBeamDirection","prev_tick","next_tick","forcedBeamDirection","lookup_duration","prev_note_gets_beam","next_note_gets_beam","note_gets_beam","getBeamLines","tick_of_duration","beam_started","beam_lines","current_beam","previous_should_break","tick_tally","should_break","next_note","beam_alone","beam_direction","last_beam","drawStems","drawBeamLines","valid_beam_durations","beamThickness","beamLines","beam_line","startBeamX","startBeamY","lastBeamX","lastBeamY","ClefNote","abs_x","Crescendo","extend_left","extend_right","decrescendo","setHeight","setDecrescendo","decresc","tick_context","next_context","begin_x","half_height","reverse","renderHairpin","CurvePosition","Curve","nearHead","NEAR_HEAD","nearTop","NEAR_TOP","from","to","position_end","invert","cps","renderCurve","first_x","first_y","last_x","last_y","cp0x","cp0y","cp_spacing","end_metric","Parser","flattenMatches","matchedString","results","grammar","errorPos","expect","matchFail","returnPos","matchSuccess","matchToken","token","noSpace","regexp","RegExp","success","incrementPos","expectOne","rule","maybe","allMatches","oneMatch","localPos","or","gotOne","numMatches","expectOneOrMore","more","expectZeroOrMore","ruleFunc","bind","oneOrMore","zeroOrMore","matches","run","EasyScore","EasyScoreGrammar","PIECE","PIECES","EOL","CHORDORNOTE","PARAMS","commitPiece","COMMA","DURATION","DOTS","OPTS","CHORD","SINGLENOTE","LPAREN","NOTES","RPAREN","addChord","NOTE","NOTENAME","ACCIDENTAL","OCTAVE","addSingleNote","MICROTONES","ACCIDENTALS","DOT","setNoteDots","SLASH","MAYBESLASH","TYPES","setNoteType","DURATIONS","setNoteDuration","LBRACKET","KEYVAL","KEYVALS","RBRACKET","KEY","EQUALS","VAL","addNoteOption","SVAL","DVAL","Piece","chord","Builder","commitHooks","elements","rollingDuration","resetPiece","getElements","addCommitHook","commitHook","piece","addNote","standardAccidentals","notePiece","GhostNote","setId","commaSeparatedRegex","setClass","defaults","throwOnError","parser","ERROR_MSG","parameter","GlyphNote","ignoreTicks","SCALE","slash","ret","staveNoteScale","offsetScale","slashBBox","calcBeamedNotesSlashBBox","noteHeadBounds","defaultStemExtention","defaultOffsetY","slashStemOffset","slashBeamOffset","protrusions","beam_slope","beam_angle","atan","iPointOnBeam","slash_angle","protrusion_stem_dx","protrusion_stem_dy","protrusion_beam_dx","protrusion_beam_dy","stem0X","stemY","KeySigNote","semibreve_rest","MultiMeasureRest","number_of_measures","xs","hasPaddingLeft","hasPaddingRight","hasLineThickness","hasSymbolSpacing","padding_left","padding_right","line_thickness","symbol_spacing","use_symbols","show_number","number_line","number_glyph_point","serif_thickness","semibreve_rest_glyph_scale","getXs","drawLine","spacingBetweenLines","lineThicknessHalf","serifThickness","bot","leftIndented","rightIndented","lineTop","lineBottom","drawSymbols","n4","n2","n1","get_semibreve_rest","rest_scale","rest_width","yMiddle","timeSig","drawPedalGlyph","glyph_data","PedalMarking","createSustain","createSostenuto","pedal","MIXED","setCustomText","createUnaCorda","custom_depress_text","custom_release_text","bracket_height","text_margin_right","bracket_line_width","depress","drawBracketed","prev_x","prev_y","is_pedal_depressed","next_is_same","prev_is_same","drawText","pedal_depress","pedal_release","mixed","CODES","RepeatNote","drawArrowHead","StaveLine","line_dash","rounded_end","draw_start_arrow","draw_end_arrow","arrowhead_length","arrowhead_angle","text_position_vertical","TextVerticalPosition","text_justification","applyLineStyle","applyFontStyle","drawArrowLine","pt1","pt2","both_arrows","distance","ratio","end_y","start_y","line_angle","angle1","angle2","top_x","bottom_x","start_position","end_position","first_index","last_index","upwards_slope","notehead_width","vertical_position","System","partStaves","partStaveInfos","partVoices","spaceBetweenStaves","autoWidth","noJustification","debugFormatter","formatIterations","noPadding","details","formatOptions","getStaves","getVoices","addConnector","connector","addStave","staveOptions","spaceAbove","spaceBelow","debugNoteMetrics","addVoices","options_details","debugNoteMetricsYs","part","lastY","glyphPropsArr","positions","ghost","draw_dots","draw_stem_through_stave","setGhost","getStemY","stemDownLine","stemStartLine","flag_x","flag_y","drawStemThrough","stemThrough","stemLines","unused_strings","up_stem","down_stem","line_spacing","total_lines","stem_lines","strings","containsLastString","containsFirstString","line_ys","isTopBound","isBottomBound","getPartialStemLines","strings_used","stem_through","getUnusedStringGroups","drawPositions","tab_x","render_stem","TabStave","addTabGlyph","TextBracket","TextBracketPosition","Positions","PositionsString","stop","show_bracket","underline_superscript","main_measure","main_width","main_height","super_y","super_measure","super_width","super_height","line_y","TextDynamics","sequence","glyph_font_size","total_width","letter","letter_x","current_letter","TimeSigNote","tsGlyph","VibratoBracket","bracket_data","stop_x","Factory","newFromElementId","renderQ","systems","initRenderer","ghostNote","textNote","barNote","clefNote","timeSigNote","keySigNote","hJustify","vJustify","kerning","upperAccidental","lowerAccidental","numMeasures","multiMeasureRest","secondaryBeamBreaks","partialBeamDirections","curve","tie","vibratoBracket","textBracket","system","GraceTabNote","KeyManager","setKey","getKey","scaleMapByValue","originalScaleMapByValue","getAccidental","selectNote","scaleNote","modparts","change","valueNote","originalValueNote","StaveHairpin","FormatByTicksAndDraw","ppt","pixelsPerTick","l_shift_px","left_shift_ticks","r_shift_px","right_shift_ticks","hairpin_options","left_shift_px","right_shift_px","setRenderOptions","hairpin","dis","staff_height","l_shift","r_shift","CRESC","DECRESC","TabSlide","SLIDE_UP","SLIDE_DOWN","createSlideUp","createSlideDown","first_fret","last_fret","slide_y","Tremolo","y_spacing_scale","extra_stroke_scale","y_spacing","Tuning","names","standard","dagdad","dropd","standardBanjo","doubleCBanjo","doubleDBanjo","sawmillBanjo","tuningString","tuningValues","setTuning","noteToInteger","getValueForString","stringNum","getValueForFret","fretNum","stringValue","getNoteForFret","Flow","BUILD","VERSION","DATE","setMusicFont","fontNames","fetchMusicFont","fontModuleOrPath","getMusicFont","getMusicFontStack","CommonMetrics","smufl","endPaddingMax","endPaddingMin","unalignedNotePadding","csymDiminished","csymHalfDiminished","csymAugmented","csymParensLeftTall","csymParensRightTall","csymBracketLeftTall","csymBracketRightTall","csymParensLeftVeryTall","csymParensRightVeryTall","csymDiagonalArrangementSlash","csymMinor","csymMajorSeventh","accidentalSharp","accidentalFlat","clef_default","shiftX","clef_small","brassScoop","brassDoitMedium","brassFallLipShort","brassLiftMedium","brassFallRoughMedium","brassBend","brassMuteClosed","brassMuteOpen","brassFlip","brassJazzTurn","brassSmear","default","gracenote","pedalMarking","digits","shiftLine","articStaccatissimoAbove","articStaccatissimoBelow","tremolo","offsetYStemUp","offsetYStemDown","offsetXStemUp","offsetXStemDown","grace","staveRepetition","symbolText","offsetX","offsetY","heightAdjustmentForFlag","noteheadTriangleUpHalf","noteheadTriangleUpBlack","noteheadTriangleUpWhole","noteheadXHalf","noteheadXBlack","noteheadXWhole","noteheadHalf","noteheadBlack","noteheadSquareWhite","staveTempo","gClef","clefNote_default","clefNote_small","stroke_straight","arrowheadBlackDown","arrowheadBlackUp","stroke_wiggly","breathMarkTick","breathMarkComma","ornamentTrill","ornamentTurn","ornamentTurnSlash","ornamentMordent","ornamentShortTrill","CustomFont","vexAccidentalMicrotonal1","vexAccidentalMicrotonal3","vexAccidentalMicrotonal4","vexNoteHeadRectBlack","vexNoteHeadRectWhite","vexWiggleArpeggioUp","LelandFont","bracketTop","bracketBottom","cClef","fClef","unpitchedPercussionClef1","timeSig0","timeSig1","timeSig2","timeSig3","timeSig4","timeSig5","timeSig6","timeSig7","timeSig8","timeSig9","timeSigCommon","timeSigCutCommon","timeSigPlus","noteheadDoubleWhole","noteheadWhole","noteheadCircleX","noteheadDoubleWholeSquare","noteheadSquareBlack","noteheadSlashedDoubleWhole1","noteheadSlashedWhole1","noteheadSlashedHalf1","noteheadSlashedBlack1","noteheadSlashedDoubleWhole2","noteheadSlashedWhole2","noteheadSlashedHalf2","noteheadSlashedBlack2","noteheadDiamondDoubleWhole","noteheadDiamondWhole","noteheadDiamondHalf","noteheadDiamondBlack","noteheadParenthesisRight","noteheadParenthesisLeft","noteheadMoonBlack","noteheadTriangleLeftBlack","noteheadTriangleRightBlack","noteheadTriangleRoundDownBlack","augmentationDot","tremolo1","flag8thUp","flag8thDown","flag16thUp","flag16thDown","flag32ndUp","flag32ndDown","flag64thUp","flag64thDown","flag128thUp","flag128thDown","accidentalNatural","accidentalDoubleSharp","accidentalDoubleFlat","accidentalParensLeft","accidentalParensRight","accidentalQuarterToneFlatStein","accidentalThreeQuarterTonesFlatZimmermann","accidentalQuarterToneSharpStein","accidentalThreeQuarterTonesSharpStein","accidentalBuyukMucennebFlat","accidentalBuyukMucennebSharp","accidentalBakiyeFlat","accidentalKucukMucennebSharp","articAccentAbove","articAccentBelow","articTenutoAbove","articTenutoBelow","articStaccatoAbove","articStaccatoBelow","articMarcatoAbove","articMarcatoBelow","fermataAbove","fermataBelow","fermataLongAbove","fermataLongBelow","fermataVeryLongAbove","fermataVeryLongBelow","fermataShortAbove","fermataShortBelow","caesura","caesuraCurved","restMaxima","restDoubleWhole","restWhole","restWholeLegerLine","restHalf","restHalfLegerLine","restQuarter","rest8th","rest16th","rest32nd","rest64th","rest128th","dynamicPiano","dynamicMezzo","dynamicForte","dynamicRinforzando","dynamicSforzando","dynamicZ","ornamentTremblement","ornamentPrecompAppoggTrill","ornamentPrecompSlideTrillDAnglebert","ornamentPrecompSlideTrillBach","ornamentPrecompTrillSuffixDandrieu","ornamentPrecompDoubleCadenceUpperPrefix","ornamentPrecompTrillLowerSuffix","stringsDownBow","stringsUpBow","stringsHarmonic","pluckedSnapPizzicatoAbove","pluckedSnapPizzicatoBelow","keyboardPedalPed","keyboardPedalUp","wiggleArpeggiatoUp","repeat1Bar","repeat2Bars","repeat4Bars","repeatBarSlash","generatedOn","PetalumaScriptFont","$","I","J","K","N","O","Q","U","V","Y","Z","_","l","RobotoSlabFont","SansFontBold","SansFont","Description","SerifFont","Vex","sortAndUnique","cmp","eq","newArr","last","contains","canvasSelector","benchmark","start_time","Date","getTime","stackTrace","fontData","description","loadTextFonts"],"sourceRoot":""}